import { CategoryXAxis } from "./CategoryXAxis";
import { ITimeRangeSelectorAxis } from "./ITimeRangeSelectorAxis";
import { TimeAxisLabelFormatCollection } from "./TimeAxisLabelFormatCollection";
import { Rect } from "igniteui-react-core/ES2015/Rect";
import { ScalerParams } from "./ScalerParams";
import { CategoryMode } from "./CategoryMode";
import { IList$1, EventArgs, Type } from "igniteui-react-core/ES2015/type";
import { IGetItemAtIndex } from "igniteui-react-core/ES2015/IGetItemAtIndex";
import { FastItemsSourceEventArgs } from "igniteui-react-core/ES2015/FastItemsSourceEventArgs";
/**
 * @hidden
 */
export declare class OrdinalTimeXAxis extends CategoryXAxis implements ITimeRangeSelectorAxis {
    static $t: Type;
    dx(a: number, b: Rect, c: Rect): number;
    dw(a: number, b: ScalerParams, c: CategoryMode): number;
    dv(a: number, b: ScalerParams): number;
    gl(a: IList$1<number[]>, b: IList$1<number>, c: number, d: number, e: ScalerParams): void;
    gm(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    d0(a: number, b: Rect, c: Rect): number;
    getUnscaledValue3(a: number, b: Rect, c: Rect, d: CategoryMode): number;
    dy(a: number, b: ScalerParams): number;
    dz(a: number, b: ScalerParams, c: CategoryMode): number;
    gn(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    constructor();
    protected gt(a: any, b: string, c: any, d: any): void;
    private lo;
    actualMinimumValue: Date;
    private ln;
    actualMaximumValue: Date;
    private ls;
    visibleMinimum: Date;
    private lr;
    visibleMaximum: Date;
    private l7;
    private l8;
    private lx;
    dateTimeMemberPath: string;
    private ll;
    private lm;
    protected hh(a: Rect, b: Rect): void;
    getWindowRectForSelection(a: Date, b: Date): Rect;
    private lj;
    readonly lk: TimeAxisLabelFormatCollection;
    private l6;
    gv(a: string): void;
    e5(a: any): any;
    fi(a: number): string;
    private readonly l5;
    protected kx(): IGetItemAtIndex;
    protected hg(a: Rect, b: Rect): void;
    protected k3(a: number, b: ScalerParams): number;
    protected k2(a: number, b: number, c: boolean, d: ScalerParams): number;
    private l4;
    private l3;
    itemLabelFormat(): string;
    private lq;
    minimumValue: Date;
    private lp;
    maximumValue: Date;
    cm(): boolean;
    visibleRangeChanged: (sender: any, e: EventArgs) => void;
    protected kj(a: FastItemsSourceEventArgs): void;
    readonly isVertical: boolean;
    j$c(a: number, b: ScalerParams): number;
    j$b(a: number, b: ScalerParams): number;
    j$d(a: IList$1<number[]>, b: IList$1<number>, c: number, d: number, e: ScalerParams): void;
    j$e(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    j$f(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    readonly j$a: boolean;
}
