import { CategoryAxisBase } from "./CategoryAxisBase";
import { DependencyProperty } from "igniteui-react-core/ES2015/DependencyProperty";
import { AxisOrientation } from "./AxisOrientation";
import { AxisView } from "./AxisView";
import { Rect } from "igniteui-react-core/ES2015/Rect";
import { Point, IList$1, Type } from "igniteui-react-core/ES2015/type";
import { ScalerParams } from "./ScalerParams";
import { CategoryMode } from "./CategoryMode";
import { SeriesViewer } from "./SeriesViewer";
import { AxisLabelPanelBase } from "./AxisLabelPanelBase";
import { CategoryAxisBaseView } from "./CategoryAxisBaseView";
/**
 * @hidden
 */
export declare class CategoryYAxis extends CategoryAxisBase {
    static $t: Type;
    a1(): AxisView;
    gr(a: AxisView): void;
    kw: CategoryYAxisView;
    protected get_ce(): boolean;
    du(): number;
    kt(a: Point, b: boolean, c: number): Rect;
    protected kv(a: IList$1<number[]>): number[][];
    gl(a: IList$1<number[]>, b: IList$1<number>, c: number, d: number, e: ScalerParams): void;
    constructor();
    static readonly le: DependencyProperty;
    k2: number;
    private kx;
    ky: number;
    d6(): number;
    static readonly lf: DependencyProperty;
    k3: number;
    private kz;
    k0: number;
    private k5;
    k7: number;
    private k4;
    k6: number;
    dv(a: number, b: ScalerParams): number;
    private k1;
    dy(a: number, b: ScalerParams): number;
    dz(a: number, b: ScalerParams, c: CategoryMode): number;
    getUnscaledValue3(a: number, b: Rect, c: Rect, d: CategoryMode): number;
    ld(a: number, b: number): void;
    as(): AxisLabelPanelBase;
    di(): number;
    getCategorySize(a: Rect, b: Rect, c: Rect): number;
    jq(a: Rect, b: Rect, c: Rect): number;
    getGroupCenter(a: number, b: Rect, c: Rect, d: Rect): number;
    lc(a: any): void;
    cm(): boolean;
    jh(a: SeriesViewer): boolean;
    protected g6(a: boolean): void;
    protected get_az(): AxisOrientation;
    readonly az: AxisOrientation;
    readonly isVertical: boolean;
    j$c(a: number, b: ScalerParams): number;
    j$b(a: number, b: ScalerParams): number;
    j$d(a: IList$1<number[]>, b: IList$1<number>, c: number, d: number, e: ScalerParams): void;
    j$e(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    j$f(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    readonly j$a: boolean;
}
/**
 * @hidden
 */
export declare class CategoryYAxisView extends CategoryAxisBaseView {
    static $t: Type;
    protected bg: CategoryYAxis;
    constructor(a: CategoryYAxis);
}
