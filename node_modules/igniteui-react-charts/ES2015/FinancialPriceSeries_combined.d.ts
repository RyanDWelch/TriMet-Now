import { FinancialSeries } from "./FinancialSeries";
import { ITrendLineSeries } from "./ITrendLineSeries";
import { TrendLineType } from "igniteui-react-core/ES2015/TrendLineType";
import { DependencyProperty } from "igniteui-react-core/ES2015/DependencyProperty";
import { Brush } from "igniteui-react-core/ES2015/Brush";
import { PenLineCap } from "igniteui-react-core/ES2015/PenLineCap";
import { DoubleCollection } from "igniteui-react-core/ES2015/DoubleCollection";
import { PriceDisplayType } from "./PriceDisplayType";
import { SeriesView } from "./SeriesView";
import { Type, Point } from "igniteui-react-core/ES2015/type";
import { CategoryFrame } from "./CategoryFrame";
import { FastItemsSourceEventAction } from "igniteui-react-core/ES2015/FastItemsSourceEventAction";
import { FinancialSeriesView } from "./FinancialSeriesView";
import { FinancialBucketCalculator } from "./FinancialBucketCalculator";
import { ITrendLineManager } from "./ITrendLineManager";
import { Axis } from "./Axis";
import { SeriesHitTestMode } from "./SeriesHitTestMode";
import { Rect } from "igniteui-react-core/ES2015/Rect";
import { List$1 } from "igniteui-react-core/ES2015/List$1";
import { AxisRange } from "./AxisRange";
import { Pool$1 } from "igniteui-react-core/ES2015/Pool$1";
import { Path } from "igniteui-react-core/ES2015/Path";
import { GeometryGroup } from "igniteui-react-core/ES2015/GeometryGroup";
import { RenderingContext } from "igniteui-react-core/ES2015/RenderingContext";
/**
 * @hidden
 */
export declare class FinancialPriceSeries extends FinancialSeries implements ITrendLineSeries {
    static $t: Type;
    protected bf(): SeriesView;
    it(a: SeriesView): void;
    pi: FinancialPriceSeriesView;
    constructor();
    trendLineType: TrendLineType;
    trendLineBrush: Brush;
    p2: Brush;
    static readonly ps: DependencyProperty;
    trendLineThickness: number;
    p5: PenLineCap;
    p4: DoubleCollection;
    trendLinePeriod: number;
    pm: number;
    protected hy(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    pj: PriceDisplayType;
    protected bd(): SeriesHitTestMode;
    lt(a: Point): Rect;
    private ph;
    ak(a: Point): Rect[];
    dh(a: Point, b: boolean): boolean;
    protected dk(a: Point, b: boolean): boolean;
    protected iy(a: any, b: string, c: any, d: any): void;
    private pr;
    an(a: Axis): AxisRange;
    ao(): AxisRange;
    eh(): number;
    c9(a: any): boolean;
    dw(a: Rect, b: Rect, c: SeriesView): boolean;
    oy(a: CategoryFrame, b: FinancialSeriesView): void;
    hv(a: boolean, b: SeriesView): void;
    protected get_nb(): boolean;
    o0(a: CategoryFrame, b: FinancialSeriesView): void;
    eg(): number;
    private pq;
    private pk;
    private pp;
    fv(a: any, b: Point): any;
    protected jn(): void;
    protected h4(a: any): void;
    p3: Brush;
    jh(a: Brush, b: Brush): void;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class FinancialPriceSeriesView extends FinancialSeriesView {
    static $t: Type;
    protected b0: FinancialPriceSeries;
    constructor(a: FinancialPriceSeries);
    b3: Pool$1<Path>;
    cl(): Path;
    protected b6: List$1<Path>;
    cb(a: Path): void;
    cd(a: Path): void;
    cc(a: Path): void;
    protected bv(): FinancialBucketCalculator;
    ap(): void;
    private ck;
    private cj;
    private b1;
    b2: ITrendLineManager;
    readonly b4: boolean;
    ce(): void;
    b8(): void;
    b7(): void;
    ch(): GeometryGroup;
    cg(): GeometryGroup;
    cf(): void;
    protected a8(): void;
    protected a9(): void;
    protected z(a: number): any;
    private ci;
    protected y(a: number): any;
    protected a3(a: RenderingContext, b: boolean): void;
    protected a2(a: RenderingContext, b: boolean): void;
    ai(a: any): void;
    b9(): void;
    b5: boolean;
    ca(): void;
}
