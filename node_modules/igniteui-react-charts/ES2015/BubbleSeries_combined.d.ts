import { ScatterBase } from "./ScatterBase";
import { IScaleLegendSeries } from "igniteui-react-core/ES2015/IScaleLegendSeries";
import { Rect } from "igniteui-react-core/ES2015/Rect";
import { IFastItemColumn$1 } from "igniteui-react-core/ES2015/IFastItemColumn$1";
import { List$1 } from "igniteui-react-core/ES2015/List$1";
import { UIElement } from "igniteui-react-core/ES2015/UIElement";
import { Type } from "igniteui-react-core/ES2015/type";
import { SizeScale } from "./SizeScale";
import { BrushScale } from "./BrushScale";
import { SeriesView } from "./SeriesView";
import { ScatterFrame } from "./ScatterFrame";
import { IChartLegend } from "igniteui-react-core/ES2015/IChartLegend";
import { Brush } from "igniteui-react-core/ES2015/Brush";
import { ScatterBaseView } from "./ScatterBaseView";
import { FastItemsSourceEventAction } from "igniteui-react-core/ES2015/FastItemsSourceEventAction";
import { Marker } from "./Marker";
import { BrushSelectionMode } from "./BrushSelectionMode";
import { MarkerManagerBase } from "./MarkerManagerBase";
/**
 * @hidden
 */
export declare class BubbleSeries extends ScatterBase implements IScaleLegendSeries {
    static $t: Type;
    protected bf(): SeriesView;
    it(a: SeriesView): void;
    ox: BubbleSeriesView;
    constructor();
    private pv;
    private pu;
    isAttachedTo(a: IChartLegend): boolean;
    protected ci(): boolean;
    protected h6(a: (arg1: any) => void): void;
    readonly o3: IFastItemColumn$1<number>;
    o6: List$1<UIElement>;
    private pt;
    readonly legendReady: boolean;
    readonly minScaleText: string;
    readonly maxScaleText: string;
    forScaleColors(a: (arg1: Brush, arg2: number) => void): boolean;
    ph: string;
    fs(a: any, b: string): any;
    o5: IFastItemColumn$1<number>;
    private o1;
    oy: SizeScale;
    pe: string;
    private o0;
    o4: IFastItemColumn$1<any>;
    pa: string;
    ow: BrushScale;
    private oz;
    o2: IFastItemColumn$1<number>;
    nx(a: ScatterBaseView, b: ScatterFrame, c: number, d: Rect, e: Rect): void;
    n1(a: ScatterFrame, b: ScatterBaseView): void;
    private pl;
    static o7(a: number, b: number, c: number, d: number, e: number): number;
    static o8(a: number, b: number, c: number, d: number, logBase_: number, e: number): number;
    dw(a: Rect, b: Rect, c: SeriesView): boolean;
    protected nh(a: string, b: FastItemsSourceEventAction): boolean;
    private pk;
    protected hy(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    ic(): void;
    ii(): void;
    protected iy(a: any, b: string, c: any, d: any): void;
    pn(a: List$1<Marker>, b: List$1<number>, c: Rect, d: boolean): void;
    pm(a: List$1<Marker>): void;
    protected get_cy(): boolean;
    readonly actualMarkerBrush: Brush;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class CustomPaletteBrushScale extends BrushScale {
    static $t: Type;
    constructor();
    brushSelectionMode: BrushSelectionMode;
    getBrush1(a: number, b: number): Brush;
    protected get_isReady(): boolean;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class BubbleSeriesView extends ScatterBaseView {
    static $t: Type;
    protected da: BubbleSeries;
    constructor(a: BubbleSeries);
    ap(): void;
    protected cq(): MarkerManagerBase;
    dc(): void;
    dd(): void;
    db(): void;
    getDefaultTooltipTemplate(): string;
}
