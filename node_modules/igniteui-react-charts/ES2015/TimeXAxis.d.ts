import { TimeAxisBase } from "./TimeAxisBase";
import { ITimeRangeSelectorAxis } from "./ITimeRangeSelectorAxis";
import { TimeAxisBreakCollection } from "./TimeAxisBreakCollection";
import { TimeAxisLabelFormatCollection } from "./TimeAxisLabelFormatCollection";
import { TimeAxisIntervalCollection } from "./TimeAxisIntervalCollection";
import { Type, IList$1, EventArgs } from "igniteui-react-core/ES2015/type";
import { TimeAxisLabelFormat } from "./TimeAxisLabelFormat";
import { ScalerParams } from "./ScalerParams";
import { Rect } from "igniteui-react-core/ES2015/Rect";
import { CultureInfo } from "igniteui-react-core/ES2015/culture";
/**
 * @hidden
 */
export declare class TimeXAxis extends TimeAxisBase implements ITimeRangeSelectorAxis {
    static $t: Type;
    constructor();
    dv(a: number, b: ScalerParams): number;
    gm(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    protected startCursor(): void;
    protected resetCursor(): void;
    private ml;
    dy(a: number, b: ScalerParams): number;
    private l5;
    readonly breaks: TimeAxisBreakCollection;
    private mb;
    readonly labelFormats: TimeAxisLabelFormatCollection;
    protected gt(a: any, b: string, c: any, d: any): void;
    protected hh(a: Rect, b: Rect): void;
    protected hg(a: Rect, b: Rect): void;
    cm(): boolean;
    private _omission;
    private omission;
    private mz;
    private l3;
    private me;
    private mi;
    private my;
    fi(a: number): string;
    e5(a: any): any;
    static mm(a: Date, b: number, c: IList$1<TimeAxisLabelFormat>, d: CultureInfo): any;
    protected get_k0(): boolean;
    protected set_k0(a: boolean): void;
    private l9;
    readonly intervals: TimeAxisIntervalCollection;
    private mo;
    static mp(a: number): string;
    private static l2;
    private static l4;
    private l7;
    private l8;
    protected g6(a: boolean): void;
    private md;
    private mf;
    private mx;
    private mh;
    visibleMinimum: Date;
    private mg;
    visibleMaximum: Date;
    protected lx(): void;
    js(a: Rect, b: Rect, c: Rect, d: number, e: number): number;
    i$f(a: number): number;
    private m0;
    private m2;
    private m1;
    protected get_b3(): boolean;
    getWindowRectForSelection(a: Date, b: Date): Rect;
    getCategorySize(a: Rect, b: Rect, c: Rect): number;
    private mv;
    static mu(a: (arg1: number) => Date, b: number): number;
    private mt;
    protected lt(): void;
    static mr(a: number): string;
    itemLabelFormat(): string;
    visibleRangeChanged: (sender: any, e: EventArgs) => void;
    protected lf(a: Rect, b: Rect, c: Rect, d: Rect): number;
    protected li(a: Rect, b: Rect, c: Rect, d: Rect): number;
    readonly isVertical: boolean;
    j$c(a: number, b: ScalerParams): number;
    j$b(a: number, b: ScalerParams): number;
    j$d(a: IList$1<number[]>, b: IList$1<number>, c: number, d: number, e: ScalerParams): void;
    j$e(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    j$f(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    readonly j$a: boolean;
    readonly i$a: boolean;
}
