/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { DomainChart } from "./DomainChart";
import { fromEnum, enumGetBox, markType } from "igniteui-react-core/ES2015/type";
import { HorizontalAlignment_$type } from "igniteui-react-core/ES2015/HorizontalAlignment";
import { VerticalAlignment_$type } from "igniteui-react-core/ES2015/VerticalAlignment";
import { Visibility_$type } from "igniteui-react-core/ES2015/Visibility";
import { AxisLabelsLocation_$type } from "./AxisLabelsLocation";
import { AxisLabelSettings } from "./AxisLabelSettings";
import { TitleSettings } from "./TitleSettings";
import { ScalerParams } from "./ScalerParams";
/**
 * @hidden
 */
export class XYChart extends DomainChart {
    constructor() {
        super(...arguments);
        this.h9 = null;
        this.ia = null;
        this.io = 0;
        this.iq = 5;
        this.ip = 0;
        this.im = 5;
        this.i5 = 5;
        this.i7 = 0;
        this.i6 = 5;
        this.i4 = 0;
        this.nj = null;
        this.nq = null;
        this.iz = 0;
        this.jg = 0;
        this.iy = NaN;
        this.jf = NaN;
        this.i1 = NaN;
        this.ji = NaN;
        this.i0 = NaN;
        this.jh = NaN;
        this.ix = NaN;
        this.je = NaN;
        this.np = null;
        this.nw = null;
        this.kp = null;
        this.ks = null;
        this.kr = null;
        this.ku = null;
        this.kl = null;
        this.km = null;
        this.nk = null;
        this.nr = null;
        this.ir = 1;
        this.i8 = 1;
        this.is = 1;
        this.i9 = 0;
        this.nm = null;
        this.nt = null;
        this.nn = null;
        this.nu = null;
        this.it = 1;
        this.ja = 1;
        this.iu = 5;
        this.jb = 0;
        this.no = null;
        this.nv = null;
        this.iv = 2;
        this.jc = 2;
        this.kq = null;
        this.kt = null;
        this.nl = null;
        this.ns = null;
        this.il = 0;
        this.i3 = 0;
        this.ik = NaN;
        this.i2 = NaN;
        this.iw = 0;
        this.jd = -90;
        this.ig = false;
        this.ih = false;
        this.ne = 1;
        this.od = 1;
        this.nd = 1;
        this.nf = 2;
        this.ob = 0;
        this.oc = 1;
        this.oh = 0;
        this.oi = 0;
        this.id = 2;
    }
    provideContainer(a) {
        if (a != null) {
            let b = this.h7();
            let c = this.h8();
            if (b != null) {
                b.provideRenderer(a);
            }
            if (c != null) {
                c.provideRenderer(a);
            }
        }
        super.provideContainer(a);
    }
    gj() {
        super.gj();
        let a = this.h7();
        let b = this.h8();
        if (a != null && a.aw != null) {
            this.nx = a.aw.textColor;
        }
        if (b != null && b.aw != null) {
            this.n4 = b.aw.textColor;
        }
    }
    g2(a, b, c) {
        super.g2(a, b, c);
        switch (a) {
            case "XAxisLabelLeftMargin":
                this.m7((d) => d.leftMargin = this.jq);
                break;
            case "XAxisLabelTopMargin":
                this.m7((d) => d.topMargin = this.js);
                break;
            case "XAxisLabelRightMargin":
                this.m7((d) => d.rightMargin = this.jr);
                break;
            case "XAxisLabelBottomMargin":
                this.m7((d) => d.bottomMargin = this.jp);
                break;
            case "YAxisLabelLeftMargin":
                this.nb((d) => d.leftMargin = this.j7);
                break;
            case "YAxisLabelTopMargin":
                this.nb((d) => d.topMargin = this.j9);
                break;
            case "YAxisLabelRightMargin":
                this.nb((d) => d.rightMargin = this.j8);
                break;
            case "YAxisLabelBottomMargin":
                this.nb((d) => d.bottomMargin = this.j6);
                break;
            case "XAxisLabelTextColor":
                this.m7((d) => d.textColor = this.nx);
                break;
            case "YAxisLabelTextColor":
                this.nb((d) => d.textColor = this.n4);
                break;
            case "XAxisTitleMargin":
                this.m8((d) => d.margin = this.j1);
                break;
            case "YAxisTitleMargin":
                this.nc((d) => d.margin = this.ki);
                break;
            case "XAxisTitleLeftMargin":
                this.m8((d) => d.leftMargin = this.j0);
                break;
            case "YAxisTitleLeftMargin":
                this.nc((d) => d.leftMargin = this.kh);
                break;
            case "XAxisTitleTopMargin":
                this.m8((d) => d.topMargin = this.j3);
                break;
            case "YAxisTitleTopMargin":
                this.nc((d) => d.topMargin = this.kk);
                break;
            case "XAxisTitleRightMargin":
                this.m8((d) => d.rightMargin = this.j2);
                break;
            case "YAxisTitleRightMargin":
                this.nc((d) => d.rightMargin = this.kj);
                break;
            case "XAxisTitleBottomMargin":
                this.m8((d) => d.bottomMargin = this.jz);
                break;
            case "YAxisTitleBottomMargin":
                this.nc((d) => d.bottomMargin = this.kg);
                break;
            case "XAxisTitleTextColor":
                this.m8((d) => d.textColor = this.n3);
                break;
            case "YAxisTitleTextColor":
                this.nc((d) => d.textColor = this.oa);
                break;
            case "XAxisFormatLabel":
                this.m5((d) => d.ar = this.ib);
                break;
            case "YAxisFormatLabel":
                this.m9((d) => d.ar = this.ic);
                break;
        }
    }
    get ib() {
        return this.h9;
    }
    set ib(a) {
        let b = this.ib;
        if (a != b) {
            this.h9 = a;
            this.g1("XAxisFormatLabel", b, this.ib);
        }
    }
    get ic() {
        return this.ia;
    }
    set ic(a) {
        let b = this.ic;
        if (a != b) {
            this.ia = a;
            this.g1("YAxisFormatLabel", b, this.ic);
        }
    }
    get jq() {
        return this.io;
    }
    set jq(a) {
        let b = this.jq;
        if (a != b) {
            this.io = a;
            this.g1("XAxisLabelLeftMargin", b, this.jq);
        }
    }
    get js() {
        return this.iq;
    }
    set js(a) {
        let b = this.js;
        if (a != b) {
            this.iq = a;
            this.g1("XAxisLabelTopMargin", b, this.js);
        }
    }
    get jr() {
        return this.ip;
    }
    set jr(a) {
        let b = this.jr;
        if (a != b) {
            this.ip = a;
            this.g1("XAxisLabelRightMargin", b, this.jr);
        }
    }
    get jp() {
        return this.im;
    }
    set jp(a) {
        let b = this.jp;
        if (a != b) {
            this.im = a;
            this.g1("XAxisLabelBottomMargin", b, this.jp);
        }
    }
    get j7() {
        return this.i5;
    }
    set j7(a) {
        let b = this.j7;
        if (a != b) {
            this.i5 = a;
            this.g1("YAxisLabelLeftMargin", b, this.j7);
        }
    }
    get j9() {
        return this.i7;
    }
    set j9(a) {
        let b = this.j9;
        if (a != b) {
            this.i7 = a;
            this.g1("YAxisLabelTopMargin", b, this.j9);
        }
    }
    get j8() {
        return this.i6;
    }
    set j8(a) {
        let b = this.j8;
        if (a != b) {
            this.i6 = a;
            this.g1("YAxisLabelRightMargin", b, this.j8);
        }
    }
    get j6() {
        return this.i4;
    }
    set j6(a) {
        let b = this.j6;
        if (a != b) {
            this.i4 = a;
            this.g1("YAxisLabelBottomMargin", b, this.j6);
        }
    }
    get nx() {
        return this.nj;
    }
    set nx(a) {
        let b = this.nx;
        if (a != b) {
            this.nj = a;
            this.g1("XAxisLabelTextColor", b, this.nx);
        }
    }
    get n4() {
        return this.nq;
    }
    set n4(a) {
        let b = this.n4;
        if (a != b) {
            this.nq = a;
            this.g1("YAxisLabelTextColor", b, this.n4);
        }
    }
    get j1() {
        return this.iz;
    }
    set j1(a) {
        let b = this.j1;
        if (a != b) {
            this.iz = a;
            this.g1("XAxisTitleMargin", b, this.j1);
        }
    }
    get ki() {
        return this.jg;
    }
    set ki(a) {
        let b = this.ki;
        if (a != b) {
            this.jg = a;
            this.g1("YAxisTitleMargin", b, this.ki);
        }
    }
    get j0() {
        return this.iy;
    }
    set j0(a) {
        let b = this.j0;
        if (a != b) {
            this.iy = a;
            this.g1("XAxisTitleLeftMargin", b, this.j0);
        }
    }
    get kh() {
        return this.jf;
    }
    set kh(a) {
        let b = this.kh;
        if (a != b) {
            this.jf = a;
            this.g1("YAxisTitleLeftMargin", b, this.kh);
        }
    }
    get j3() {
        return this.i1;
    }
    set j3(a) {
        let b = this.j3;
        if (a != b) {
            this.i1 = a;
            this.g1("XAxisTitleTopMargin", b, this.j3);
        }
    }
    get kk() {
        return this.ji;
    }
    set kk(a) {
        let b = this.kk;
        if (a != b) {
            this.ji = a;
            this.g1("YAxisTitleTopMargin", b, this.kk);
        }
    }
    get j2() {
        return this.i0;
    }
    set j2(a) {
        let b = this.j2;
        if (a != b) {
            this.i0 = a;
            this.g1("XAxisTitleRightMargin", b, this.j2);
        }
    }
    get kj() {
        return this.jh;
    }
    set kj(a) {
        let b = this.kj;
        if (a != b) {
            this.jh = a;
            this.g1("YAxisTitleRightMargin", b, this.kj);
        }
    }
    get jz() {
        return this.ix;
    }
    set jz(a) {
        let b = this.jz;
        if (a != b) {
            this.ix = a;
            this.g1("XAxisTitleBottomMargin", b, this.jz);
        }
    }
    get kg() {
        return this.je;
    }
    set kg(a) {
        let b = this.kg;
        if (a != b) {
            this.je = a;
            this.g1("YAxisTitleBottomMargin", b, this.kg);
        }
    }
    get n3() {
        return this.np;
    }
    set n3(a) {
        let b = this.n3;
        if (a != b) {
            this.np = a;
            this.g1("XAxisTitleTextColor", b, this.n3);
        }
    }
    get oa() {
        return this.nw;
    }
    set oa(a) {
        let b = this.oa;
        if (a != b) {
            this.nw = a;
            this.g1("YAxisTitleTextColor", b, this.oa);
        }
    }
    g3(a, b, c) {
        super.g3(a, b, c);
        switch (a) {
            case "XAxisLabelTextStyle":
                this.m7((d) => d.textStyle = this.k6);
                break;
            case "YAxisLabelTextStyle":
                this.nb((d) => d.textStyle = this.l8);
                break;
            case "XAxisTitleTextStyle":
                this.m8((d) => d.textStyle = this.lu);
                break;
            case "YAxisTitleTextStyle":
                this.nc((d) => d.textStyle = this.mw);
                break;
        }
    }
    get k6() {
        return this.kp;
    }
    set k6(a) {
        let b = this.k6;
        if (a != b) {
            this.kp = a;
            this.g1("XAxisLabelTextStyle", b, this.k6);
        }
    }
    get l8() {
        return this.ks;
    }
    set l8(a) {
        let b = this.l8;
        if (a != b) {
            this.ks = a;
            this.g1("YAxisLabelTextStyle", b, this.l8);
        }
    }
    get lu() {
        return this.kr;
    }
    set lu(a) {
        let b = this.lu;
        if (a != b) {
            this.kr = a;
            this.g1("XAxisTitleTextStyle", b, this.lu);
        }
    }
    get mw() {
        return this.ku;
    }
    set mw(a) {
        let b = this.mw;
        if (a != b) {
            this.ku = a;
            this.g1("YAxisTitleTextStyle", b, this.mw);
        }
    }
    m2(a) {
        this.mz(a, (b) => b.leftMargin = this.jq);
        this.mz(a, (b) => b.topMargin = this.js);
        this.mz(a, (b) => b.rightMargin = this.jr);
        this.mz(a, (b) => b.bottomMargin = this.jp);
        this.mz(a, (b) => b.textColor = this.nx);
        this.m0(a, (b) => b.textColor = this.n3);
        this.m0(a, (b) => b.leftMargin = this.j0);
        this.m0(a, (b) => b.topMargin = this.j3);
        this.m0(a, (b) => b.rightMargin = this.j2);
        this.m0(a, (b) => b.bottomMargin = this.jz);
        this.mz(a, (b) => b.textStyle = this.k6);
        this.m0(a, (b) => b.textStyle = this.lu);
    }
    m4(a) {
        this.mz(a, (b) => b.leftMargin = this.j7);
        this.mz(a, (b) => b.topMargin = this.j9);
        this.mz(a, (b) => b.rightMargin = this.j8);
        this.mz(a, (b) => b.bottomMargin = this.j6);
        this.mz(a, (b) => b.textColor = this.n4);
        this.m0(a, (b) => b.textColor = this.oa);
        this.m0(a, (b) => b.leftMargin = this.kh);
        this.m0(a, (b) => b.topMargin = this.kk);
        this.m0(a, (b) => b.rightMargin = this.kj);
        this.m0(a, (b) => b.bottomMargin = this.kg);
        this.mz(a, (b) => b.textStyle = this.l8);
        this.m0(a, (b) => b.textStyle = this.mw);
    }
    hi(a) {
        let b = this.u(a);
        let c = this.aq(a, b);
        if (c == null) {
            return;
        }
        c.itemsSource = a.data;
        c.name = this.el(a);
        c.fx = this.em(a, b);
        this.dataChart.series.add(c);
    }
    m5(a) {
        this.m6(a, null);
    }
    m6(a, b) {
        a(this.h7());
    }
    na(a, b) {
        a(this.h8());
    }
    m9(a) {
        this.na(a, true);
    }
    m8(a) {
        this.m0(this.h7(), a);
    }
    nc(a) {
        this.m0(this.h8(), a);
    }
    nb(a) {
        this.mz(this.h8(), a);
    }
    m7(a) {
        this.mz(this.h7(), a);
    }
    jj(a) {
        let b = this.h7();
        return b.dv(a, new ScalerParams(1, this.h6, this.h5, b.b8));
    }
    jl(a) {
        let b = this.h7();
        return b.dy(a, new ScalerParams(1, this.h6, this.h5, b.b8));
    }
    jk(a) {
        let b = this.h8();
        return b.dv(a, new ScalerParams(1, this.h6, this.h5, b.b8));
    }
    jm(a) {
        let b = this.h8();
        return b.dy(a, new ScalerParams(1, this.h6, this.h5, b.b8));
    }
    hg(a) {
        super.hg(a);
        if (a == null) {
            return;
        }
        if (a.axes != null) {
            let b = this.h7();
            let c = this.h8();
            if (a.axes.contains(b)) {
                a.axes.remove(b);
            }
            if (a.axes.contains(c)) {
                a.axes.remove(c);
            }
        }
    }
    static kv(a, b) {
        for (let c of fromEnum(b)) {
            let d = c.findMatchingHint(16);
            if (d != null) {
                let e = d.path;
                return e;
            }
        }
        return null;
    }
    ge(a) {
        super.ge(a);
        if (a == this.dataChart) {
            this.dataChart.axes.add(this.h7());
            this.dataChart.axes.add(this.h8());
        }
    }
    m1(a) {
        if (a != null && this.di != null && a.er == null) {
            a.provideRenderer(this.di);
        }
        a.ii = this.ny;
        a.d2 = this.jt;
        a.ij = this.nz;
        a.d5 = this.ju;
        a.il = this.n1;
        a.em = this.jv;
        a.ik = this.n0;
        a.en = this.jw;
        a.im = this.n2;
        a.eo = this.jx;
        a.cn = true;
        let b = a == this.h7();
        if (b) {
            a.f6 = this.ll;
        }
        a.e6 = this.kn;
        this.mz(a, (c) => c.angle = this.jo);
        this.mz(a, (c) => {
            if (c.extent != this.jn) {
                c.extent = this.jn;
            }
        });
        this.mz(a, (c) => c.horizontalAlignment = this.ng);
        this.mz(a, (c) => c.verticalAlignment = this.oe);
        this.mz(a, (c) => c.visibility = this.oj);
        this.m0(a, (c) => c.horizontalAlignment = this.nh);
        this.m0(a, (c) => c.angle = this.jy);
        this.m2(a);
    }
    m3(a) {
        if (a == null) {
            return;
        }
        if (this.di != null && a.er == null) {
            a.provideRenderer(this.di);
        }
        this.mz(a, (b) => b.angle = this.j5);
        this.mz(a, (b) => {
            if (b.extent != this.j4) {
                b.extent = this.j4;
            }
        });
        this.mz(a, (b) => b.horizontalAlignment = this.ni);
        this.mz(a, (b) => b.verticalAlignment = this.of);
        this.mz(a, (b) => b.visibility = this.ok);
        this.mz(a, (b) => b.location = this.ie);
        this.m0(a, (b) => b.verticalAlignment = this.og);
        this.m0(a, (b) => b.angle = this.kf);
        a.ii = this.n5;
        a.d2 = this.ka;
        a.ij = this.n6;
        a.d5 = this.kb;
        a.il = this.n8;
        a.em = this.kc;
        a.ik = this.n7;
        a.en = this.kd;
        a.im = this.n9;
        a.eo = this.ke;
        let b = a == this.h8();
        if (b) {
            a.f6 = this.mn;
        }
        this.m4(a);
    }
    gb() {
        super.gb();
        this.m1(this.h7());
        this.m3(this.h8());
    }
    mz(a, b) {
        if (a == null) {
            return;
        }
        if (a.aw == null) {
            a.aw = new AxisLabelSettings();
            a.aw.angle = a.dj();
            a.aw.bottomMargin = a.dk();
            a.aw.leftMargin = a.dl();
            a.aw.rightMargin = a.dm();
            a.aw.topMargin = a.dn();
            a.aw.horizontalAlignment = a.ic();
            a.aw.location = a.ax();
            a.aw.verticalAlignment = a.i7();
        }
        b(a.aw);
    }
    m0(a, b) {
        if (a == null) {
            return;
        }
        if (a.bc == null) {
            a.bc = new TitleSettings();
            a.bc.bottomMargin = a.dq();
            a.bc.leftMargin = a.dr();
            a.bc.rightMargin = a.ds();
            a.bc.topMargin = a.dt();
            a.bc.location = a.ay();
            a.bc.angle = a.dp();
            a.bc.horizontalAlignment = a.id();
            a.bc.verticalAlignment = a.i8();
        }
        b(a.bc);
    }
    g1(a, b, c) {
        super.g1(a, b, c);
        switch (a) {
            case "XAxisLabelAngle":
                this.m7((d) => d.angle = this.jo);
                break;
            case "YAxisLabelAngle":
                this.nb((d) => d.angle = this.j5);
                break;
            case "XAxisLabelHorizontalAlignment":
                this.m7((d) => d.horizontalAlignment = this.ng);
                break;
            case "YAxisLabelHorizontalAlignment":
                this.nb((d) => d.horizontalAlignment = this.ni);
                break;
            case "XAxisLabelVerticalAlignment":
                this.m7((d) => d.verticalAlignment = this.oe);
                break;
            case "YAxisLabelVerticalAlignment":
                this.nb((d) => d.verticalAlignment = this.of);
                break;
            case "XAxisLabelVisibility":
                this.m7((d) => d.visibility = this.oj);
                break;
            case "YAxisLabelVisibility":
                this.nb((d) => d.visibility = this.ok);
                break;
            case "XAxisLabel":
                this.m5((d) => d.e6 = this.kn);
                break;
            case "YAxisLabel":
                this.m9((d) => d.e6 = this.ko);
                break;
            case "XAxisTitleAngle":
                this.m8((d) => d.angle = this.jy);
                break;
            case "YAxisTitleAngle":
                this.nc((d) => d.angle = this.kf);
                break;
            case "XAxisTitleAlignment":
                this.m8((d) => d.horizontalAlignment = this.nh);
                break;
            case "YAxisTitleAlignment":
                this.nc((d) => d.verticalAlignment = this.og);
                break;
            case "XAxisTitle":
                this.m5((d) => d.f6 = this.ll);
                break;
            case "YAxisTitle":
                this.na((d) => d.f6 = this.mn, false);
                break;
            case "XAxisMajorStroke":
                this.m6((d) => d.ii = this.ny, a);
                break;
            case "YAxisMajorStroke":
                this.m9((d) => d.ii = this.n5);
                break;
            case "XAxisMajorStrokeThickness":
                this.m6((d) => d.d2 = this.jt, a);
                break;
            case "YAxisMajorStrokeThickness":
                this.m9((d) => d.d2 = this.ka);
                break;
            case "XAxisMinorStroke":
                this.m5((d) => d.ij = this.nz);
                break;
            case "YAxisMinorStroke":
                this.m9((d) => d.ij = this.n6);
                break;
            case "XAxisMinorStrokeThickness":
                this.m5((d) => d.d5 = this.ju);
                break;
            case "YAxisMinorStrokeThickness":
                this.m9((d) => d.d5 = this.kb);
                break;
            case "XAxisTickLength":
                this.m5((d) => d.en = this.jw);
                break;
            case "YAxisTickLength":
                this.m9((d) => d.en = this.kd);
                break;
            case "XAxisTickStroke":
                this.m5((d) => d.im = this.n2);
                break;
            case "YAxisTickStroke":
                this.m9((d) => d.im = this.n9);
                break;
            case "XAxisTickStrokeThickness":
                this.m5((d) => d.eo = this.jx);
                break;
            case "YAxisTickStrokeThickness":
                this.m9((d) => d.eo = this.ke);
                break;
            case "XAxisStroke":
                this.m5((d) => d.il = this.n1);
                break;
            case "YAxisStroke":
                this.m9((d) => d.il = this.n8);
                break;
            case "XAxisStrokeThickness":
                this.m5((d) => d.em = this.jv);
                break;
            case "YAxisStrokeThickness":
                this.m9((d) => d.em = this.kc);
                break;
            case "XAxisExtent":
                this.m7((d) => d.extent = this.jn);
                break;
            case "YAxisExtent":
                this.nb((d) => d.extent = this.j4);
                break;
            case "XAxisStrip":
                this.m5((d) => d.ik = this.n0);
                break;
            case "YAxisStrip":
                this.m9((d) => d.ik = this.n7);
                break;
            case "XAxisInverted":
                this.m5((d) => d.b8 = this.ii);
                break;
            case "YAxisInverted":
                this.m9((d) => d.b8 = this.ij);
                break;
            case "YAxisLabelLocation":
                this.nb((d) => d.location = this.ie);
                break;
        }
    }
    get kn() {
        return this.kl;
    }
    set kn(a) {
        let b = this.kn;
        if (a != b) {
            this.kl = a;
            this.g1("XAxisLabel", b, this.kn);
        }
    }
    get ko() {
        return this.km;
    }
    set ko(a) {
        let b = this.ko;
        if (a != b) {
            this.km = a;
            this.g1("YAxisLabel", b, this.ko);
        }
    }
    get ny() {
        return this.nk;
    }
    set ny(a) {
        let b = this.ny;
        if (a != b) {
            this.nk = a;
            this.g1("XAxisMajorStroke", b, this.ny);
        }
    }
    get n5() {
        return this.nr;
    }
    set n5(a) {
        let b = this.n5;
        if (a != b) {
            this.nr = a;
            this.g1("YAxisMajorStroke", b, this.n5);
        }
    }
    get jt() {
        return this.ir;
    }
    set jt(a) {
        let b = this.jt;
        if (a != b) {
            this.ir = a;
            this.g1("XAxisMajorStrokeThickness", b, this.jt);
        }
    }
    get ka() {
        return this.i8;
    }
    set ka(a) {
        let b = this.ka;
        if (a != b) {
            this.i8 = a;
            this.g1("YAxisMajorStrokeThickness", b, this.ka);
        }
    }
    get ju() {
        return this.is;
    }
    set ju(a) {
        let b = this.ju;
        if (a != b) {
            this.is = a;
            this.g1("XAxisMinorStrokeThickness", b, this.ju);
        }
    }
    get kb() {
        return this.i9;
    }
    set kb(a) {
        let b = this.kb;
        if (a != b) {
            this.i9 = a;
            this.g1("YAxisMinorStrokeThickness", b, this.kb);
        }
    }
    get n0() {
        return this.nm;
    }
    set n0(a) {
        let b = this.n0;
        if (a != b) {
            this.nm = a;
            this.g1("XAxisStrip", b, this.n0);
        }
    }
    get n7() {
        return this.nt;
    }
    set n7(a) {
        let b = this.n7;
        if (a != b) {
            this.nt = a;
            this.g1("YAxisStrip", b, this.n7);
        }
    }
    get n1() {
        return this.nn;
    }
    set n1(a) {
        let b = this.n1;
        if (a != b) {
            this.nn = a;
            this.g1("XAxisStroke", b, this.n1);
        }
    }
    get n8() {
        return this.nu;
    }
    set n8(a) {
        let b = this.n8;
        if (a != b) {
            this.nu = a;
            this.g1("YAxisStroke", b, this.n8);
        }
    }
    get jv() {
        return this.it;
    }
    set jv(a) {
        let b = this.jv;
        if (a != b) {
            this.it = a;
            this.g1("XAxisStrokeThickness", b, this.jv);
        }
    }
    get kc() {
        return this.ja;
    }
    set kc(a) {
        let b = this.kc;
        if (a != b) {
            this.ja = a;
            this.g1("YAxisStrokeThickness", b, this.kc);
        }
    }
    get jw() {
        return this.iu;
    }
    set jw(a) {
        let b = this.jw;
        if (a != b) {
            this.iu = a;
            this.g1("XAxisTickLength", b, this.jw);
        }
    }
    get kd() {
        return this.jb;
    }
    set kd(a) {
        let b = this.kd;
        if (a != b) {
            this.jb = a;
            this.g1("YAxisTickLength", b, this.kd);
        }
    }
    get n2() {
        return this.no;
    }
    set n2(a) {
        let b = this.n2;
        if (a != b) {
            this.no = a;
            this.g1("XAxisTickStroke", b, this.n2);
        }
    }
    get n9() {
        return this.nv;
    }
    set n9(a) {
        let b = this.n9;
        if (a != b) {
            this.nv = a;
            this.g1("YAxisTickStroke", b, this.n9);
        }
    }
    get jx() {
        return this.iv;
    }
    set jx(a) {
        let b = this.jx;
        if (a != b) {
            this.iv = a;
            this.g1("XAxisTickStrokeThickness", b, this.jx);
        }
    }
    get ke() {
        return this.jc;
    }
    set ke(a) {
        let b = this.ke;
        if (a != b) {
            this.jc = a;
            this.g1("YAxisTickStrokeThickness", b, this.ke);
        }
    }
    get ll() {
        return this.kq;
    }
    set ll(a) {
        let b = this.ll;
        if (a != b) {
            this.kq = a;
            this.g1("XAxisTitle", b, this.ll);
        }
    }
    get mn() {
        return this.kt;
    }
    set mn(a) {
        let b = this.mn;
        if (a != b) {
            this.kt = a;
            this.g1("YAxisTitle", b, this.mn);
        }
    }
    get nz() {
        return this.nl;
    }
    set nz(a) {
        let b = this.nz;
        if (a != b) {
            this.nl = a;
            this.g1("XAxisMinorStroke", b, this.nz);
        }
    }
    get n6() {
        return this.ns;
    }
    set n6(a) {
        let b = this.n6;
        if (a != b) {
            this.ns = a;
            this.g1("YAxisMinorStroke", b, this.n6);
        }
    }
    get jo() {
        return this.il;
    }
    set jo(a) {
        let b = this.jo;
        if (a != b) {
            this.il = a;
            this.g1("XAxisLabelAngle", b, this.jo);
        }
    }
    get j5() {
        return this.i3;
    }
    set j5(a) {
        let b = this.j5;
        if (a != b) {
            this.i3 = a;
            this.g1("YAxisLabelAngle", b, this.j5);
        }
    }
    get jn() {
        return this.ik;
    }
    set jn(a) {
        let b = this.jn;
        if (a != b) {
            this.ik = a;
            this.g1("XAxisExtent", b, this.jn);
        }
    }
    get j4() {
        return this.i2;
    }
    set j4(a) {
        let b = this.j4;
        if (a != b) {
            this.i2 = a;
            this.g1("YAxisExtent", b, this.j4);
        }
    }
    get jy() {
        return this.iw;
    }
    set jy(a) {
        let b = this.jy;
        if (a != b) {
            this.iw = a;
            this.g1("XAxisTitleAngle", b, this.jy);
        }
    }
    get kf() {
        return this.jd;
    }
    set kf(a) {
        let b = this.kf;
        if (a != b) {
            this.jd = a;
            this.g1("YAxisTitleAngle", b, this.kf);
        }
    }
    get ii() {
        return this.ig;
    }
    set ii(a) {
        let b = this.ii;
        if (a != b) {
            this.ig = a;
            this.g1("XAxisInverted", b, this.ii);
        }
    }
    get ij() {
        return this.ih;
    }
    set ij(a) {
        let b = this.ij;
        if (a != b) {
            this.ih = a;
            this.g1("YAxisInverted", b, this.ij);
        }
    }
    get nh() {
        return this.ne;
    }
    set nh(a) {
        let b = this.nh;
        if (a != b) {
            this.ne = a;
            this.g1("XAxisTitleAlignment", enumGetBox(HorizontalAlignment_$type, b), enumGetBox(HorizontalAlignment_$type, this.nh));
        }
    }
    get og() {
        return this.od;
    }
    set og(a) {
        let b = this.og;
        if (a != b) {
            this.od = a;
            this.g1("YAxisTitleAlignment", enumGetBox(VerticalAlignment_$type, b), enumGetBox(VerticalAlignment_$type, this.og));
        }
    }
    get ng() {
        return this.nd;
    }
    set ng(a) {
        let b = this.ng;
        if (a != b) {
            this.nd = a;
            this.g1("XAxisLabelHorizontalAlignment", enumGetBox(HorizontalAlignment_$type, b), enumGetBox(HorizontalAlignment_$type, this.ng));
        }
    }
    get_ni() {
        return this.nf;
    }
    set_ni(a) {
        let b = this.ni;
        if (a != b) {
            this.nf = a;
            this.g1("YAxisLabelHorizontalAlignment", enumGetBox(HorizontalAlignment_$type, b), enumGetBox(HorizontalAlignment_$type, this.ni));
        }
    }
    get ni() {
        return this.get_ni();
    }
    set ni(a) {
        this.set_ni(a);
    }
    get oe() {
        return this.ob;
    }
    set oe(a) {
        let b = this.oe;
        if (a != b) {
            this.ob = a;
            this.g1("XAxisLabelVerticalAlignment", enumGetBox(VerticalAlignment_$type, b), enumGetBox(VerticalAlignment_$type, this.oe));
        }
    }
    get of() {
        return this.oc;
    }
    set of(a) {
        let b = this.of;
        if (a != b) {
            this.oc = a;
            this.g1("YAxisLabelVerticalAlignment", enumGetBox(VerticalAlignment_$type, b), enumGetBox(VerticalAlignment_$type, this.of));
        }
    }
    get oj() {
        return this.oh;
    }
    set oj(a) {
        let b = this.oj;
        if (a != b) {
            this.oh = a;
            this.g1("XAxisLabelVisibility", enumGetBox(Visibility_$type, b), enumGetBox(Visibility_$type, this.oj));
        }
    }
    get ok() {
        return this.oi;
    }
    set ok(a) {
        let b = this.ok;
        if (a != b) {
            this.oi = a;
            this.g1("YAxisLabelVisibility", enumGetBox(Visibility_$type, b), enumGetBox(Visibility_$type, this.ok));
        }
    }
    get_ie() {
        return this.id;
    }
    set_ie(a) {
        let b = this.ie;
        if (a != b) {
            this.id = a;
            this.g1("YAxisLabelLocation", enumGetBox(AxisLabelsLocation_$type, b), enumGetBox(AxisLabelsLocation_$type, this.ie));
        }
    }
    get ie() {
        return this.get_ie();
    }
    set ie(a) {
        this.set_ie(a);
    }
}
XYChart.$t = markType(XYChart, 'XYChart', DomainChart.$);
