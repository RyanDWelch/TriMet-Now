/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, typeCast, delegateCombine, delegateRemove, markType } from "igniteui-react-core/ES2015/type";
import { IAnnotationLayerProxy_$type } from "./IAnnotationLayerProxy";
import { CalloutLayer } from "./CalloutLayer";
/**
 * @hidden
 */
export class AnnotationLayerProxy extends Base {
    matchesType(a) {
        if (!a.cj) {
            return false;
        }
        return true;
    }
    setContentMemberPath(a, b) {
        a.o2 = b;
    }
    setHorizontalLineVisibility(a, b) {
        a.pj = b;
    }
    setIsAxisAnnotationEnabled(a, b) {
        a.m9 = b;
    }
    setLabelMemberPath(a, b) {
        a.pb = b;
    }
    setUseInterpolation(a, b) {
        a.nb = b;
    }
    setVerticalLineVisibility(a, b) {
        a.pk = b;
    }
    setXMemberPath(a, b) {
        a.pi = b;
    }
    setYMemberPath(a, b) {
        a.pl = b;
    }
    setTargetSeries(a, b) {
        a.m9 = b;
    }
    setCollisionChannel(a, b) {
        a.oz = b;
    }
    isCalloutLayer(a) {
        if (typeCast(CalloutLayer.$, a) !== null) {
            return true;
        }
        return false;
    }
    addCalloutStyleUpdating(a, b) {
        let c = a;
        c.calloutStyleUpdating = delegateCombine(c.calloutStyleUpdating, b);
    }
    removeCalloutStyleUpdating(a, b) {
        let c = a;
        c.calloutStyleUpdating = delegateRemove(c.calloutStyleUpdating, b);
    }
    setCalloutStyleUpdatingEventEnabled(a, b) {
        a.ny = b;
    }
}
AnnotationLayerProxy.$t = markType(AnnotationLayerProxy, 'AnnotationLayerProxy', Base.$, [IAnnotationLayerProxy_$type]);
