/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { PolarBase } from "./PolarBase";
import { PathRenderer } from "./PathRenderer";
import { DefaultFlattener } from "./DefaultFlattener";
import { PolarBaseView } from "./PolarBaseView";
import { Number_$type, Point_$type, markType } from "igniteui-react-core/ES2015/type";
import { PolarLinePlanner } from "./PolarLinePlanner";
import { List$1 } from "igniteui-react-core/ES2015/List$1";
import { isNaN_ } from "igniteui-react-core/ES2015/number";
import { Color } from "igniteui-react-core/ES2015/Color";
/**
 * @hidden
 */
export class PolarLineSeriesBase extends PolarBase {
    constructor() {
        super();
        this.oy = null;
        this.o0 = null;
        this.oz = null;
        this.oy = new PathRenderer(1, new DefaultFlattener());
        this.o0 = new PathRenderer(0);
    }
    bf() {
        return new PolarLineSeriesBaseView(this);
    }
    it(a) {
        super.it(a);
        this.o1 = a;
    }
    o2() {
        return 1;
    }
    get_o5() {
        return false;
    }
    get o5() {
        return this.get_o5();
    }
    get_o7() {
        return false;
    }
    get o7() {
        return this.get_o7();
    }
    n8(a, b) {
        super.n8(a, b);
        a.m.clear();
        let c = b.bs;
        let d = b.br;
        let e = this.nh != null ? this.nh.count : 0;
        let f = this.ni != null ? this.ni.count : 0;
        let g = Math.min(e, f);
        let h = ((() => {
            let $ret = new PolarLinePlanner();
            $ret.m = (i) => this.m5.a.getScaledAngle1(this.nh.item(i), this.m5.e, this.m5.d);
            $ret.q = g;
            $ret.n = (i) => this.m3.lp(this.ni.item(i), this.m5.g, this.m5.f, this.m5.i, this.m5.h);
            $ret.l = this.eu;
            $ret.f = this.nn;
            $ret.b = this.o2();
            $ret.o = (i) => this.o8(a, i);
            $ret.p = (i) => this.o9(a, i);
            $ret.ab = d;
            $ret.ac = c;
            $ret.d = this.o7;
            $ret.c = this.o5;
            return $ret;
        })());
        let i = new List$1(Number_$type, 0);
        for (let j = 0; j < g; j++) {
            if (this.o6(j)) {
                i.add(j);
            }
        }
        if (this.o7 && i.count > 0) {
            i.add(i._inner[0]);
        }
        h.x(a.m, i);
    }
    o8(a, b) {
        return a.w._inner[b].x;
    }
    o9(a, b) {
        return a.w._inner[b].y;
    }
    o4() {
        return !this.o3();
    }
    o3() {
        let a = this.bs.mq;
        return !a.containsPoint({ $type: Point_$type, x: 0.5, y: 0.5 });
    }
    o6(a) {
        return (this.nh.item(a) >= this.m5.a.j3 && this.nh.item(a) <= this.m5.a.j2 && this.ni.item(a) >= this.m5.b.j3 && this.ni.item(a) <= this.m5.b.j2) || (isNaN_(this.nh.item(a)) || isNaN_(this.ni.item(a)));
    }
    hv(a, b) {
        super.hv(a, b);
        this.pa(b);
    }
    oa(a, b) {
        super.oa(a, b);
        if (this.nn) {
            this.oz = this.oy;
        }
        else {
            this.oz = this.o0;
        }
        this.oz.b = this.o2();
        this.pa(b);
        this.pb(a, b);
    }
}
PolarLineSeriesBase.$t = markType(PolarLineSeriesBase, 'PolarLineSeriesBase', PolarBase.$);
/**
 * @hidden
 */
export class PolarLineSeriesBaseView extends PolarBaseView {
    constructor(a) {
        super(a);
        this.cy = null;
        this.cy = a;
    }
    ac() {
        let a = new Color();
        a.colorString = "rgba(95,95,95,0.5)";
        this.e.k9 = a;
        this.e.ev = 3;
        this.e.ew = 1;
        this.e.ex = 4;
        this.e.du = false;
    }
}
PolarLineSeriesBaseView.$t = markType(PolarLineSeriesBaseView, 'PolarLineSeriesBaseView', PolarBaseView.$);
