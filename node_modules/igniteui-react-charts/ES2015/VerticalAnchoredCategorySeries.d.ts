import { AnchoredCategorySeries } from "./AnchoredCategorySeries";
import { NumericXAxis } from "./NumericXAxis";
import { CategoryYAxis } from "./CategoryYAxis";
import { IVerticalAnchoredCategorySeriesInteractionManager } from "./IVerticalAnchoredCategorySeriesInteractionManager";
import { Type, Point } from "igniteui-react-core/ES2015/type";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { NumericAxisBase } from "./NumericAxisBase";
import { Axis } from "./Axis";
import { ScalerParams } from "./ScalerParams";
import { SeriesHitTestMode } from "./SeriesHitTestMode";
import { Rect } from "igniteui-react-core/ES2015/Rect";
/**
 * @hidden
 */
export declare abstract class VerticalAnchoredCategorySeries extends AnchoredCategorySeries {
    static $t: Type;
    xAxis: NumericXAxis;
    yAxis: CategoryYAxis;
    ht(): void;
    private py;
    readonly pz: IVerticalAnchoredCategorySeriesInteractionManager;
    protected get_isVertical(): boolean;
    m5(): CategoryAxisBase;
    np(): NumericAxisBase;
    getOffsetValue(): number;
    getCategoryWidth(): number;
    fc(a: Point, b: boolean): number;
    fe(a: Point, b: boolean): number;
    d9(a: Point, b: number, c: Axis, d: ScalerParams, e: number): number;
    protected bd(): SeriesHitTestMode;
    lv(a: Point): Rect;
    private p7;
    dh(a: Point, b: boolean): boolean;
    en(a: Point, b: boolean, c: boolean): number;
    lk(a: Point, b: boolean, c: boolean): Point;
    fetchXAxis(): Axis;
    fetchYAxis(): Axis;
    pf(a: Axis): void;
    pg(a: Axis): void;
    n0(): boolean;
    mz(a: number, b: number): any[];
    eb(a: Point): number;
    n4(a: Point): number;
    e8(a: Point): number;
    fp(a: Point): any;
    protected iy(a: any, b: string, c: any, d: any): void;
    p2(a: any): boolean;
    p1(a: any): boolean;
    readonly useHighMarkerFidelity: boolean;
    static $$p: string[];
}
