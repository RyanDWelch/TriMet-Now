import { AnnotationLayer } from "./AnnotationLayer";
import { IFastItemColumn$1 } from "igniteui-react-core/ES2015/IFastItemColumn$1";
import { Base, Type, Point } from "igniteui-react-core/ES2015/type";
import { Series } from "./Series";
import { Brush } from "igniteui-react-core/ES2015/Brush";
import { Thickness } from "igniteui-react-core/ES2015/Thickness";
import { CalloutCollisionMode } from "./CalloutCollisionMode";
import { FontInfo } from "igniteui-react-core/ES2015/FontInfo";
import { Rect } from "igniteui-react-core/ES2015/Rect";
import { CalloutLayerFrame } from "./CalloutLayerFrame";
import { CalloutAnnotationWrapper } from "./CalloutAnnotationWrapper";
import { FastItemsSourceEventAction } from "igniteui-react-core/ES2015/FastItemsSourceEventAction";
import { CalloutSeriesSelectingEventArgs } from "./CalloutSeriesSelectingEventArgs";
import { CalloutStyleUpdatingEventArgs } from "./CalloutStyleUpdatingEventArgs";
import { SeriesView } from "./SeriesView";
import { Frame } from "./Frame";
import { Size } from "igniteui-react-core/ES2015/Size";
import { CalloutContentUpdatingEventArgs } from "./CalloutContentUpdatingEventArgs";
import { CalloutLabelUpdatingEventArgs } from "./CalloutLabelUpdatingEventArgs";
import { DataContext } from "igniteui-react-core/ES2015/DataContext";
import { SeriesHitTestMode } from "./SeriesHitTestMode";
import { HashPool$2 } from "igniteui-react-core/ES2015/HashPool$2";
import { AnnotationLayerView } from "./AnnotationLayerView";
import { RenderingContext } from "igniteui-react-core/ES2015/RenderingContext";
import { TextBlock } from "igniteui-react-core/ES2015/TextBlock";
import { IExecutionContext } from "igniteui-react-core/ES2015/IExecutionContext";
import { Visibility } from "igniteui-react-core/ES2015/Visibility";
/**
 * @hidden
 */
export declare class CalloutLayer extends AnnotationLayer {
    static $t: Type;
    constructor();
    private pn;
    protected hy(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    da(a: boolean): boolean;
    private n1;
    private pz;
    private p0;
    calloutStyleUpdating: (sender: any, args: CalloutStyleUpdatingEventArgs) => void;
    pb: string;
    fs(a: any, b: string): any;
    nj: IFastItemColumn$1<any>;
    private ne;
    pi: string;
    nk: IFastItemColumn$1<any>;
    private nf;
    pl: string;
    nl: IFastItemColumn$1<any>;
    private ng;
    o8: string;
    ni: IFastItemColumn$1<any>;
    private nd;
    nx: boolean;
    o2: string;
    nh: IFastItemColumn$1<any>;
    private nc;
    private n2;
    private n5;
    private pp;
    protected bf(): SeriesView;
    it(a: SeriesView): void;
    protected m6: CalloutLayerView;
    private n6;
    m9: Series;
    oz: string;
    nw: boolean;
    nz: boolean;
    ny: boolean;
    oh: number;
    qt: Brush;
    qq: Brush;
    oi: number;
    qs: Brush;
    qr: Brush;
    readonly qx: Thickness;
    oa: number;
    oc: number;
    ob: number;
    n9: number;
    m3: CalloutCollisionMode;
    od: number;
    oe: number;
    pe: string;
    private na;
    readonly nb: FontInfo;
    protected mk(a: Series, b: boolean): void;
    protected mm(a: Frame, b: SeriesView): void;
    private n3;
    private n0;
    private nm;
    private qv;
    protected js(a: Rect, b: Rect): void;
    protected jr(a: Rect, b: Rect): void;
    private ns;
    private og;
    private qu;
    qw: Rect;
    private pv;
    private pr;
    private nn;
    private oj;
    private ok;
    private no;
    private po;
    private np;
    private of;
    private n7;
    private ol;
    protected l7(a: Series): boolean;
    im(): void;
    private nr;
    pu(): void;
    calloutContentUpdating: (sender: any, args: CalloutContentUpdatingEventArgs) => void;
    calloutLabelUpdating: (sender: any, args: CalloutLabelUpdatingEventArgs) => void;
    calloutSeriesSelecting: (sender: any, args: CalloutSeriesSelectingEventArgs) => void;
    private n4;
    private pw;
    private nu;
    private nv;
    private n8;
    private nt;
    protected bd(): SeriesHitTestMode;
    ar(a: Point, b: boolean): DataContext;
    dh(a: Point, b: boolean): boolean;
    protected py(a: CalloutLayerFrame, b: boolean): void;
    protected mp(a: Frame, b: SeriesView): void;
    protected c8(): boolean;
    protected iy(a: any, b: string, c: any, d: any): void;
    private px;
    private nq;
    private ps;
    private pq;
    private pt;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class CalloutLayerView extends AnnotationLayerView {
    static $t: Type;
    constructor(a: CalloutLayer);
    protected b1: CalloutLayer;
    private b7;
    ap(): void;
    private b3;
    private b9;
    private cb;
    private ca;
    b6: HashPool$2<CalloutAnnotationWrapper, CalloutView>;
    ci(a: Brush): Brush;
    protected a3(a: RenderingContext, b: boolean): void;
    protected b5(): FontInfo;
    ai(a: any): void;
    private b8;
    ck(a: TextBlock): Size;
    private b2;
    cj(a: any, b: Thickness): Size;
    b4(): IExecutionContext;
    cc(a: CalloutView, b: number, c: number): void;
    cd(a: CalloutView, b: CalloutAnnotationWrapper, c: any): void;
    ce(a: Series): Brush;
    ch(): Brush;
    cg(): Brush;
    cf(a: Series): Brush;
}
/**
 * @hidden
 */
export declare class CalloutView extends Base {
    static $t: Type;
    constructor(a: CalloutLayerView);
    private a;
    w: Visibility;
    h(a: RenderingContext): void;
    private j;
    private r;
    private o;
    private q;
    p: Point;
    n: Brush;
    m: Brush;
    l: Brush;
    k: Brush;
    c: number;
    private u;
    private t;
    v: Thickness;
    f: any;
    d: number;
    e: number;
    s(): Size;
    private b;
    i(a: Series, b: CalloutAnnotationWrapper, c: any): void;
    g(a: CalloutLayer, b: FontInfo, c: any): void;
}
