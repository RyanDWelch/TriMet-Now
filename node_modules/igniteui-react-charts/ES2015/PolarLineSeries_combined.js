/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { PolarLineSeriesBase } from "./PolarLineSeriesBase";
import { UnknownValuePlotting_$type } from "igniteui-react-core/ES2015/UnknownValuePlotting";
import { DependencyProperty } from "igniteui-react-core/ES2015/DependencyProperty";
import { Type, enumGetBox, markType } from "igniteui-react-core/ES2015/type";
import { PropertyMetadata } from "igniteui-react-core/ES2015/PropertyMetadata";
import { PolarLineSeriesBaseView } from "./PolarLineSeriesBaseView";
import { Path } from "igniteui-react-core/ES2015/Path";
/**
 * @hidden
 */
export class PolarLineSeries extends PolarLineSeriesBase {
    constructor() {
        super();
        this.ab = PolarLineSeries.$;
    }
    bf() {
        return new PolarLineSeriesView(this);
    }
    it(a) {
        super.it(a);
        this.pc = a;
    }
    pa(a) {
        let b = a;
        b.c0();
    }
    pb(a, b) {
        let c = b;
        c.c1(a.m, this.eu);
    }
    o2() {
        return this.pd;
    }
    iy(a, b, c, d) {
        super.iy(a, b, c, d);
        switch (b) {
            case PolarLineSeries.$$p[0]:
                this.jc(false);
                this.ij();
                break;
        }
    }
}
PolarLineSeries.$t = markType(PolarLineSeries, 'PolarLineSeries', PolarLineSeriesBase.$);
Type.dep(DependencyProperty, PropertyMetadata, PolarLineSeries, 'raisePropertyChanged', ['UnknownValuePlotting:pd:pf', [UnknownValuePlotting_$type, enumGetBox(UnknownValuePlotting_$type, 1)]]);
/**
 * @hidden
 */
export class PolarLineSeriesView extends PolarLineSeriesBaseView {
    constructor(a) {
        super(a);
        this.cz = null;
        this.c2 = new Path();
        this.cz = a;
    }
    ap() {
        super.ap();
    }
    c0() {
        this.c2.aj = null;
        this.an();
    }
    c1(a, b) {
        this.cz.oz.d(this.c2, a, b);
        this.an();
    }
    a8() {
        super.a8();
        this.c2._stroke = this.e.k2;
        this.c2.ac = this.e.ey;
        this.c2.ai = this.e.la;
        this.c2.ad = this.e.lb;
    }
    a9() {
        super.a9();
        let a = this.bl();
        this.c2._stroke = a;
        this.c2.ac = this.e.ey + 3;
    }
    a3(a, b) {
        super.a3(a, b);
        a.s(this.c2);
    }
    ai(a) {
        super.ai(a);
        this.e.a2.exportPathData(a, this.c2, "polarShape", ["Main"]);
    }
}
PolarLineSeriesView.$t = markType(PolarLineSeriesView, 'PolarLineSeriesView', PolarLineSeriesBaseView.$);
