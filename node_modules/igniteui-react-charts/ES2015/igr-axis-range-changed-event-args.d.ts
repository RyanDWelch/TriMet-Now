import { AxisRangeChangedEventArgs as AxisRangeChangedEventArgs_internal } from "./AxisRangeChangedEventArgs";
/**
 * Provides data for Axis RangeChanged events.
*
* The `AxisRangeChangedEventArgs` event fire when the axis range changes.
*
* ```ts
* <IgrDataChart
*     dataSource={this.state.dataSource}
*     width="700px"
*     height="500px">
* 		<IgrCategoryXAxis name="xAxis" label="Date" />
* 		<IgrNumericYAxis  name="yAxis" />
*     <IgrFinancialPriceSeries
* 		name="series2"
* 		xAxisName="xAxis"
* 		yAxisName="yAxis"
* 		displayType="Candlestick"
* 		lowMemberPath="Low"
* 		highMemberPath="High"
* 		openMemberPath="Open"
* 		closeMemberPath="Close"
* 		volumeMemberPath="Volume" />
*  </IgrDataChart>
* ```
*/
export declare class AxisRangeChangedEventArgs {
    protected createImplementation(): AxisRangeChangedEventArgs_internal;
    protected _implementation: any;
    /**
     * @hidden
     */
    readonly i: AxisRangeChangedEventArgs_internal;
    private onImplementationCreated;
    constructor();
    protected _provideImplementation(i: any): void;
    /**
     * Gets the minimum value before the range changed. The reported minimum is the effective,
     * not the set value.
    *
    * The `oldMinimumValue` property is used to gets the minimum value before the range changed.
    */
    oldMinimumValue: number;
    /**
     * Gets the minimum value after the range changed. The reported minimum is the effective,
     * not the set value.
    *
    * The `minimumValue` property is used to getsthe minimum value after the range changed.
    */
    minimumValue: number;
    /**
     * Gets the maximum value before the range changed. The reported maximum is the effective,
     * not the set value.
    *
    * The `oldMaximumValue` property is used to gets the maximum value before the range changed.
    */
    oldMaximumValue: number;
    /**
     * Gets the maximum value after the range changed. The reported maximum is the effective,
     * not the set value.
    *
    * The `maximumValue` property is used to gets the maximum value after the range changed.
    */
    maximumValue: number;
}
