/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { StrategyBasedIndicator } from "./StrategyBasedIndicator";
import { IShortPeriodLongPeriod_$type } from "./IShortPeriodLongPeriod";
import { MovingAverageConvergenceDivergenceIndicatorStrategy } from "./MovingAverageConvergenceDivergenceIndicatorStrategy";
import { typeGetValue, markType } from "igniteui-react-core/ES2015/type";
import { Brush } from "igniteui-react-core/ES2015/Brush";
/**
 * @hidden
 */
export class MovingAverageConvergenceDivergenceIndicator extends StrategyBasedIndicator {
    constructor() {
        super();
        this.trendLineBrush = ((() => {
            let $ret = new Brush();
            $ret.fill = "#565656";
            return $ret;
        })());
        this.trendLineType = 10;
        this.trendLinePeriod = 9;
        this.pj = 1;
    }
    get_qb() {
        return new MovingAverageConvergenceDivergenceIndicatorStrategy();
    }
    get qb() {
        return this.get_qb();
    }
    get_qo() {
        return MovingAverageConvergenceDivergenceIndicator.$;
    }
    get qo() {
        return this.get_qo();
    }
    get shortPeriod() {
        return typeGetValue(this.c(MovingAverageConvergenceDivergenceIndicator.qz));
    }
    set shortPeriod(a) {
        this.h(MovingAverageConvergenceDivergenceIndicator.qz, a);
    }
    qj() {
        return this.shortPeriod;
    }
    get longPeriod() {
        return typeGetValue(this.c(MovingAverageConvergenceDivergenceIndicator.qy));
    }
    set longPeriod(a) {
        this.h(MovingAverageConvergenceDivergenceIndicator.qy, a);
    }
    qg() {
        return this.longPeriod;
    }
    get signalPeriod() {
        return typeGetValue(this.c(MovingAverageConvergenceDivergenceIndicator.q0));
    }
    set signalPeriod(a) {
        this.h(MovingAverageConvergenceDivergenceIndicator.q0, a);
    }
    pr() {
        return this.signalPeriod;
    }
}
MovingAverageConvergenceDivergenceIndicator.$t = markType(MovingAverageConvergenceDivergenceIndicator, 'MovingAverageConvergenceDivergenceIndicator', StrategyBasedIndicator.$, [IShortPeriodLongPeriod_$type]);
MovingAverageConvergenceDivergenceIndicator.qz = StrategyBasedIndicator.qv(10, MovingAverageConvergenceDivergenceIndicator.$);
MovingAverageConvergenceDivergenceIndicator.qy = StrategyBasedIndicator.qr(30, MovingAverageConvergenceDivergenceIndicator.$);
MovingAverageConvergenceDivergenceIndicator.q0 = StrategyBasedIndicator.qu(9, MovingAverageConvergenceDivergenceIndicator.$, "SignalPeriod");
