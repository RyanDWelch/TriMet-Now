import * as tslib_1 from "tslib";
import { IgrStrategyBasedIndicator } from "./igr-strategy-based-indicator";
import { OnBalanceVolumeIndicator } from "./OnBalanceVolumeIndicator";
/**
 * Represents a IgxDataChartComponent On Balance Bolume indicator series.
 * Default required members: Close, Volume
*
* You can use the `IgrOnBalanceVolumeIndicator` to calculate a running total of sales volume for a stock.
*
* ```ts
* <IgrDataChart
*     dataSource={this.state.dataSource}
*     width="700px"
*     height="500px">
*
*     <IgrCategoryXAxis name="xAxis" label="Year" />
*     <IgrNumericYAxis  name="yAxis" />
*
*     <IgrOnBalanceVolumeIndicator
*         name="series1"
*         xAxisName="xAxis"
*         yAxisName="yAxis"
* 		openMemberPath="Open"
* 		closeMemberPath="Close"
*         highMemberPath="High"
*         lowMemberPath="Low" />
*  </IgrDataChart>
* ```
*/
var IgrOnBalanceVolumeIndicator = /** @class */ (function (_super) {
    tslib_1.__extends(IgrOnBalanceVolumeIndicator, _super);
    function IgrOnBalanceVolumeIndicator(props) {
        return _super.call(this, props) || this;
    }
    IgrOnBalanceVolumeIndicator.prototype.createImplementation = function () {
        return new OnBalanceVolumeIndicator();
    };
    Object.defineProperty(IgrOnBalanceVolumeIndicator.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    return IgrOnBalanceVolumeIndicator;
}(IgrStrategyBasedIndicator));
export { IgrOnBalanceVolumeIndicator };
