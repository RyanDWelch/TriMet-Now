import * as tslib_1 from "tslib";
import { IgrColorScale } from "./igr-color-scale";
import { IgrScatterTriangulationSeries } from "./igr-scatter-triangulation-series";
import { ScatterAreaSeries } from "./ScatterAreaSeries";
import { toPoint } from "igniteui-react-core/ES5/componentUtil";
/**
 * Series class which draws a colored 2D surface based on a triangulation of XY data with numeric values assigned to each point.
*/
var IgrScatterAreaSeries = /** @class */ (function (_super) {
    tslib_1.__extends(IgrScatterAreaSeries, _super);
    function IgrScatterAreaSeries(props) {
        return _super.call(this, props) || this;
    }
    IgrScatterAreaSeries.prototype.createImplementation = function () {
        return new ScatterAreaSeries();
    };
    Object.defineProperty(IgrScatterAreaSeries.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrScatterAreaSeries.prototype, "colorScale", {
        /**
         * Gets or sets ColorScale used to resolve the color values of points in the series.
        */
        get: function () {
            if (this.i.nk == null) {
                return null;
            }
            if (!this.i.nk.externalObject) {
                var e = IgrColorScale._createFromInternal(this.i.nk);
                if (e) {
                    e._implementation = this.i.nk;
                }
                this.i.nk.externalObject = e;
            }
            return this.i.nk.externalObject;
        },
        set: function (v) {
            if (v != null && this._stylingContainer && v._styling)
                v._styling(this._stylingContainer, this, this);
            v == null ? this.i.nk = null : this.i.nk = v.i;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrScatterAreaSeries.prototype, "colorMemberPath", {
        /**
         * Gets or sets the name of the property on each data item containing a numeric value which can be converted to a color by the ColorScale.
        */
        get: function () {
            return this.i.ns;
        },
        set: function (v) {
            this.i.ns = v;
        },
        enumerable: true,
        configurable: true
    });
    IgrScatterAreaSeries.prototype._styling = function (container, component, parent) {
        _super.prototype._styling.call(this, container, component, parent);
        this._inStyling = true;
        if (this.colorScale && this.colorScale._styling) {
            this.colorScale._styling(container, component, this);
        }
        this._inStyling = false;
    };
    IgrScatterAreaSeries.prototype.getItemValue = function (item, memberPathName) {
        var iv = this.i.fs(item, memberPathName);
        return (iv);
    };
    /**
     * Gets the item that is the best match for the specified world coordinates.
    
    * @param world  * The world coordinates to use.
    */
    IgrScatterAreaSeries.prototype.getItem = function (world) {
        var iv = this.i.fp(toPoint(world));
        return (iv);
    };
    /**
     * Attaches an image to the view of this series
    
    */
    IgrScatterAreaSeries.prototype.attachImage = function (image) {
        this.i.nw(image);
    };
    return IgrScatterAreaSeries;
}(IgrScatterTriangulationSeries));
export { IgrScatterAreaSeries };
