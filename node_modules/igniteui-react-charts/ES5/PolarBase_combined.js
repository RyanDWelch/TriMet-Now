/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { MarkerSeries } from "./MarkerSeries";
import { Base, Type, runOn, Number_$type, enumGetBox, typeCast, Point_$type, fromEnum, markType } from "igniteui-react-core/ES5/type";
import { PolarAxisInfoCache } from "./PolarAxisInfoCache";
import { SeriesRenderer$2 } from "./SeriesRenderer$2";
import { PolarFrame } from "./PolarFrame";
import { DependencyProperty } from "igniteui-react-core/ES5/DependencyProperty";
import { NumericAngleAxis } from "./NumericAngleAxis";
import { NumericRadiusAxis } from "./NumericRadiusAxis";
import { TrendLineType_$type } from "igniteui-react-core/ES5/TrendLineType";
import { Brush } from "igniteui-react-core/ES5/Brush";
import { PenLineCap_$type } from "igniteui-react-core/ES5/PenLineCap";
import { DoubleCollection } from "igniteui-react-core/ES5/DoubleCollection";
import { List$1 } from "igniteui-react-core/ES5/List$1";
import { SeriesPointOfInterest } from "./SeriesPointOfInterest";
import { ScalerParams } from "./ScalerParams";
import { Rect } from "igniteui-react-core/ES5/Rect";
import { Marker } from "./Marker";
import { MarkerSeriesView } from "./MarkerSeriesView";
import { PolarAxes } from "./PolarAxes";
import { IFastItemsSource_$type } from "igniteui-react-core/ES5/IFastItemsSource";
import { SeriesRenderingArguments } from "./SeriesRenderingArguments";
import { AxisRange } from "./AxisRange";
import { HashPool$2 } from "igniteui-react-core/ES5/HashPool$2";
import { Clipper } from "igniteui-react-core/ES5/Clipper";
import { Dictionary$2 } from "igniteui-react-core/ES5/Dictionary$2";
import { OwnedPoint } from "./OwnedPoint";
import { PolarTrendLineManager } from "./PolarTrendLineManager";
import { TrendResolutionParams } from "./TrendResolutionParams";
import { PropertyMetadata } from "igniteui-react-core/ES5/PropertyMetadata";
import { isNaN_, isInfinity } from "igniteui-react-core/ES5/number";
import { NumericMarkerManager } from "./NumericMarkerManager";
import { GeometryGroup } from "igniteui-react-core/ES5/GeometryGroup";
import { stringIsNullOrEmpty } from "igniteui-react-core/ES5/string";
/**
 * @hidden
 */
var PolarBase = /** @class */ (function (_super) {
    tslib_1.__extends(PolarBase, _super);
    function PolarBase() {
        var _this = _super.call(this) || this;
        _this.m7 = null;
        _this.m0 = null;
        _this.m5 = null;
        _this.ox = null;
        _this.ow = null;
        _this.nd = null;
        _this.nf = null;
        _this.ng = null;
        _this.na = new PolarFrame();
        _this.nc = new PolarFrame();
        _this.m9 = new PolarFrame();
        _this.m4 = null;
        _this.nb = null;
        _this.m8 = null;
        _this.nb = new PolarFrame();
        _this.nc.x = runOn(_this, _this.ov);
        _this.na.x = runOn(_this, _this.ov);
        _this.m9.x = runOn(_this, _this.ov);
        _this.nd = new SeriesRenderer$2(PolarFrame.$, PolarBaseView.$, 0, runOn(_this, _this.n8), runOn(_this, _this.oa), runOn(_this, _this.ca), runOn(_this, _this.jk), runOn(_this, _this.n6));
        return _this;
    }
    PolarBase.prototype.bf = function () {
        return new PolarBaseView(this);
    };
    PolarBase.prototype.it = function (a) {
        _super.prototype.it.call(this, a);
        this.m6 = a;
    };
    PolarBase.prototype.ht = function () {
        _super.prototype.ht.call(this);
        this.m2 = null;
        this.m3 = null;
    };
    PolarBase.prototype.get_c0 = function () {
        return true;
    };
    PolarBase.prototype.nm = function (a) {
        var _this = this;
        if (!this.hasMarkers) {
            return false;
        }
        var b = this.m2;
        var c = new ScalerParams(1, this.bs.mq, this.lx, b.b8);
        c.c = this.getEffectiveViewport1(this.bi);
        var d = this.m3;
        var e = new ScalerParams(1, this.bs.mq, this.lx, d.b8);
        e.c = this.getEffectiveViewport1(this.bi);
        a.clear();
        this.lz.cc(function (f) {
            if (f._visibility == 0) {
                var g = new SeriesPointOfInterest();
                var h = f.n;
                var i = f.o;
                if (h < _this.lx.left || h > _this.lx.right || i < _this.lx.top || i > _this.lx.bottom) {
                    return;
                }
                g.b = b.dy(h, c);
                g.c = d.dy(i, e);
                g.a = f.content;
                a.add(g);
            }
        });
        return true;
    };
    PolarBase.prototype.n6 = function () {
        if (this.bt.g) {
            this.bt.t();
        }
    };
    PolarBase.prototype.n7 = function () {
        this.m4.e(this.m7.w, this.nh, this.ni, this.ox, this.ow, function (a, b) { return Math.cos(b); }, function (a, b) { return Math.sin(b); }, true);
    };
    Object.defineProperty(PolarBase.prototype, "nh", {
        get: function () {
            return this.nf;
        },
        set: function (a) {
            if (this.nf != a) {
                var b = this.nh;
                this.nf = a;
                this.raisePropertyChanged("AngleColumn", b, this.nh);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PolarBase.prototype, "ni", {
        get: function () {
            return this.ng;
        },
        set: function (a) {
            if (this.ng != a) {
                var b = this.ni;
                this.ng = a;
                this.raisePropertyChanged("RadiusColumn", b, this.ni);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PolarBase.prototype, "oq", {
        get: function () {
            return this.c(PolarBase.ob);
        },
        set: function (a) {
            this.h(PolarBase.ob, a);
        },
        enumerable: true,
        configurable: true
    });
    PolarBase.prototype.ia = function () {
        _super.prototype.ia.call(this);
        if (this.m3 != null) {
            this.m3.g5(false);
        }
        if (this.m2 != null) {
            this.m2.g5(false);
        }
    };
    PolarBase.prototype.hy = function (a, b, c, d) {
        var e = false;
        this.m6.cr.g$e(a, b, c, d);
        if (this.m2 != null && !this.m2.ck()) {
            e = true;
        }
        if (this.m3 != null && !this.m3.ck()) {
            e = true;
        }
        if (e) {
            this.jc(true);
        }
    };
    PolarBase.prototype.jr = function (a, b) {
        this.jc(false);
    };
    PolarBase.prototype.js = function (a, b) {
        this.jc(false);
    };
    PolarBase.prototype.dw = function (a, b, c) {
        var d = true;
        if (!_super.prototype.dw.call(this, a, b, c) || !c.l() || b.isEmpty || a.isEmpty || this.m2 == null || this.m3 == null || this.nh == null || this.ni == null || this.nh.count == 0 || this.ni.count == 0 || this.bz == null || this.bz.count != this.nh.count || this.bz.count != this.ni.count || this.m4 == null || this.m2.bf == null || this.m3.bf == null || this.m2.j3 == this.m2.j2 || this.m3.j3 == this.m3.j2) {
            d = false;
        }
        return d;
    };
    PolarBase.prototype.jd = function (a) {
        var b;
        var c;
        var d = this.getViewInfo(c, b);
        c = d.p0;
        b = d.p1;
        if (!this.dw(c, b, this.bi)) {
            this.hv(true, this.bi);
            return;
        }
        this.ox = b;
        this.ow = c;
        this.m5 = new PolarAxisInfoCache(this.m2, this.m3, this.bz);
        var e = new SeriesRenderingArguments(this, c, b, a, this.de);
        var f = this.nd.g(e, this.na, this.m9, this.nc, this.m6);
        this.na = f.p1;
        this.m9 = f.p2;
        this.nc = f.p3;
    };
    PolarBase.prototype.ov = function (a) {
        var b = this.m4.h(a.x, a.y, this.ox, this.ow, this.m5.e, this.m5.d, this.m5.g, this.m5.f, this.m5.i, this.m5.h);
        return b;
    };
    PolarBase.prototype.an = function (a) {
        if (a != null && a == this.m2 && this.nh != null) {
            return new AxisRange(this.nh.minimum, this.nh.maximum);
        }
        if (a != null && a == this.m3 && this.ni != null) {
            return new AxisRange(this.ni.minimum, this.ni.maximum);
        }
        return null;
    };
    PolarBase.prototype.c9 = function (a) {
        var b = this.bi.bs;
        b = b.copy();
        var c = this.bi.br;
        var d = !b.isEmpty && !c.isEmpty && this.bz != null ? this.bz.indexOf(a) : -1;
        if (this.m2 == null || this.nh == null || this.m3 == null || this.ni == null) {
            return false;
        }
        if (d < 0 || d > this.nh.count - 1 || d > this.ni.count - 1) {
            return false;
        }
        var e = this.m2.getScaledAngle(this.nh.item(d));
        var f = this.m3.lo(this.ni.item(d));
        var g = 0.5 + (Math.cos(e) * f);
        var h = 0.5 + (Math.sin(e) * f);
        if (!isNaN_(g)) {
            if (g < b.left + 0.1 * b.width) {
                g = g + 0.4 * b.width;
                b.x = g - 0.5 * b.width;
            }
            if (g > b.right - 0.1 * b.width) {
                g = g - 0.4 * b.width;
                b.x = g - 0.5 * b.width;
            }
        }
        if (!isNaN_(h)) {
            if (h < b.top + 0.1 * b.height) {
                h = h + 0.4 * b.height;
                b.y = h - 0.5 * b.height;
            }
            if (h > b.bottom - 0.1 * b.height) {
                h = h - 0.4 * b.height;
                b.y = h - 0.5 * b.height;
            }
        }
        if (this.bn != null) {
            this.bn.ap(this.bs, b, true);
        }
        return d >= 0;
    };
    PolarBase.prototype.fp = function (a) {
        return null;
    };
    PolarBase.prototype.e8 = function (a) {
        return -1;
    };
    PolarBase.prototype.ag = function () {
        return [this.m2, this.m3];
    };
    PolarBase.prototype.fs = function (a, b) {
        var c = this.gu(b);
        if (c == PolarBase.$$p[1]) {
            return this.ft(a, b, this.nv);
        }
        if (c == PolarBase.$$p[5]) {
            return this.ft(a, b, this.n1);
        }
        return _super.prototype.fs.call(this, a, b);
    };
    PolarBase.prototype.iy = function (a, b, c, d) {
        _super.prototype.iy.call(this, a, b, c, d);
        if (this.m6.cr.g$b(a, b, c, d)) {
            this.jc(false);
            this.ij();
        }
        switch (b) {
            case "FastItemsSource":
                if (typeCast(IFastItemsSource_$type, c) != null) {
                    c.deregisterColumn(this.nh);
                    c.deregisterColumn(this.ni);
                    this.nh = null;
                    this.ni = null;
                }
                if (typeCast(IFastItemsSource_$type, d) != null) {
                    this.nh = this.bw(this.nv);
                    this.ni = this.bw(this.n1);
                }
                if ((this.m3 != null && !this.m3.ck()) || (this.m2 != null && !this.m2.ck())) {
                    this.jc(false);
                }
                break;
            case PolarBase.$$p[0]:
                if (this.m2 != null && this.m3 != null) {
                    this.m4 = new PolarAxes(this.m3, this.m2);
                }
                if (c != null) {
                    c.bv(this);
                }
                if (d != null) {
                    d.ch(this);
                }
                if (this.m2 != null && !this.m2.ck()) {
                    this.jc(false);
                }
                else if (c != null && d == null) {
                    this.hv(true, this.bi);
                }
                break;
            case PolarBase.$$p[4]:
                if (this.m2 != null && this.m3 != null) {
                    this.m4 = new PolarAxes(this.m3, this.m2);
                }
                if (c != null) {
                    c.bv(this);
                }
                if (d != null) {
                    d.ch(this);
                }
                if (this.m3 != null && !this.m3.ck()) {
                    this.jc(false);
                }
                else if (c != null && d == null) {
                    this.hv(true, this.bi);
                }
                if (this.m2 != null && !this.m2.ck()) {
                    this.m2.g1();
                }
                break;
            case PolarBase.$$p[1]:
                if (this.bz != null) {
                    this.bz.deregisterColumn(this.nh);
                    this.nh = this.bw(this.nv);
                }
                break;
            case "AngleColumn":
                this.m6.cr.g$i();
                if (this.m2 != null && !this.m2.ck()) {
                    this.jc(false);
                }
                break;
            case PolarBase.$$p[5]:
                if (this.bz != null) {
                    this.bz.deregisterColumn(this.ni);
                    this.ni = this.bw(this.n1);
                }
                break;
            case "RadiusColumn":
                this.m6.cr.g$i();
                if (this.m3 != null && !this.m3.ck()) {
                    this.jc(false);
                }
                break;
            case PolarBase.$$p[6]:
                this.jc(false);
                this.ij();
                break;
            case PolarBase.$$p[3]:
                this.jc(false);
                this.ij();
                break;
            case "TransitionProgress":
                this.m5 = new PolarAxisInfoCache(this.m2, this.m3, this.bz);
                this.ox = this.bi.bs;
                this.ow = this.bi.br;
                this.nc.v = this.nn;
                this.nc.c(this.ez, this.na, this.m9);
                if (this.cc(this.bi)) {
                    return;
                }
                if (this.ez == 1) {
                    this.oa(this.m9, this.m6);
                }
                else {
                    this.oa(this.nc, this.m6);
                }
                if (this.bs != null) {
                    this.bs.jj(this);
                }
                break;
            case "TrendLineBrush":
                this.jn();
                break;
            case PolarBase.$$p[2]:
                this.jc(false);
                this.ij();
                break;
            case "TrendLineType":
                this.ij();
                break;
        }
    };
    PolarBase.prototype.nk = function (a) {
        if (typeCast(NumericRadiusAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    PolarBase.prototype.nj = function (a) {
        if (typeCast(NumericAngleAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    PolarBase.prototype.hv = function (a, b) {
        _super.prototype.hv.call(this, a, b);
        var c = b;
        if (a) {
            c.cs.clear();
        }
        c.cr.g$d();
    };
    PolarBase.prototype.m1 = function (a, b) {
        var c = a.top - 10;
        var d = a.bottom + 10;
        var e = a.left - 10;
        var f = a.right + 10;
        var g = ((function () {
            var $ret = new Clipper(1, e, d, f, c, false);
            $ret.i = b;
            return $ret;
        })());
        return g;
    };
    PolarBase.prototype.n5 = function (a, b, c, d) {
        a.g = new Dictionary$2(Base.$, OwnedPoint.$, 1, b);
        var e = this.bz;
        var _loop_1 = function (f) {
            var g = a.w._inner[f];
            if (!isInfinity(g.x) && !isInfinity(g.y)) {
                var h_1 = { $type: Point_$type, x: this_1.nh.item(f), y: this_1.ni.item(f) };
                var i_1 = { $type: Point_$type, x: g.x, y: g.y };
                a.g.addItem(e.item(f), ((function () {
                    var $ret = new OwnedPoint();
                    $ret.a = e.item(f);
                    $ret.b = h_1;
                    $ret.c = i_1;
                    return $ret;
                })()));
            }
        };
        var this_1 = this;
        for (var f = 0; f < b; f++) {
            _loop_1(f);
        }
    };
    PolarBase.prototype.n8 = function (a, b) {
        var _this = this;
        var c = b.bs;
        var d = b.br;
        a.j.clear();
        a.n.clear();
        var e = Math.min(this.nh != null ? this.nh.count : 0, this.ni != null ? this.ni.count : 0);
        if (e < 1) {
            return;
        }
        this.m5 = new PolarAxisInfoCache(this.m2, this.m3, this.bz);
        this.m7 = a;
        this.ow = d;
        this.ox = c;
        b.cp.l(a.j, this.nq, c, d, this.eu);
        if (e <= this.nq) {
            this.n5(a, e, c, d);
        }
        var f = this.m1(d, a.n);
        var g = Math.min(this.m2.j3, this.m2.j2);
        var h = Math.max(this.m2.j2, this.m2.j3);
        b.cr.q = this.nn;
        b.cr.p = 0;
        b.cr.s = this.m3.li;
        b.cr.r = this.m3.lh;
        b.cr.t = function (i, j) { return _this.m4.c(i, j, c, d, Math.cos); };
        b.cr.u = function (i, j) { return _this.m4.d(i, j, c, d, Math.sin); };
        var i = new List$1(Number_$type, 0);
        for (var j = 0; j < this.nh.count; j++) {
            if (this.nh.item(j) >= g && this.nh.item(j) <= h) {
                i.add(this.nh.item(j));
            }
        }
        var k = this.ni;
        if (i.count != this.nh.count) {
            k = new List$1(Number_$type, 0);
            for (var l = 0; l < this.nh.count; l++) {
                if (this.nh.item(l) >= g && this.nh.item(l) <= h) {
                    k.add(this.ni.item(l));
                }
            }
        }
        b.cr.v(a.n, this.ne, i, k, this.nr, runOn(this.m2, this.m2.getScaledAngle), runOn(this.m3, this.m3.lo), ((function () {
            var $ret = new TrendResolutionParams();
            $ret.b = _this.eu;
            $ret.f = d;
            $ret.g = c;
            return $ret;
        })()), f, g, h);
    };
    PolarBase.prototype.oa = function (a, b) {
        var c = b.bs;
        var d = b.br;
        var e = this.getEffectiveViewport1(b);
        var f = this.lp(b);
        this.m5 = new PolarAxisInfoCache(this.m2, this.m3, this.bz);
        b.cp.j(a.j, this.l4);
        b.cj();
        var g = this.m1(d, b.cr.g$j.aj);
        b.cr.g$h(a.n, g);
        this.n4(d, c, e, f, b);
    };
    PolarBase.prototype.n4 = function (a, b, c, d, e) {
        e.cu(a, b, c, d);
    };
    PolarBase.prototype.jn = function () {
        _super.prototype.jn.call(this);
        if (this.fh < 0) {
            return;
        }
        this.m6.cw();
    };
    PolarBase.prototype.je = function (a, b) {
        _super.prototype.je.call(this, a, b);
        if (!this.dl) {
            this.bi.az(b);
            return;
        }
        this.bi.az(b);
        if (this.cc(this.bh)) {
            return;
        }
        var c = this.bh;
        if (!this.df) {
            this.nb = new PolarFrame();
            this.n8(this.nb, c);
        }
        this.df = false;
        this.oa(this.nb, c);
        this.dl = false;
    };
    PolarBase.prototype.jb = function (a, b, c, d, e) {
        _super.prototype.jb.call(this, a, b, c, d, e);
        var f = this.a0.a$h.item(d);
        var g = f;
        f.ay(c);
        if (this.cc(g)) {
            return;
        }
        if (this.m8 == null) {
            this.m8 = new PolarFrame();
        }
        this.n8(this.m8, g);
        this.oa(this.m8, g);
    };
    PolarBase.prototype.n9 = function (a, b) {
        var e_1, _a, e_2, _b;
        var c = new List$1(Base.$, 0);
        try {
            for (var _c = tslib_1.__values(fromEnum(b.c)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var d = _d.value;
                if (!a.containsKey(d)) {
                    c.add1(d);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_1) throw e_1.error; }
        }
        try {
            for (var _e = tslib_1.__values(fromEnum(c)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var e = _f.value;
                b.g(e);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    PolarBase.prototype.mz = function (a, b, c) {
        this.n7();
        return this.m7.w.toArray();
    };
    PolarBase.prototype.no = function (a) {
        var e_3, _a;
        var b = new List$1(Number_$type, 0);
        var c = this.bz;
        try {
            for (var _b = tslib_1.__values(fromEnum(this.m6.cs.c)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var d = _c.value;
                b.add(c.indexOf(d));
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return b;
    };
    PolarBase.prototype.ou = function (a) {
        return { $type: Point_$type, x: this.nh.item(a), y: this.ni.item(a) };
    };
    PolarBase.prototype.h4 = function (a) {
        _super.prototype.h4.call(this, a);
        this.a2.exportTrendlineData(this, a, this.m6.cr.g$j);
    };
    PolarBase.$t = markType(PolarBase, 'PolarBase', MarkerSeries.$);
    PolarBase.ob = DependencyProperty.i("ActualTrendLineBrush", Brush.$, PolarBase.$, new PropertyMetadata(2, null, function (a, b) { return a.raisePropertyChanged("ActualTrendLineBrush", b.oldValue, b.newValue); }));
    return PolarBase;
}(MarkerSeries));
export { PolarBase };
Type.dep(DependencyProperty, PropertyMetadata, PolarBase, 'raisePropertyChanged', ['AngleAxis:m2:oc', [NumericAngleAxis.$, null], 'AngleMemberPath:nv:od', [2], 'ClipSeriesToBounds:nl:oe', [0, false], 'MaximumMarkers:nq:of', [1, 400], 'RadiusAxis:m3:og', [NumericRadiusAxis.$, null], 'RadiusMemberPath:n1:oh', [2], 'UseCartesianInterpolation:nn:op', [0, true], 'TrendLineType:ne:on', [TrendLineType_$type, enumGetBox(TrendLineType_$type, 0)], 'TrendLineThickness:np:om', [1, 1.5], 'TrendLinePeriod:nr:ol', [1, 7], 'TrendLineZIndex:ns:oo', [1, 1], 'TrendLineBrush:or:oi', [Brush.$, null], 'TrendLineDashArray:os:oj', [DoubleCollection.$], 'TrendLineDashCap:ot:ok', [PenLineCap_$type, enumGetBox(PenLineCap_$type, 0)]]);
/**
 * @hidden
 */
var PolarBaseView = /** @class */ (function (_super) {
    tslib_1.__extends(PolarBaseView, _super);
    function PolarBaseView(a) {
        var _this = _super.call(this, a) || this;
        _this.cq = null;
        _this.cp = null;
        _this.cr = null;
        _this.cs = null;
        _this.cq = a;
        _this.cs = new HashPool$2(Base.$, Marker.$);
        _this.ce(_this.cs);
        _this.cr = new PolarTrendLineManager();
        return _this;
    }
    PolarBaseView.prototype.ap = function () {
        _super.prototype.ap.call(this);
        this.cp = this.co();
        if (!this.n) {
            this.cq.nq = 1000;
            this.by.l0 = 2;
        }
    };
    PolarBaseView.prototype.co = function () {
        var _this = this;
        var a = new NumericMarkerManager(0, function (b) { return _this.cs.item(b); }, function (b) { return _this.cq.m5.c.item(b); }, runOn(this, this.cv), runOn(this, this.cn), runOn(this, this.ct));
        a.n = true;
        a.p = runOn(this.cq, this.cq.ou);
        return a;
    };
    PolarBaseView.prototype.cv = function (a) {
        this.cq.n9(a, this.cs);
    };
    PolarBaseView.prototype.cn = function () {
        return this.cq.mz(this.cs, this.bs, this.br);
    };
    PolarBaseView.prototype.ct = function () {
        return this.cq.no(this.cs);
    };
    PolarBaseView.prototype.cu = function (a, b, c, d) {
        if (this.cq.nl) {
            var e = new GeometryGroup();
            this.cq.m3.lw(e, a, b, c, d);
        }
        else {
        }
    };
    PolarBaseView.prototype.cw = function () {
        if (this.cq.or != null) {
            this.cq.oq = this.cq.or;
        }
        else {
            this.cq.oq = this.cq.k2;
        }
    };
    PolarBaseView.prototype.cc = function (a) {
        this.cs.f(a);
    };
    PolarBaseView.prototype.a2 = function (a, b) {
        if (a.d) {
            if (this.cq.ne != 0 && !b) {
                var c = this.cr.g$j;
                c.ac = this.cq.np;
                c._stroke = this.cq.oq;
                c.ad = this.cq.ot;
                c.ai = this.cq.os;
                a.u(c);
            }
        }
        _super.prototype.a2.call(this, a, b);
    };
    PolarBaseView.prototype.cx = function () {
        return Rect.empty;
    };
    PolarBaseView.prototype.getDefaultTooltipTemplate = function () {
        var a = "<div class='ui-chart-default-tooltip-content'><span>" + "${item." + this.cq.nv + "}" + "</span><br/><span";
        var b = this.e.a0.a$q(this.e);
        if (!stringIsNullOrEmpty(b)) {
            a += " style='color:" + b + "'";
        }
        a += ">" + this.cq.fx + ": </span><span class='ui-priority-primary'>" + "${item." + this.cq.n1 + "}</span></div>";
        return a;
    };
    PolarBaseView.$t = markType(PolarBaseView, 'PolarBaseView', MarkerSeriesView.$);
    return PolarBaseView;
}(MarkerSeriesView));
export { PolarBaseView };
