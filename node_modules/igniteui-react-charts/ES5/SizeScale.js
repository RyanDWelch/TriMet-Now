/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { DependencyObject } from "igniteui-react-core/ES5/DependencyObject";
import { INotifyPropertyChanged_$type, PropertyChangedEventArgs, Type, delegateCombine, fromEnum, markType } from "igniteui-react-core/ES5/type";
import { List$1 } from "igniteui-react-core/ES5/List$1";
import { Series } from "./Series";
import { DependencyProperty } from "igniteui-react-core/ES5/DependencyProperty";
import { PropertyUpdatedEventArgs } from "igniteui-react-core/ES5/PropertyUpdatedEventArgs";
import { PropertyMetadata } from "igniteui-react-core/ES5/PropertyMetadata";
/**
 * @hidden
 */
var SizeScale = /** @class */ (function (_super) {
    tslib_1.__extends(SizeScale, _super);
    function SizeScale() {
        var _this = _super.call(this) || this;
        _this.l = null;
        _this.propertyChanged = null;
        _this.propertyUpdated = null;
        _this.l = new List$1(Series.$, 0);
        _this.propertyUpdated = delegateCombine(_this.propertyUpdated, function (a, b) { return _this.t(a, b.propertyName, b.oldValue, b.newValue); });
        return _this;
    }
    SizeScale.prototype.u = function (a, b, c) {
        if (this.propertyChanged != null) {
            this.propertyChanged(this, new PropertyChangedEventArgs(a));
        }
        if (this.propertyUpdated != null) {
            this.propertyUpdated(this, new PropertyUpdatedEventArgs(a, b, c));
        }
    };
    SizeScale.prototype.t = function (a, b, c, d) {
        var e_1, _a;
        try {
            for (var _b = tslib_1.__values(fromEnum(this.l)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                e.jc(false);
                if (e.bs != null) {
                    e.ij();
                    e.ii();
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    SizeScale.$t = markType(SizeScale, 'SizeScale', DependencyObject.$, [INotifyPropertyChanged_$type]);
    return SizeScale;
}(DependencyObject));
export { SizeScale };
Type.dep(DependencyProperty, PropertyMetadata, SizeScale, 'u', ['IsLogarithmic', [0, false], 'LogarithmBase', [1, 10], 'MaximumValue', [1, NaN], 'MinimumValue', [1, NaN]]);
