import * as tslib_1 from "tslib";
import { IgrStrategyBasedIndicator } from "./igr-strategy-based-indicator";
import { FullStochasticOscillatorIndicator } from "./FullStochasticOscillatorIndicator";
/**
 * Represents a IgxDataChartComponent Full Stochastic Oscillator indicator series.
 * Default required members: High, Low, Close
*
* The `IgrFullStochasticOscillatorIndicator` class represents a IgxDataChartComponent Full Stochastic Oscillator indicator series.
*
* ```ts
* <IgrDataChart
*     dataSource={this.state.dataSource}
*     width="700px"
*     height="500px">
*
*
*     <IgrCategoryXAxis name="xAxis" label="Date" />
*     <IgrNumericYAxis  name="yAxis" />
*
*
*     <IgrFullStochasticOscillatorIndicator
*     name="series2"
*     xAxisName="xAxis"
*     yAxisName="yAxis"
*     displayType="Candlestick"
*     lowMemberPath="Low"
*     highMemberPath="High"
*     openMemberPath="Open"
*     closeMemberPath="Close"
*     volumeMemberPath="Volume" />
*  </IgrDataChart>
* ```
*/
var IgrFullStochasticOscillatorIndicator = /** @class */ (function (_super) {
    tslib_1.__extends(IgrFullStochasticOscillatorIndicator, _super);
    function IgrFullStochasticOscillatorIndicator(props) {
        return _super.call(this, props) || this;
    }
    IgrFullStochasticOscillatorIndicator.prototype.createImplementation = function () {
        return new FullStochasticOscillatorIndicator();
    };
    Object.defineProperty(IgrFullStochasticOscillatorIndicator.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrFullStochasticOscillatorIndicator.prototype, "period", {
        /**
         * Gets or sets the moving average period for the current FullStochasticOscillatorIndicator object.
         * The typical, and initial, value for FullStochasticOscillatorIndicator periods is 14.
        *
        * You can use the `period` property for the moving average period of the current FullStochasticOscillatorIndicator object.
        *
        * ```ts
        * <IgrDataChart
        *     dataSource={this.state.dataSource}
        *     width="700px"
        *     height="500px">
        *
        *
        *     <IgrCategoryXAxis name="xAxis" label="Date" />
        *     <IgrNumericYAxis  name="yAxis" />
        *
        *
        *     <IgrFullStochasticOscillatorIndicator
        *     name="series2"
        *     xAxisName="xAxis"
        *     yAxisName="yAxis"
        *     displayType="Candlestick"
        *     lowMemberPath="Low"
        *     highMemberPath="High"
        *     openMemberPath="Open"
        *     closeMemberPath="Close"
        *     volumeMemberPath="Volume"
        * 	period="30" />
        *  </IgrDataChart>
        * ```
        *
        * ```ts
        * this.series.period = 30;
        * ```
        */
        get: function () {
            return this.i.qw;
        },
        set: function (v) {
            this.i.qw = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrFullStochasticOscillatorIndicator.prototype, "smoothingPeriod", {
        /**
         * Gets or sets the moving average SmoothingPeriod for the current FullStochasticOscillatorIndicator object.
         * The typical, and initial, value for FullStochasticOscillatorIndicator SmoothingPeriod is 3.
        *
        * The `smoothingPeriod` property to fets/sets the moving average SmoothingPeriod for the current FullStochasticOscillatorIndicator object.
        *
        * ```ts
        * <IgrDataChart
        *     dataSource={this.state.dataSource}
        *     width="700px"
        *     height="500px">
        *
        *
        *     <IgrCategoryXAxis name="xAxis" label="Date" />
        *     <IgrNumericYAxis  name="yAxis" />
        *
        *
        *     <IgrFullStochasticOscillatorIndicator
        *     name="series2"
        *     xAxisName="xAxis"
        *     yAxisName="yAxis"
        *     displayType="Candlestick"
        *     lowMemberPath="Low"
        *     highMemberPath="High"
        *     openMemberPath="Open"
        *     closeMemberPath="Close"
        *     volumeMemberPath="Volume"
        * 	smoothingPeriod="30" />
        *  </IgrDataChart>
        * ```
        *
        * ```ts
        * series.smoothingPeriod=30;
        * ```
        */
        get: function () {
            return this.i.smoothingPeriod;
        },
        set: function (v) {
            this.i.smoothingPeriod = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrFullStochasticOscillatorIndicator.prototype, "triggerPeriod", {
        /**
         * Gets or sets the moving average TriggerPeriod for the current FullStochasticOscillatorIndicator object.
         * The typical, and initial, value for FullStochasticOscillatorIndicator TriggerPeriod is 3.
        *
        * You can use the `period` to set the current moving average period.
        *
        * ```ts
        * <IgrDataChart
        *     dataSource={this.state.dataSource}
        *     width="700px"
        *     height="500px">
        *
        *
        *     <IgrCategoryXAxis name="xAxis" label="Date" />
        *     <IgrNumericYAxis  name="yAxis" />
        *
        *
        *     <IgrFullStochasticOscillatorIndicator
        *     name="series2"
        *     xAxisName="xAxis"
        *     yAxisName="yAxis"
        *     displayType="Candlestick"
        *     lowMemberPath="Low"
        *     highMemberPath="High"
        *     openMemberPath="Open"
        *     closeMemberPath="Close"
        *     volumeMemberPath="Volume"
        * 	triggerPeriod="30" />
        *  </IgrDataChart>
        * ```
        *
        * ```ts
        * this.series.triggerPeriod = 30;
        * ```
        */
        get: function () {
            return this.i.qy;
        },
        set: function (v) {
            this.i.qy = +v;
        },
        enumerable: true,
        configurable: true
    });
    return IgrFullStochasticOscillatorIndicator;
}(IgrStrategyBasedIndicator));
export { IgrFullStochasticOscillatorIndicator };
