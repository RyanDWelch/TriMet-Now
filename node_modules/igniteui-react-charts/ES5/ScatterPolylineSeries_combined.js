/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { ShapeSeriesBase } from "./ShapeSeriesBase";
import { StyleSelector } from "./StyleSelector";
import { DependencyProperty } from "igniteui-react-core/ES5/DependencyProperty";
import { Style } from "igniteui-react-core/ES5/Style";
import { Type, markType, typeCast } from "igniteui-react-core/ES5/type";
import { ShapeSeriesViewBase } from "./ShapeSeriesViewBase";
import { PropertyMetadata } from "igniteui-react-core/ES5/PropertyMetadata";
import { Path } from "igniteui-react-core/ES5/Path";
import { stringIsNullOrEmpty } from "igniteui-react-core/ES5/string";
/**
 * @hidden
 */
var ScatterPolylineSeries = /** @class */ (function (_super) {
    tslib_1.__extends(ScatterPolylineSeries, _super);
    function ScatterPolylineSeries() {
        var _this = _super.call(this) || this;
        _this.ab = ScatterPolylineSeries.$;
        return _this;
    }
    ScatterPolylineSeries.prototype.bf = function () {
        return new ScatterPolylineSeriesView(this);
    };
    ScatterPolylineSeries.prototype.it = function (a) {
        _super.prototype.it.call(this, a);
        this.m9 = a;
    };
    ScatterPolylineSeries.prototype.get_me = function () {
        return false;
    };
    ScatterPolylineSeries.prototype.iy = function (a, b, c, d) {
        _super.prototype.iy.call(this, a, b, c, d);
        switch (b) {
            case ScatterPolylineSeries.$$p[0]:
                this.m9.cn(this.nf);
                this.jc(false);
                this.ij();
                break;
            case ScatterPolylineSeries.$$p[1]:
                this.m9.co(this.na);
                this.jc(false);
                this.ij();
                break;
        }
    };
    ScatterPolylineSeries.prototype.my = function (a) {
        var b = a;
        b.cn(this.nf);
        b.co(this.na);
        _super.prototype.my.call(this, a);
    };
    ScatterPolylineSeries.prototype.ar = function (a, b) {
        var c = this.m9.cs(a, b, true);
        if (c != null) {
            return c.dataContext;
        }
        return _super.prototype.ar.call(this, a, b);
    };
    ScatterPolylineSeries.$t = markType(ScatterPolylineSeries, 'ScatterPolylineSeries', ShapeSeriesBase.$);
    return ScatterPolylineSeries;
}(ShapeSeriesBase));
export { ScatterPolylineSeries };
Type.dep(DependencyProperty, PropertyMetadata, ScatterPolylineSeries, 'raisePropertyChanged', ['ShapeStyle:nf:nd', [Style.$, null], 'ShapeStyleSelector:na:ne', [StyleSelector.$, null]]);
/**
 * @hidden
 */
var ScatterPolylineSeriesView = /** @class */ (function (_super) {
    tslib_1.__extends(ScatterPolylineSeriesView, _super);
    function ScatterPolylineSeriesView(a) {
        return _super.call(this, a) || this;
    }
    ScatterPolylineSeriesView.prototype.cu = function (a, b) {
        return this.cv(a, b, false);
    };
    ScatterPolylineSeriesView.prototype.cc = function (a, b) {
        _super.prototype.cc.call(this, a, b);
        ShapeSeriesViewBase.cb(this, a, b);
    };
    ScatterPolylineSeriesView.prototype.ca = function (a, b) {
        var c = typeCast(Path.$, a);
        if (c == null) {
            return;
        }
        c.aj = b;
    };
    ScatterPolylineSeriesView.prototype.bb = function (a, b) {
        _super.prototype.bb.call(this, a, b);
        var c = a;
        c._fill = null;
    };
    ScatterPolylineSeriesView.prototype.bc = function (a, b) {
        _super.prototype.bc.call(this, a, b);
        var c = a;
        c._fill = null;
    };
    ScatterPolylineSeriesView.prototype.b2 = function (a) {
        return a.width >= this.by.mn || a.height >= this.by.mn;
    };
    ScatterPolylineSeriesView.prototype.getDefaultTooltipTemplate = function () {
        var a = "<div class='ui-chart-default-tooltip-content'><span";
        var b = this.e.a0.a$q(this.e);
        if (!stringIsNullOrEmpty(b)) {
            a += " style='color:" + b + "'";
        }
        a += ">" + this.by.fx + "</span><br/>";
        a += "</div>";
        return a;
    };
    ScatterPolylineSeriesView.$t = markType(ScatterPolylineSeriesView, 'ScatterPolylineSeriesView', ShapeSeriesViewBase.$);
    return ScatterPolylineSeriesView;
}(ShapeSeriesViewBase));
export { ScatterPolylineSeriesView };
