import * as tslib_1 from "tslib";
import { IgrStrategyBasedIndicator } from "./igr-strategy-based-indicator";
import { AccumulationDistributionIndicator } from "./AccumulationDistributionIndicator";
/**
 * Represents a IgxDataChartComponent Accumulation/Distribution indicator series.
 * Default required members: Close, Low, High, Volume
*
* You can use the `IgrAccumulationDistributionIndicator` to evaluate the suppy and demand of a stock, security, or index.
*
* ```ts
* <IgrDataChart
*     dataSource={this.state.dataSource}
*     width="700px"
*     height="500px">
*
*
*     <IgrCategoryXAxis name="xAxis" label="Date" />
*     <IgrNumericYAxis  name="yAxis" />
*
*     <IgrAccumulationDistributionIndicator
* 	name="series1"
* 	xAxisName="xAxis"
*     yAxisName="yAxis"
*     displayType="Line"
*     lowMemberPath="Low"
*     highMemberPath="High"
*     openMemberPath="Open"
*     closeMemberPath="Close"
*     volumeMemberPath="Volume"/>
*  </IgrDataChart>
* ```
*/
var IgrAccumulationDistributionIndicator = /** @class */ (function (_super) {
    tslib_1.__extends(IgrAccumulationDistributionIndicator, _super);
    function IgrAccumulationDistributionIndicator(props) {
        return _super.call(this, props) || this;
    }
    IgrAccumulationDistributionIndicator.prototype.createImplementation = function () {
        return new AccumulationDistributionIndicator();
    };
    Object.defineProperty(IgrAccumulationDistributionIndicator.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    return IgrAccumulationDistributionIndicator;
}(IgrStrategyBasedIndicator));
export { IgrAccumulationDistributionIndicator };
