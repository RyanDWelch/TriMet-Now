import { ShapeSeriesBase } from "./ShapeSeriesBase";
import { ShapeAxisInfoCache } from "./ShapeAxisInfoCache";
import { StyleSelector } from "./StyleSelector";
import { Style } from "igniteui-react-core/ES5/Style";
import { MarkerType } from "./MarkerType";
import { DataTemplate } from "igniteui-react-core/ES5/DataTemplate";
import { Brush } from "igniteui-react-core/ES5/Brush";
import { CollisionAvoidanceType } from "./CollisionAvoidanceType";
import { Rect } from "igniteui-react-core/ES5/Rect";
import { Type, Point } from "igniteui-react-core/ES5/type";
import { SeriesView } from "./SeriesView";
import { OwnedPoint } from "./OwnedPoint";
import { ShapeSeriesViewBase } from "./ShapeSeriesViewBase";
import { DataContext } from "igniteui-react-core/ES5/DataContext";
import { Marker } from "./Marker";
import { IDictionary$2 } from "igniteui-react-core/ES5/IDictionary$2";
import { HashPool$2 } from "igniteui-react-core/ES5/HashPool$2";
import { List$1 } from "igniteui-react-core/ES5/List$1";
import { SeriesPointOfInterest } from "./SeriesPointOfInterest";
import { FrameworkElement } from "igniteui-react-core/ES5/FrameworkElement";
import { NumericMarkerManager } from "./NumericMarkerManager";
import { Size } from "igniteui-react-core/ES5/Size";
import { PathGeometry } from "igniteui-react-core/ES5/PathGeometry";
import { PointCollection } from "igniteui-react-core/ES5/PointCollection";
import { RenderingContext } from "igniteui-react-core/ES5/RenderingContext";
/**
 * @hidden
 */
export declare class ScatterPolygonSeries extends ShapeSeriesBase {
    static $t: Type;
    constructor();
    protected mg(): boolean;
    protected my(a: SeriesView): void;
    private ni;
    protected bf(): SeriesView;
    it(a: SeriesView): void;
    nf: ScatterPolygonSeriesView;
    ng: ShapeAxisInfoCache;
    private static oc;
    private nd;
    private ne;
    protected get_hasMarkers(): boolean;
    k5(): Brush;
    k6(): Brush;
    jy(): DataTemplate;
    nh: StyleSelector;
    oe: Style;
    nc: MarkerType;
    nw: DataTemplate;
    nv: DataTemplate;
    oa: Brush;
    n8: Brush;
    ob: Brush;
    n9: Brush;
    od: Style;
    nb: CollisionAvoidanceType;
    protected jn(): void;
    protected iy(a: any, b: string, c: any, d: any): void;
    ar(a: Point, b: boolean): DataContext;
    nu(a: IDictionary$2<any, OwnedPoint>, b: HashPool$2<any, Marker>): void;
    ch(a: List$1<SeriesPointOfInterest>, b: boolean, c: number): boolean;
    na(a: ScatterPolygonSeriesView, b: HashPool$2<any, Marker>, c: Point[], d: Rect, e: Rect): Point[];
    m9(a: HashPool$2<any, Marker>, b: number[]): number[];
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class ScatterPolygonSeriesView extends ShapeSeriesViewBase {
    static $t: Type;
    constructor(a: ScatterPolygonSeries);
    ap(): void;
    readonly c4: NumericMarkerManager;
    protected dj(a: IDictionary$2<any, OwnedPoint>): void;
    protected cy(): Point[];
    protected cx(): number[];
    private c0;
    private cz;
    private c5;
    private c3;
    protected cu(a: number, b: List$1<PointCollection>): PathGeometry;
    protected cc(a: FrameworkElement, b: any): void;
    protected ca(a: FrameworkElement, b: PathGeometry): void;
    private c7;
    c6: HashPool$2<any, Marker>;
    dd(a: (arg1: Marker) => void): void;
    df(a: HashPool$2<any, Marker>): void;
    c2(): Marker;
    protected c8: List$1<Marker>;
    dh(a: Marker): void;
    dg(a: Marker): void;
    di(a: Marker): void;
    dk(a: boolean): void;
    protected be(a: any, b: number): void;
    protected bf(a: any, b: number): void;
    protected a2(a: RenderingContext, b: boolean): void;
    dc(): void;
    da(): void;
    db(): void;
    c9(a: string): void;
    de(): void;
    private dl;
    dm(a: Marker): Size;
    c1(a: Point): Marker;
    ai(a: any): void;
    getDefaultTooltipTemplate(): string;
}
