import { Base, Type, IEnumerable } from "igniteui-react-core/ES5/type";
import { ServiceProvider_Spark } from "./ServiceProvider_Spark";
import { Dictionary$2 } from "igniteui-react-core/ES5/Dictionary$2";
import { Message_Spark } from "./Message_Spark";
import { MessageChannel_Spark } from "./MessageChannel_Spark";
import { ViewportChangedMessage_Spark } from "./ViewportChangedMessage_Spark";
import { DomWrapper } from "igniteui-react-core/ES5/dom";
import { RenderingContext } from "igniteui-react-core/ES5/RenderingContext";
import { FontInfo } from "igniteui-react-core/ES5/FontInfo";
import { Brush } from "igniteui-react-core/ES5/Brush";
import { SparklineAxisVisualData } from "./SparklineAxisVisualData";
import { Visibility } from "igniteui-react-core/ES5/Visibility";
import { ISchedulableRender } from "igniteui-react-core/ES5/ISchedulableRender";
import { CanvasRenderScheduler } from "igniteui-react-core/ES5/CanvasRenderScheduler";
import { Rect } from "igniteui-react-core/ES5/Rect";
import { SparklineVisualData } from "./SparklineVisualData";
import { SparklineDisplayType } from "./SparklineDisplayType";
import { SparkFrame } from "./SparkFrame";
import { TrendLineType } from "igniteui-react-core/ES5/TrendLineType";
import { IFastItemColumn$1 } from "igniteui-react-core/ES5/IFastItemColumn$1";
import { DependencyObject } from "igniteui-react-core/ES5/DependencyObject";
import { IFastItemsSourceProvider } from "igniteui-react-core/ES5/IFastItemsSourceProvider";
import { IFastItemsSource } from "igniteui-react-core/ES5/IFastItemsSource";
import { DependencyProperty } from "igniteui-react-core/ES5/DependencyProperty";
import { FastItemsSourceEventArgs } from "igniteui-react-core/ES5/FastItemsSourceEventArgs";
import { PropertyChangedMessage_Spark } from "./PropertyChangedMessage_Spark";
import { FastItemsSourceEventAction } from "igniteui-react-core/ES5/FastItemsSourceEventAction";
import { UnknownValuePlotting } from "igniteui-react-core/ES5/UnknownValuePlotting";
import { Control } from "igniteui-react-core/ES5/Control";
/**
 * @hidden
 */
export declare class HorizontalAxisView extends Base {
    static $t: Type;
    private j;
    w: DomWrapper;
    m: RenderingContext;
    private l;
    private s;
    v: number;
    u: number;
    private k;
    private r;
    private ag;
    private af;
    private ah;
    private a;
    private n;
    constructor(a: XamSparkline);
    private b;
    private t;
    private q;
    private g;
    h: ServiceProvider_Spark;
    private o;
    p: Dictionary$2<Type, (message: Message_Spark) => void>;
    private d;
    f: MessageChannel_Spark;
    private c;
    e: MessageChannel_Spark;
    private z;
    private aa;
    private y;
    private ae;
    private ac;
    private ad;
    x(dataItem_: any): any;
    i(): SparklineAxisVisualData;
    private ab;
}
/**
 * @hidden
 */
export declare class VerticalAxisView extends Base {
    static $t: Type;
    private ad;
    private ac;
    private al;
    private ak;
    private am;
    private w;
    private u;
    private j;
    private aa;
    private m;
    private l;
    private t;
    private v;
    z: number;
    y: number;
    private k;
    private s;
    private a;
    private n;
    constructor(a: XamSparkline);
    private b;
    private x;
    private g;
    h: ServiceProvider_Spark;
    private p;
    q: Dictionary$2<Type, (message: Message_Spark) => void>;
    private d;
    f: MessageChannel_Spark;
    private c;
    private r;
    e: MessageChannel_Spark;
    private af;
    private ag;
    private ae;
    private aj;
    private ai;
    private o;
    ab(dataItem_: any): any;
    i(): SparklineAxisVisualData;
    private ah;
}
/**
 * @hidden
 */
export declare class XamSparklineView extends Base implements ISchedulableRender {
    static $t: Type;
    private bl;
    private bk;
    private ae;
    private af;
    private ag;
    private ah;
    o: RenderingContext;
    p: RenderingContext;
    q: RenderingContext;
    private m;
    private t;
    private b;
    private x;
    constructor();
    private au;
    private bu;
    private bs;
    private bv;
    private bt;
    private bq;
    private br;
    private bp;
    private bn;
    private bm;
    private bo;
    private i;
    j: ServiceProvider_Spark;
    private e;
    g: MessageChannel_Spark;
    private f;
    h: MessageChannel_Spark;
    private u;
    v: Dictionary$2<Type, (message: Message_Spark) => void>;
    private at;
    private a0;
    private ar;
    private k;
    readonly l: SparklineController;
    private az;
    private ay;
    private a1;
    private a2;
    private bg;
    private a9;
    private ak;
    private ao;
    static ac(v_: string, a: number): number;
    a(a: string, b: string[]): string[];
    private r;
    private as;
    al(a: boolean): void;
    private bf;
    private aj;
    aa(a: boolean): number;
    private ab;
    private a6;
    private a8;
    private a7;
    private bj;
    private ba;
    private bi;
    private a3;
    private a5;
    private a4;
    private bh;
    private bb;
    private be;
    private ai;
    private bd;
    private bc;
    private d;
    private am;
    c: CanvasRenderScheduler;
    private s;
    private w;
    isDirty: boolean;
    private aq;
    undirty(a: boolean): void;
    readonly index: number;
    private aw;
    private av;
    postRender(): void;
    an(a: SparklineVisualData): void;
    preRender(): void;
    isValid(): boolean;
    n(a: string): FontInfo;
    private ax;
    private ad;
    ap(a: XamSparkline): void;
}
/**
 * @hidden
 */
export declare class SparkFramePreparer extends Base {
    static $t: Type;
    b: SparklineController;
    d: number;
    c: number;
    e(a: SparkFrame): void;
    private a;
    private f;
}
/**
 * @hidden
 */
export declare class SparklineConnector extends Base {
    static $t: Type;
    d: XamSparkline;
    b: SparklineController;
    e: XamSparklineView;
    a: HorizontalAxisView;
    c: VerticalAxisView;
    constructor(a: DependencyObject, b: XamSparklineView);
}
/**
 * @hidden
 */
export declare class SparklineController extends DependencyObject implements IFastItemsSourceProvider {
    static $t: Type;
    constructor(a: ServiceProvider_Spark);
    k: MessageChannel_Spark;
    m: MessageChannel_Spark;
    l: MessageChannel_Spark;
    private p;
    q: XamSparkline;
    r: XamSparklineView;
    readonly x: IEnumerable;
    static readonly a2: DependencyProperty;
    u: IFastItemsSource;
    t: IFastItemColumn$1<number>;
    s: IFastItemColumn$1<any>;
    o: SparkFramePreparer;
    n: SparkFrame;
    readonly ad: string;
    readonly ac: string;
    a3: Rect;
    protected readonly ab: any;
    aa: (sender: any, e: FastItemsSourceEventArgs) => void;
    y(a: number): number;
    z(a: number): number;
    protected w(): boolean;
    private v;
    private av;
    private ay;
    private a0;
    private ax;
    private au;
    private an;
    private aw;
    ah(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    private az;
    ag(a: Message_Spark): void;
    private ai;
    aj(a: Message_Spark): void;
    am(a: PropertyChangedMessage_Spark): void;
    private at;
    a1(a: ViewportChangedMessage_Spark): void;
    private al;
    private ak;
    private af;
    private ae;
    protected ao(): void;
    private ap;
    private as;
    private ar;
    private j;
    private aq;
    getFastItemsSource(a: IEnumerable): IFastItemsSource;
    releaseFastItemsSource(a: IEnumerable): IFastItemsSource;
}
/**
 * @hidden
 */
export declare class XamSparkline extends Control {
    static $t: Type;
    constructor();
    private al;
    es: Brush;
    ez: Brush;
    ey: Brush;
    e0: Brush;
    et: Brush;
    ew: Brush;
    eu: Brush;
    ex: Brush;
    e2: Brush;
    ev: Brush;
    e3: Brush;
    e1: Brush;
    e6: Visibility;
    fd: Visibility;
    e9: Visibility;
    fa: Visibility;
    e4: Visibility;
    e7: Visibility;
    e8: Visibility;
    e5: Visibility;
    fb: Visibility;
    as: boolean;
    static readonly bb: number;
    a9: number;
    a2: number;
    a4: number;
    a3: number;
    a8: number;
    be: number;
    static readonly a7: number;
    a5: number;
    bd: number;
    bc: number;
    itemsSource: IEnumerable;
    c2: string;
    b7: string;
    static readonly eh: DependencyProperty;
    toolTip: any;
    fc: Visibility;
    an: TrendLineType;
    bm: number;
    static readonly bk: number;
    bi: number;
    bg: number;
    bf: number;
    am: SparklineDisplayType;
    ao: UnknownValuePlotting;
    bp: any;
    bn: any;
    at(): boolean;
    cu(a: any): string;
    bl: (arg1: any) => string;
    private aj;
    ak: ServiceProvider_Spark;
    private ah;
    ai: MessageChannel_Spark;
    private aw;
    a0: number;
    private av;
    az: number;
    ar: IFastItemColumn$1<any>;
    ag: HorizontalAxisView;
    ap: VerticalAxisView;
    df(a: ServiceProvider_Spark, b: ServiceProvider_Spark): void;
    protected de(a: string, b: any, c: any): void;
    destroy(): void;
    provideContainer(a: any): void;
    notifyResized(): void;
    dd(source_: any, a: number, b: any, c: any): void;
    c9(source_: any): void;
    da(source_: any, a: number, b: any): void;
    db(source_: any, a: number, b: any): void;
    aq(): SparklineVisualData;
    bu(): string;
    private ay;
    bh: number;
    private ax;
    a1: number;
    static $$p: string[];
}
