import { DomainChart } from "./DomainChart";
import { IEnumerable$1, Type } from "igniteui-react-core/ES5/type";
import { Brush } from "igniteui-react-core/ES5/Brush";
import { HorizontalAlignment } from "igniteui-react-core/ES5/HorizontalAlignment";
import { VerticalAlignment } from "igniteui-react-core/ES5/VerticalAlignment";
import { Visibility } from "igniteui-react-core/ES5/Visibility";
import { AxisLabelsLocation } from "./AxisLabelsLocation";
import { Axis } from "./Axis";
import { AxisLabelSettings } from "./AxisLabelSettings";
import { TitleSettings } from "./TitleSettings";
import { DataSeries } from "igniteui-react-core/ES5/DataSeries";
import { XamDataChart } from "./XamDataChart";
import { CategoryAxisBase } from "./CategoryAxisBase";
/**
 * @hidden
 */
export declare abstract class XYChart extends DomainChart {
    static $t: Type;
    provideContainer(a: any): void;
    protected gj(): void;
    protected g2(a: string, b: any, c: any): void;
    private h9;
    ib: (item: any) => string;
    private ia;
    ic: (item: any) => string;
    private io;
    jq: number;
    private iq;
    js: number;
    private ip;
    jr: number;
    private im;
    jp: number;
    private i5;
    j7: number;
    private i7;
    j9: number;
    private i6;
    j8: number;
    private i4;
    j6: number;
    private nj;
    nx: Brush;
    private nq;
    n4: Brush;
    private iz;
    j1: number;
    private jg;
    ki: number;
    private iy;
    j0: number;
    private jf;
    kh: number;
    private i1;
    j3: number;
    private ji;
    kk: number;
    private i0;
    j2: number;
    private jh;
    kj: number;
    private ix;
    jz: number;
    private je;
    kg: number;
    private np;
    n3: Brush;
    private nw;
    oa: Brush;
    protected g3(a: string, b: any, c: any): void;
    private kp;
    k6: string;
    private ks;
    l8: string;
    private kr;
    lu: string;
    private ku;
    mw: string;
    private m2;
    private m4;
    protected hi(a: DataSeries): void;
    protected abstract h7(): Axis;
    protected abstract h8(): Axis;
    protected m5(a: (arg1: Axis) => void): void;
    protected m6(a: (arg1: Axis) => void, b: string): void;
    protected na(a: (arg1: Axis) => void, b: boolean): void;
    protected m9(a: (arg1: Axis) => void): void;
    protected m8(a: (arg1: TitleSettings) => void): void;
    protected nc(a: (arg1: TitleSettings) => void): void;
    protected nb(a: (arg1: AxisLabelSettings) => void): void;
    protected m7(a: (arg1: AxisLabelSettings) => void): void;
    jj(a: number): number;
    jl(a: number): number;
    jk(a: number): number;
    jm(a: number): number;
    protected hg(a: XamDataChart): void;
    static kv(a: CategoryAxisBase, b: IEnumerable$1<DataSeries>): string;
    protected ge(a: XamDataChart): void;
    protected m1(a: Axis): void;
    protected m3(a: Axis): void;
    protected gb(): void;
    protected mz(a: Axis, b: (arg1: AxisLabelSettings) => void): void;
    protected m0(a: Axis, b: (arg1: TitleSettings) => void): void;
    protected g1(a: string, b: any, c: any): void;
    private kl;
    kn: any;
    private km;
    ko: any;
    private nk;
    ny: Brush;
    private nr;
    n5: Brush;
    private ir;
    jt: number;
    private i8;
    ka: number;
    private is;
    ju: number;
    private i9;
    kb: number;
    private nm;
    n0: Brush;
    private nt;
    n7: Brush;
    private nn;
    n1: Brush;
    private nu;
    n8: Brush;
    private it;
    jv: number;
    private ja;
    kc: number;
    private iu;
    jw: number;
    private jb;
    kd: number;
    private no;
    n2: Brush;
    private nv;
    n9: Brush;
    private iv;
    jx: number;
    private jc;
    ke: number;
    private kq;
    ll: string;
    private kt;
    mn: string;
    private nl;
    nz: Brush;
    private ns;
    n6: Brush;
    private il;
    jo: number;
    private i3;
    j5: number;
    private ik;
    jn: number;
    private i2;
    j4: number;
    private iw;
    jy: number;
    private jd;
    kf: number;
    private ig;
    ii: boolean;
    private ih;
    ij: boolean;
    private ne;
    nh: HorizontalAlignment;
    private od;
    og: VerticalAlignment;
    private nd;
    ng: HorizontalAlignment;
    private nf;
    protected get_ni(): HorizontalAlignment;
    protected set_ni(a: HorizontalAlignment): void;
    ni: HorizontalAlignment;
    private ob;
    oe: VerticalAlignment;
    private oc;
    of: VerticalAlignment;
    private oh;
    oj: Visibility;
    private oi;
    ok: Visibility;
    private id;
    protected get_ie(): AxisLabelsLocation;
    protected set_ie(a: AxisLabelsLocation): void;
    ie: AxisLabelsLocation;
}
