/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { StrategyBasedIndicator } from "./StrategyBasedIndicator";
import { ForceIndexIndicatorStrategy } from "./ForceIndexIndicatorStrategy";
import { typeGetValue, markType } from "igniteui-react-core/ES5/type";
/**
 * @hidden
 */
var ForceIndexIndicator = /** @class */ (function (_super) {
    tslib_1.__extends(ForceIndexIndicator, _super);
    function ForceIndexIndicator() {
        var _this = _super.call(this) || this;
        _this.pj = 1;
        return _this;
    }
    ForceIndexIndicator.prototype.get_qb = function () {
        return new ForceIndexIndicatorStrategy();
    };
    Object.defineProperty(ForceIndexIndicator.prototype, "qb", {
        get: function () {
            return this.get_qb();
        },
        enumerable: true,
        configurable: true
    });
    ForceIndexIndicator.prototype.get_qo = function () {
        return ForceIndexIndicator.$;
    };
    Object.defineProperty(ForceIndexIndicator.prototype, "qo", {
        get: function () {
            return this.get_qo();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ForceIndexIndicator.prototype, "qw", {
        get: function () {
            return typeGetValue(this.c(ForceIndexIndicator.qx));
        },
        set: function (a) {
            this.h(ForceIndexIndicator.qx, a);
        },
        enumerable: true,
        configurable: true
    });
    ForceIndexIndicator.prototype.qh = function () {
        return this.qw;
    };
    ForceIndexIndicator.prototype.qq = function (a) {
        this.qw = a;
    };
    ForceIndexIndicator.$t = markType(ForceIndexIndicator, 'ForceIndexIndicator', StrategyBasedIndicator.$);
    ForceIndexIndicator.qx = StrategyBasedIndicator.qt(0, ForceIndexIndicator.$);
    return ForceIndexIndicator;
}(StrategyBasedIndicator));
export { ForceIndexIndicator };
