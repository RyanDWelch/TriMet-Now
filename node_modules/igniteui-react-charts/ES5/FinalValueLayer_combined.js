/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { AnnotationLayer } from "./AnnotationLayer";
import { Series } from "./Series";
import { DependencyProperty } from "igniteui-react-core/ES5/DependencyProperty";
import { FinalValueSelectionMode_$type } from "./FinalValueSelectionMode";
import { Brush } from "igniteui-react-core/ES5/Brush";
import { Thickness } from "igniteui-react-core/ES5/Thickness";
import { FinalValueLayerFrame } from "./FinalValueLayerFrame";
import { List$1 } from "igniteui-react-core/ES5/List$1";
import { Axis } from "./Axis";
import { Dictionary$2 } from "igniteui-react-core/ES5/Dictionary$2";
import { Pool$1 } from "igniteui-react-core/ES5/Pool$1";
import { AxisAnnotation } from "./AxisAnnotation";
import { Type, enumGetBox, fromEnum, Point_$type, markType } from "igniteui-react-core/ES5/type";
import { AxisAnnotationFrameManager } from "./AxisAnnotationFrameManager";
import { PropertyMetadata } from "igniteui-react-core/ES5/PropertyMetadata";
import { AnnotationLayerView } from "./AnnotationLayerView";
import { BrushUtil } from "igniteui-react-core/ES5/BrushUtil";
/**
 * @hidden
 */
var FinalValueLayer = /** @class */ (function (_super) {
    tslib_1.__extends(FinalValueLayer, _super);
    function FinalValueLayer() {
        var _this = _super.call(this) || this;
        _this.axisAnnotationFormatLabel = null;
        _this.m9 = null;
        _this.m8 = null;
        var a = new FinalValueLayerFrame();
        var b = new FinalValueLayerFrame();
        var c = new FinalValueLayerFrame();
        var d = _this.fi / 1000;
        _this.l1 = a;
        _this.l0 = b;
        _this.l2 = c;
        _this.ab = FinalValueLayer.$;
        return _this;
    }
    FinalValueLayer.prototype.bf = function () {
        return new FinalValueLayerView(this);
    };
    FinalValueLayer.prototype.it = function (a) {
        _super.prototype.it.call(this, a);
        this.m4 = a;
    };
    Object.defineProperty(FinalValueLayer.prototype, "n8", {
        get: function () {
            return new Thickness(1, this.nb, this.nd, this.nc, this.na);
        },
        enumerable: true,
        configurable: true
    });
    FinalValueLayer.prototype.m7 = function () {
        return this.axisAnnotationFormatLabel != null;
    };
    FinalValueLayer.prototype.mk = function (a, b) {
        if (this.m6 == null || this.m6 == a) {
            if (!this.aq.c) {
                this.jc(b);
            }
        }
    };
    FinalValueLayer.prototype.mm = function (a, b) {
        var e_1, _a;
        _super.prototype.mm.call(this, a, b);
        var c = a;
        c.f.clear();
        c.q.clear();
        c.p.clear();
        c.aa.clear();
        c.o.clear();
        c.z.clear();
        c.g.clear();
        c.h.clear();
        c.j.clear();
        c.l.clear();
        c.k.clear();
        c.i.clear();
        c.m.clear();
        c.n.clear();
        c.r.clear();
        c.s.clear();
        c.u.clear();
        c.w.clear();
        c.v.clear();
        c.t.clear();
        c.x.clear();
        c.y.clear();
        if (this.l7(this.m6)) {
            this.nr(this.m6, c);
        }
        else {
            try {
                for (var _b = tslib_1.__values(fromEnum(this.bs.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var d = _c.value;
                    if (this.l7(d)) {
                        this.nr(d, c);
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
    };
    FinalValueLayer.prototype.l7 = function (a) {
        if (!_super.prototype.l7.call(this, a)) {
            return false;
        }
        return true;
    };
    FinalValueLayer.prototype.im = function () {
        _super.prototype.im.call(this);
        if (!this.aq.c && !this.ca()) {
            return;
        }
        if (this.ca()) {
            this.ns(this.l2, false);
        }
        else {
            this.ns(this.l0, false);
        }
    };
    FinalValueLayer.prototype.n7 = function (a) {
        var b = NaN;
        var c = NaN;
        var d = this.m5;
        if (d == 0) {
            d = 1;
        }
        var e = false;
        if (d == 2) {
            e = true;
        }
        if (a.isVertical) {
            var f = a.ap();
            if (f != null) {
                if (d == 1 || d == 2) {
                    if (f.b8) {
                        c = a.ln({ $type: Point_$type, x: this.lx.right, y: this.lx.bottom }).y;
                    }
                    else {
                        c = a.ln({ $type: Point_$type, x: this.lx.right, y: this.lx.top }).y;
                    }
                }
                else {
                    if (f.b8) {
                        c = 1;
                    }
                    else {
                        c = 0;
                    }
                }
            }
            return a.lk({ $type: Point_$type, x: 0, y: c }, e, true);
        }
        else {
            var g = a.ap();
            if (g != null) {
                if (d == 1 || d == 2) {
                    if (g.b8) {
                        b = a.ln({ $type: Point_$type, x: this.lx.left, y: this.lx.top }).x;
                    }
                    else {
                        b = a.ln({ $type: Point_$type, x: this.lx.right, y: this.lx.top }).x;
                    }
                }
                else {
                    if (g.b8) {
                        b = 0;
                    }
                    else {
                        b = 1;
                    }
                }
            }
            if (a.cr) {
                return a.lk({ $type: Point_$type, x: b, y: 0 }, e, true);
            }
            else {
                return a.lk({ $type: Point_$type, x: b, y: 0 }, e, true);
            }
        }
    };
    FinalValueLayer.prototype.nr = function (a, b) {
        var c = this.n7(a);
        var d = this.ln(c);
        var e = this.k2;
        if (e == null) {
            e = this.k4;
        }
        if (e == null) {
            e = a.k2;
            if (e != null) {
                e = this.m4.b2(e);
            }
        }
        AxisAnnotationFrameManager.c(b, c, a, this.bs, this.getEffectiveViewport(), e, this.n4, this.n6, this.n5, this.n8, this.ne, this.n4, this.n6, this.n5, this.n8, this.ne, a.isVertical, !a.isVertical);
    };
    FinalValueLayer.prototype.ns = function (a, b) {
        var c = false;
        if (this.m8 == null) {
            c = true;
            this.m9 = new List$1(Axis.$, 0);
            this.m8 = new Dictionary$2(Axis.$, Pool$1.$.specialize(AxisAnnotation.$), 0);
        }
        AxisAnnotationFrameManager.d(this, a, c, this.m8, this.m9, b, this.nf, this.nf, this.axisAnnotationFormatLabel, this.axisAnnotationFormatLabel);
    };
    FinalValueLayer.prototype.mp = function (a, b) {
        _super.prototype.mp.call(this, a, b);
        if (this.ca()) {
            this.ns(this.l2, true);
        }
        else {
            this.ns(this.l0, false);
        }
    };
    FinalValueLayer.prototype.c8 = function () {
        return true;
    };
    FinalValueLayer.prototype.iy = function (a, b, c, d) {
        var e_2, _a;
        _super.prototype.iy.call(this, a, b, c, d);
        switch (b) {
            case FinalValueLayer.$$p[10]:
                this.jc(true);
                break;
            case FinalValueLayer.$$p[0]:
            case FinalValueLayer.$$p[2]:
            case FinalValueLayer.$$p[4]:
            case FinalValueLayer.$$p[6]:
            case FinalValueLayer.$$p[5]:
            case FinalValueLayer.$$p[3]:
            case FinalValueLayer.$$p[7]:
            case FinalValueLayer.$$p[8]:
            case FinalValueLayer.$$p[9]:
                this.jc(true);
                break;
            case "SeriesViewer":
                var e = this.m9;
                var f = this.m8;
                if (f != null) {
                    var _loop_1 = function (g) {
                        var h = g.value;
                        h.c(function (i) { return g.key.ak.remove(i); });
                        h.clear();
                    };
                    try {
                        for (var _b = tslib_1.__values(fromEnum(f)), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var g = _c.value;
                            _loop_1(g);
                        }
                    }
                    catch (e_2_1) { e_2 = { error: e_2_1 }; }
                    finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        }
                        finally { if (e_2) throw e_2.error; }
                    }
                    e.clear();
                    f.clear();
                }
                break;
        }
    };
    FinalValueLayer.$t = markType(FinalValueLayer, 'FinalValueLayer', AnnotationLayer.$);
    return FinalValueLayer;
}(AnnotationLayer));
export { FinalValueLayer };
Type.dep(DependencyProperty, PropertyMetadata, FinalValueLayer, 'raisePropertyChanged', ['AxisAnnotationBackground:n4:nt', [Brush.$, null], 'AxisAnnotationInterpolatedValuePrecision:nf:nu', [1, -1], 'AxisAnnotationOutline:n5:nv', [Brush.$, null], 'AxisAnnotationPaddingBottom:na:nw', [1, NaN], 'AxisAnnotationPaddingLeft:nb:nx', [1, NaN], 'AxisAnnotationPaddingRight:nc:ny', [1, NaN], 'AxisAnnotationPaddingTop:nd:nz', [1, NaN], 'AxisAnnotationStrokeThickness:ne:n0', [1, NaN], 'AxisAnnotationTextColor:n6:n1', [Brush.$, null], 'FinalValueSelectionMode:m5:n2', [FinalValueSelectionMode_$type, enumGetBox(FinalValueSelectionMode_$type, 0)], 'TargetSeries:m6:n3', [Series.$, null]]);
/**
 * @hidden
 */
var FinalValueLayerView = /** @class */ (function (_super) {
    tslib_1.__extends(FinalValueLayerView, _super);
    function FinalValueLayerView(a) {
        var _this = _super.call(this, a) || this;
        _this.b1 = null;
        _this.b1 = a;
        return _this;
    }
    FinalValueLayerView.prototype.ap = function () {
        _super.prototype.ap.call(this);
    };
    FinalValueLayerView.prototype.b2 = function (a) {
        if (a == null) {
            return a;
        }
        return BrushUtil.h(a, 0.1);
    };
    FinalValueLayerView.prototype.ai = function (a) {
        _super.prototype.ai.call(this, a);
    };
    FinalValueLayerView.$t = markType(FinalValueLayerView, 'FinalValueLayerView', AnnotationLayerView.$);
    return FinalValueLayerView;
}(AnnotationLayerView));
export { FinalValueLayerView };
