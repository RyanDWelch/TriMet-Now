/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { RangeCategorySeries } from "./RangeCategorySeries";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { DependencyProperty } from "igniteui-react-core/ES5/DependencyProperty";
import { NumericYAxis } from "./NumericYAxis";
import { Axis } from "./Axis";
import { Type, Point_$type, runOn, typeCast, markType } from "igniteui-react-core/ES5/type";
import { RangeValueList } from "./RangeValueList";
import { ScalerParams } from "./ScalerParams";
import { CategoryXAxis } from "./CategoryXAxis";
import { PropertyMetadata } from "igniteui-react-core/ES5/PropertyMetadata";
/**
 * @hidden
 */
var HorizontalRangeCategorySeries = /** @class */ (function (_super) {
    tslib_1.__extends(HorizontalRangeCategorySeries, _super);
    function HorizontalRangeCategorySeries() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HorizontalRangeCategorySeries.prototype.fetchXAxis = function () {
        return this.xAxis;
    };
    HorizontalRangeCategorySeries.prototype.fetchYAxis = function () {
        return this.yAxis;
    };
    HorizontalRangeCategorySeries.prototype.ht = function () {
        _super.prototype.ht.call(this);
        this.xAxis = null;
        this.yAxis = null;
    };
    HorizontalRangeCategorySeries.prototype.ah = function (a) {
        var b = this.aj(this.m5(), this.m6.f, this.n6(this.bi), this.n7(this.bi), this.ln(a), true);
        if (b == null) {
            return null;
        }
        var c = b[0];
        var d = b[1];
        var e = new Array(1);
        var f = new Array(2);
        f[0] = { $type: Point_$type, x: c[0], y: c[2] };
        f[1] = { $type: Point_$type, x: d[0], y: d[2] };
        e[0] = f;
        return e;
    };
    HorizontalRangeCategorySeries.prototype.ai = function (a) {
        var b = this.aj(this.m5(), this.m6.f, this.n6(this.bi), this.n7(this.bi), this.ln(a), true);
        if (b == null) {
            return null;
        }
        var c = b[0];
        var d = b[1];
        var e = new Array(1);
        var f = new Array(2);
        f[0] = { $type: Point_$type, x: c[0], y: c[1] };
        f[1] = { $type: Point_$type, x: d[0], y: d[1] };
        e[0] = f;
        return e;
    };
    HorizontalRangeCategorySeries.prototype.get_c3 = function () {
        return true;
    };
    HorizontalRangeCategorySeries.prototype.bd = function () {
        if (this.be == 0) {
            return 1;
        }
        else {
            return _super.prototype.bd.call(this);
        }
    };
    HorizontalRangeCategorySeries.prototype.getOffsetValue = function () {
        return this.RangeFramePreparer.r(this.xAxis, this.bi.bs, this.bi.br, this.getEffectiveViewport1(this.bi));
    };
    HorizontalRangeCategorySeries.prototype.getCategoryWidth = function () {
        return this.xAxis.getCategorySize(this.bi.bs, this.bi.br, this.getEffectiveViewport1(this.bi));
    };
    HorizontalRangeCategorySeries.prototype.fc = function (a, b) {
        return this.fd(a, b, this.xAxis, runOn(this, this.n4), new RangeValueList(this.highColumn, this.lowColumn));
    };
    HorizontalRangeCategorySeries.prototype.fe = function (a, b) {
        return this.ff(a, b, this.xAxis, runOn(this, this.n4), new RangeValueList(this.highColumn, this.lowColumn));
    };
    HorizontalRangeCategorySeries.prototype.d9 = function (a, b, c, d, e) {
        if (c == null) {
            return Number.POSITIVE_INFINITY;
        }
        var f = this.xAxis.jx;
        return this.ea(a, b, this.xAxis, d, e, f, runOn(this, this.n4));
    };
    HorizontalRangeCategorySeries.prototype.en = function (a, b, c) {
        if (this.bs == null) {
            return NaN;
        }
        var d = this.getEffectiveViewport1(this.bi);
        var e = new ScalerParams(0, this.bs.mq, this.bi.br, this.xAxis.b8, d);
        var f = this.RangeFramePreparer.r(this.xAxis, this.bs.mq, this.bi.br, d);
        return this.ep(new RangeValueList(this.highColumn, this.lowColumn), a, this.xAxis, e, f, runOn(this, this.n4), b, c);
    };
    HorizontalRangeCategorySeries.prototype.el = function (a, b, c) {
        if (this.bs == null) {
            return NaN;
        }
        var d = this.getEffectiveViewport1(this.bi);
        var e = new ScalerParams(0, this.bs.mq, this.bi.br, this.xAxis.b8, d);
        var f = this.RangeFramePreparer.r(this.xAxis, this.bs.mq, this.bi.br, d);
        return this.ep(this.lowColumn, a, this.xAxis, e, f, runOn(this, this.n4), b, c);
    };
    HorizontalRangeCategorySeries.prototype.ej = function (a, b, c) {
        if (this.bs == null) {
            return NaN;
        }
        var d = this.getEffectiveViewport1(this.bi);
        var e = new ScalerParams(0, this.bs.mq, this.bi.br, this.xAxis.b8, d);
        var f = this.RangeFramePreparer.r(this.xAxis, this.bs.mq, this.bi.br, d);
        return this.ep(this.highColumn, a, this.xAxis, e, f, runOn(this, this.n4), b, c);
    };
    HorizontalRangeCategorySeries.prototype.lg = function (a, b, c) {
        var _this = this;
        return this.lm(a, b, c, this.RangeFramePreparer.r(this.xAxis, this.bi.bs, this.bi.br, this.getEffectiveViewport1(this.bi)), this.yAxis, this.xAxis, runOn(this, this.ej), function (d, e) { return _this.ff(d, e, _this.xAxis, runOn(_this, _this.n4), _this.highColumn); }, function (d, e) { return _this.fd(d, e, _this.xAxis, runOn(_this, _this.n4), _this.highColumn); });
    };
    HorizontalRangeCategorySeries.prototype.li = function (a, b, c) {
        var _this = this;
        return this.lm(a, b, c, this.RangeFramePreparer.r(this.xAxis, this.bi.bs, this.bi.br, this.getEffectiveViewport1(this.bi)), this.yAxis, this.xAxis, runOn(this, this.el), function (d, e) { return _this.ff(d, e, _this.xAxis, runOn(_this, _this.n4), _this.lowColumn); }, function (d, e) { return _this.fd(d, e, _this.xAxis, runOn(_this, _this.n4), _this.lowColumn); });
    };
    HorizontalRangeCategorySeries.prototype.lk = function (a, b, c) {
        return this.lm(a, b, c, this.RangeFramePreparer.r(this.xAxis, this.bi.bs, this.bi.br, this.getEffectiveViewport1(this.bi)), this.yAxis, this.xAxis, null, null, null);
    };
    HorizontalRangeCategorySeries.prototype.n0 = function () {
        return this.yAxis != null && this.yAxis.ck();
    };
    HorizontalRangeCategorySeries.prototype.iy = function (a, b, c, d) {
        _super.prototype.iy.call(this, a, b, c, d);
        switch (b) {
            case HorizontalRangeCategorySeries.$$p[0]:
                this.hz(typeCast(Axis.$, c));
                this.i3(typeCast(Axis.$, d));
                this.ne.cn.g(this.eu);
                this.jc(false);
                this.ij();
                break;
            case HorizontalRangeCategorySeries.$$p[1]:
                this.hz(typeCast(Axis.$, c));
                this.i3(typeCast(Axis.$, d));
                this.ne.cn.g(this.eu);
                this.n0();
                this.jc(false);
                this.ij();
                break;
        }
    };
    HorizontalRangeCategorySeries.prototype.pd = function (a) {
        if (typeCast(NumericYAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    HorizontalRangeCategorySeries.prototype.pc = function (a) {
        if (typeCast(CategoryXAxis.$, a) !== null || a.b5) {
            return true;
        }
        return false;
    };
    Object.defineProperty(HorizontalRangeCategorySeries.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.n1;
        },
        enumerable: true,
        configurable: true
    });
    HorizontalRangeCategorySeries.$t = markType(HorizontalRangeCategorySeries, 'HorizontalRangeCategorySeries', RangeCategorySeries.$);
    return HorizontalRangeCategorySeries;
}(RangeCategorySeries));
export { HorizontalRangeCategorySeries };
Type.dep(DependencyProperty, PropertyMetadata, HorizontalRangeCategorySeries, 'raisePropertyChanged', ['XAxis::pg', [CategoryAxisBase.$, null], 'YAxis::ph', [NumericYAxis.$, null]]);
