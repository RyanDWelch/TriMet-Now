/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Brush } from "igniteui-react-core/ES5/Brush";
import { XYChart } from "./XYChart";
import { IndicatorPane } from "./IndicatorPane";
import { Base, BaseError, EventArgs, runOn, delegateRemove, delegateCombine, typeCast, fromEnum, EnumUtil, Number_$type, String_$type, enumGetBox, markType, TypeRegistrar, fromEn } from "igniteui-react-core/ES5/type";
import { List$1 } from "igniteui-react-core/ES5/List$1";
import { DataSeriesType_$type } from "igniteui-react-core/ES5/DataSeriesType";
import { IDataSeriesAdapterRule_$type } from "igniteui-react-core/ES5/IDataSeriesAdapterRule";
import { SimpleFinancialPriceSeriesRule } from "igniteui-react-core/ES5/SimpleFinancialPriceSeriesRule";
import { SubCollectionsRule } from "igniteui-react-core/ES5/SubCollectionsRule";
import { XamDataChart } from "./XamDataChart";
import { FinancialChartVolumeType_$type } from "./FinancialChartVolumeType";
import { FinancialChartXAxisMode_$type } from "./FinancialChartXAxisMode";
import { FinancialChartYAxisMode_$type } from "./FinancialChartYAxisMode";
import { FinancialChartType_$type } from "./FinancialChartType";
import { NumericYAxis } from "./NumericYAxis";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { FinancialChartZoomSliderType_$type } from "./FinancialChartZoomSliderType";
import { BrushCollection } from "igniteui-react-core/ES5/BrushCollection";
import { FinancialChartRangeSelectorOptionCollection } from "./FinancialChartRangeSelectorOptionCollection";
import { ObservableCollection$1 } from "igniteui-react-core/ES5/ObservableCollection$1";
import { TemplatedHtmlControl } from "./TemplatedHtmlControl";
import { FinancialChartContext } from "./FinancialChartContext";
import { FinancialChartToolbarContext } from "./FinancialChartToolbarContext";
import { FinancialChartViewModel } from "./FinancialChartViewModel";
import { FinancialChartToolbarViewModel } from "./FinancialChartToolbarViewModel";
import { Series } from "./Series";
import { Rect } from "igniteui-react-core/ES5/Rect";
import { Axis } from "./Axis";
import { AxisLabelSettings } from "./AxisLabelSettings";
import { MarkerSeries } from "./MarkerSeries";
import { SyncSettings } from "./SyncSettings";
import { SyncManager } from "./SyncManager";
import { FinancialOverlayType_$type } from "./FinancialOverlayType";
import { ArrayExtension } from "igniteui-react-core/ES5/ArrayExtension";
import { FinancialIndicatorType_$type } from "./FinancialIndicatorType";
import { IndicatorDisplayType_$type } from "./IndicatorDisplayType";
import { ITimeRangeSelectorAxis_$type } from "./ITimeRangeSelectorAxis";
import { FinancialChartVisualData } from "./FinancialChartVisualData";
import { FinancialChartCustomIndicatorArgs } from "./FinancialChartCustomIndicatorArgs";
import { ScalerParams } from "./ScalerParams";
import { stringReplace, stringJoin, stringIsNullOrEmpty } from "igniteui-react-core/ES5/string";
import { timeSpanFromDays } from "igniteui-react-core/ES5/timespan";
import { dateMaxValue, dateMinValue } from "igniteui-react-core/ES5/date";
import { isNaN_, isInfinity } from "igniteui-react-core/ES5/number";
import { FinancialChartTypePicker } from "./FinancialChartTypePicker";
import { FinancialChartIndicatorMenu } from "./FinancialChartIndicatorMenu";
import { TrendLineType_$type } from "igniteui-react-core/ES5/TrendLineType";
import { FinancialChartIndicatorMenuContext } from "./FinancialChartIndicatorMenuContext";
import { FinancialChartTypePickerContext } from "./FinancialChartTypePickerContext";
import { FinancialChartRangeSelectorContext } from "./FinancialChartRangeSelectorContext";
import { FinancialChartToolbarVisualData } from "./FinancialChartToolbarVisualData";
import { FinancialChartRangeSelectorViewModel } from "./FinancialChartRangeSelectorViewModel";
import { FinancialChartRangeSelectorView } from "./FinancialChartRangeSelectorView";
/**
 * @hidden
 */
var FinancialChart = /** @class */ (function (_super) {
    tslib_1.__extends(FinancialChart, _super);
    function FinancialChart() {
        var _this = _super.call(this) || this;
        _this.qd = null;
        _this.sv = null;
        _this.st = null;
        _this.sq = null;
        _this.ss = null;
        _this.su = null;
        _this.sr = null;
        _this.pj = null;
        _this.td = null;
        _this.te = null;
        _this.ta = null;
        _this.tf = null;
        _this.tg = null;
        _this.tb = null;
        _this.tc = null;
        _this.q1 = null;
        _this.r6 = 40;
        _this.p7 = null;
        _this.p5 = null;
        _this.p9 = null;
        _this.qe = null;
        _this.to = null;
        _this.qx = null;
        _this.rl = false;
        _this.rk = false;
        _this.rq = false;
        _this.q7 = false;
        _this.s1 = 10;
        _this.r8 = NaN;
        _this.sa = NaN;
        _this.r9 = NaN;
        _this.sb = 0;
        _this.pp = 0;
        _this.ps = 0;
        _this.pu = 0;
        _this.q4 = true;
        _this.pl = 0;
        _this.q5 = false;
        _this.pz = null;
        _this.p1 = null;
        _this.rs = null;
        _this.q6 = true;
        _this.qy = null;
        _this.pw = 1;
        _this.on = null;
        _this.oo = null;
        _this.op = null;
        _this.oq = null;
        _this.os = null;
        _this.or = null;
        _this.om = null;
        _this.ol = null;
        _this.r7 = 1;
        _this.r5 = 1;
        _this.r4 = 1;
        _this.qb = null;
        _this.sx = -2147483648;
        _this.r3 = 2;
        _this.s0 = 3;
        _this.sy = 10;
        _this.sw = 30;
        _this.sz = 9;
        _this.pg = null;
        _this.ph = null;
        _this.pc = null;
        _this.applyCustomIndicators = null;
        _this.w8 = null;
        _this.sc = 1;
        _this.q3 = false;
        _this.p3 = null;
        _this.r0 = dateMinValue();
        _this.rz = dateMaxValue();
        _this.rx = null;
        _this.f6();
        _this.rx = new ObservableCollection$1(Base.$, 0);
        if (_this.xAxisBreaks != null) {
            var a = _this.xAxisBreaks;
            a.collectionChanged = delegateCombine(a.collectionChanged, function (a, b) { return _this.wx(); });
        }
        _this.wi();
        return _this;
    }
    FinancialChart.prototype.g3 = function (a, b, c) {
        _super.prototype.g3.call(this, a, b, c);
        switch (a) {
            case "ToolbarTemplate":
            case "RangeSelectorTemplate":
                this.pk = new FinancialChartToolbar(this, this.tl);
                break;
            case "Toolbar":
                var d = b;
                if (d != null) {
                    d.chartTypeChanged = delegateRemove(d.chartTypeChanged, runOn(this, this.v6));
                    d.trendLineTypeChanged = delegateRemove(d.trendLineTypeChanged, runOn(this, this.v9));
                    d.volumeTypeChanged = delegateRemove(d.volumeTypeChanged, runOn(this, this.wa));
                    d.l(null);
                }
                if (this.pk != null) {
                    this.pk.ac = this.pr;
                    this.pk.ai = this.av;
                    this.pk.y = this.pm;
                    this.pk.al = this.ri;
                    if (this.ss != null) {
                        this.pk.l(this.ss);
                    }
                    var e = this.pk;
                    e.chartTypeChanged = delegateCombine(e.chartTypeChanged, runOn(this, this.v6));
                    ;
                    var f = this.pk;
                    f.trendLineTypeChanged = delegateCombine(f.trendLineTypeChanged, runOn(this, this.v9));
                    var g = this.pk;
                    g.volumeTypeChanged = delegateCombine(g.volumeTypeChanged, runOn(this, this.wa));
                }
                break;
            case "ChartType":
                if (this.pk != null) {
                    this.pk.y = this.pm;
                }
                break;
            case "VolumeType":
                if (this.pk != null) {
                    this.pk.ac = this.pr;
                }
                break;
            case "TrendLineType":
                if (this.pk != null) {
                    this.pk.ai = this.av;
                }
                break;
            case "IsToolbarVisible":
                if (this.pk == null) {
                    break;
                }
                this.pk.al = this.ri;
                this.setGridRows();
                break;
        }
    };
    FinancialChart.prototype.wa = function (a, b) {
        this.pr = this.pk.ac;
    };
    FinancialChart.prototype.v9 = function (a, b) {
        this.av = this.pk.ai;
    };
    FinancialChart.prototype.v6 = function (a, b) {
        this.pm = this.pk.y;
    };
    FinancialChart.prototype.wi = function () {
        this.qd = new IndicatorPane();
        this.p4 = TypeRegistrar.create("FinancialLegend");
    };
    FinancialChart.prototype.provideGrid = function (a) {
        this.sv = a;
        this.w3();
        this.setGridRows();
        if (this.pk != null) {
            this.pk.bg(a);
        }
    };
    FinancialChart.prototype.onDocumentClick = function (a) {
        if (this.pk != null) {
            this.pk.bl(a);
        }
    };
    FinancialChart.prototype.getContext = function () {
        var a = this.pk.v();
        var b = new FinancialChartContext();
        b.vm = new FinancialChartViewModel();
        b.vm.toolbar = a;
        b.container = this.di;
        b.toolbarContainer = this.ss;
        b.legendContainer = this.sr;
        b.indicatorsContainer = this.sq;
        b.volumeContainer = this.st;
        b.zoomContainer = this.su;
        return b;
    };
    FinancialChart.prototype.provideContainer = function (a) {
        var b = a;
        if (b != null) {
            var c = "financialChartMainGrid";
            var d = b.createElement("div");
            d.setStyleProperty("width", "100%");
            d.setStyleProperty("height", "100%");
            if (this.pk == null) {
                this.pk = new FinancialChartToolbar(this, this.tl);
            }
            this.pk.w.isIndicatorMenuVisible = this.q9 && this.ra;
            this.ss = b.getSubRenderer(d);
            this.pk.l(this.ss);
            var e = b.createElement("div");
            e.setStyleProperty("width", "100%");
            e.setStyleProperty("height", "100%");
            var f = b.createElement("div");
            f.setStyleProperty("width", "100%");
            f.setStyleProperty("height", "100%");
            this.sr = b.getSubRenderer(f);
            var g = b.createElement("div");
            g.setStyleProperty("width", "100%");
            g.setStyleProperty("height", "100%");
            this.sq = b.getSubRenderer(g);
            var h = b.createElement("div");
            h.setStyleProperty("width", "100%");
            h.setStyleProperty("height", "100%");
            this.st = b.getSubRenderer(h);
            var i = b.createElement("div");
            i.setStyleProperty("width", "100%");
            i.setStyleProperty("height", "100%");
            this.su = b.getSubRenderer(i);
            a = b.getSubRenderer(e);
        }
        else {
            this.ss = null;
            if (this.pk != null) {
                this.pk.l(null);
            }
        }
        _super.prototype.provideContainer.call(this, a);
        if (this.volumeChart != null) {
            this.volumeChart.provideContainer(this.st);
        }
        if (this.qd != null) {
            this.qd.h(this.sq);
        }
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.provideContainer(this.su);
            if (a != null) {
                this.vq();
            }
            else {
                this.q2 = null;
            }
        }
        if (this.p4 != null) {
            this.p4.provideContainer(this.sr);
        }
        this.setGridRows();
    };
    FinancialChart.prototype.wt = function (a, b, c) {
        if (a != null) {
            a.provideContainer(null);
        }
        if (b != null) {
            b.provideContainer(c);
        }
        this.setGridRows();
    };
    FinancialChart.prototype.w7 = function (a, b) {
        this.wt(a, b, this.su);
        if (b == null) {
            return;
        }
        this.vq();
    };
    FinancialChart.prototype.vq = function () {
        var _this = this;
        if (this.su == null) {
            return;
        }
        if (this.q2 != null) {
            this.q2.provideContainer(null);
        }
        this.q2 = TypeRegistrar.create("ZoomSlider");
        this.q2.provideContainer(this.su);
        var a = this.q2;
        a.windowRectChanged = delegateCombine(a.windowRectChanged, function (a, b) {
            if (_this.dataChart != null) {
                _this.dataChart.m4 = new Rect(0, _this.q2.windowRect.left, _this.dataChart.mq.top, _this.q2.windowRect.width, _this.dataChart.mq.height);
            }
        });
        this.vr();
    };
    FinancialChart.prototype.w5 = function (a, b) {
        this.wt(a, b, this.st);
    };
    FinancialChart.prototype.setGridRows = function () {
        if (this.sv == null) {
            return;
        }
        var a = new Array(6);
        a[0] = (this.ri ? this.sh : 0) + "px";
        a[1] = this.re ? "min-content" : "0px";
        a[2] = "auto";
        a[3] = this.indicatorCharts == null || this.indicatorCharts.count == 0 ? "0px" : this.indicatorCharts.count * 150 + "px";
        a[4] = this.volumeChart == null ? "0px" : "100px";
        a[5] = this.zoomSliderChart == null ? "0px" : "100px";
        if (this.q2 != null) {
            if (a[5] == "0px") {
                this.q2.hide();
            }
            else {
                this.q2.show();
            }
        }
        this.sv.setStyleProperty("-ms-grid-rows", stringReplace(stringJoin.apply(void 0, tslib_1.__spread([" "], a)), "auto", "1fr"));
        this.sv.setStyleProperty("grid-template-rows", stringJoin.apply(void 0, tslib_1.__spread([" "], a)));
        if (this.di == null) {
            return;
        }
        if (this.dataChart != null) {
            this.dataChart.notifyContainerResized();
        }
        if (this.qd != null) {
            this.qd.f();
        }
        if (this.volumeChart != null) {
            this.volumeChart.notifyContainerResized();
        }
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.notifyContainerResized();
        }
        if (this.q2 != null) {
            this.q2.notifySizeChanged();
        }
    };
    FinancialChart.prototype.gj = function () {
        _super.prototype.gj.call(this);
        this.ie = 3;
        this.ni = 0;
        this.cu = NaN;
        this.cs = 30;
        this.bq = true;
        this.bw = false;
        if (this.dataChart != null) {
            var a = this.dataChart.bn.i.e();
            this.ov = a.d;
            this.ow = a.e;
            this.ou = a.d;
            this.w9 = this.dataChart.pm;
        }
        var b = new BrushCollection();
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "rgba(116, 70, 185, .3)";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "rgba(159, 179, 40, .3)";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "rgba(46, 156, 166, .3)";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "rgba(63, 81, 181, .3)";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "rgba(154, 154, 154, .3)";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "rgba(67, 156, 71, .3)";
            return $ret;
        })()));
        this.ox = b;
        var c = new BrushCollection();
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#7446B9";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#9FB328";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#2E9CA6";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#3F51B5";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#9A9A9A";
            return $ret;
        })()));
        b.add(((function () {
            var $ret = new Brush();
            $ret.fill = "#439C47";
            return $ret;
        })()));
        this.oy = c;
    };
    FinancialChart.prototype.wp = function () {
        if (this.qd != null) {
            this.qd.b = null;
            this.qd.b = this.indicatorCharts;
        }
        this.setGridRows();
    };
    FinancialChart.prototype.wq = function () {
        this.setGridRows();
    };
    FinancialChart.prototype.wz = function () {
        this.wp();
    };
    FinancialChart.prototype.vp = function () {
        if (this.q2 == null || this.zoomSliderChart == null || this.dataChart == null || this.dataChart.series.count == 0) {
            return;
        }
        var a = this.di.rootWrapper.width();
        var b = this.dataChart.m3.left + this.dataChart.m3.width;
        var c = this.dataChart.m3.left;
        var d = a - b;
        this.q2.startInset = c - this.q2.trackStartInset;
        this.q2.endInset = d - this.q2.trackEndInset;
        if (this.q2.endInset < 0) {
            var e = this.q2.endInset;
            this.q2.endInset = 0;
            this.dataChart.el += (e * -1);
        }
        if (this.q2.startInset < 0) {
            var f = this.q2.startInset;
            this.q2.startInset = 0;
            this.dataChart.ej += (f * -1);
        }
        this.zoomSliderChart.ej = c;
        this.zoomSliderChart.el = d;
        this.zoomSliderChart.ef = this.q2.barExtent;
    };
    FinancialChart.prototype.wg = function () {
        this.vp();
    };
    FinancialChart.prototype.gg = function (a) {
        _super.prototype.gg.call(this, a);
        if (a != null) {
            a.ee = 0;
        }
    };
    FinancialChart.prototype.xa = function (a) {
        return a.mj();
    };
    FinancialChart.prototype.xd = function () {
        return this.sr == null ? null : this.xc(this.sr.rootWrapper);
    };
    FinancialChart.prototype.xb = function (a) {
        if (a == null || a.d == null) {
            return null;
        }
        return this.xc(a.d.rootWrapper);
    };
    FinancialChart.prototype.xc = function (a) {
        if (a == null) {
            return null;
        }
        var b = a.getOffset();
        return new Rect(0, b.left, b.top, a.width(), a.height());
    };
    FinancialChart.prototype.sd = function () {
        if (this.sv == null) {
            return NaN;
        }
        var a = this.sv.getOffset();
        return this.sv.width() + (a == null ? 0 : a.left);
    };
    FinancialChart.prototype.gr = function (source_, a, b) {
        _super.prototype.gr.call(this, source_, a, b);
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.hy(source_, a, b);
        }
    };
    FinancialChart.prototype.gs = function (source_, a, b) {
        _super.prototype.gs.call(this, source_, a, b);
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.hz(source_, a, b);
        }
    };
    FinancialChart.prototype.gq = function (source_) {
        _super.prototype.gq.call(this, source_);
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.hv(source_);
        }
    };
    FinancialChart.prototype.gu = function (source_, a, b, c) {
        _super.prototype.gu.call(this, source_, a, b, c);
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.h0(source_, a, b, c);
        }
    };
    FinancialChart.prototype.gm = function (a, b) {
        _super.prototype.gm.call(this, a, b);
        if (this.rf(a)) {
            a.toolTip = null;
        }
    };
    Object.defineProperty(FinancialChart.prototype, "pk", {
        get: function () {
            return this.pj;
        },
        set: function (a) {
            var b = this.pk;
            if (a != b) {
                this.pj = a;
                this.g1("Toolbar", b, this.pk);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "tk", {
        get: function () {
            return this.td;
        },
        set: function (a) {
            var b = this.tk;
            if (a != b) {
                this.td = a;
                this.g1("RangeSelectorTemplate", b, this.tk);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "tl", {
        get: function () {
            return this.te;
        },
        set: function (a) {
            var b = this.tl;
            if (a != b) {
                this.te = a;
                this.g1("ToolbarTemplate", b, this.tl);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "th", {
        get: function () {
            return this.ta;
        },
        set: function (a) {
            var b = this.th;
            if (a != b) {
                this.ta = a;
                this.g1("ChartTypePickerTemplate", b, this.th);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "tm", {
        get: function () {
            return this.tf;
        },
        set: function (a) {
            var b = this.tm;
            if (a != b) {
                this.tf = a;
                this.g1("TrendLineTypePickerTemplate", b, this.tm);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "tn", {
        get: function () {
            return this.tg;
        },
        set: function (a) {
            var b = this.tn;
            if (a != b) {
                this.tg = a;
                this.g1("VolumeTypePickerTemplate", b, this.tn);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ti", {
        get: function () {
            return this.tb;
        },
        set: function (a) {
            var b = this.ti;
            if (a != b) {
                this.tb = a;
                this.g1("IndicatorMenuTemplate", b, this.ti);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "tj", {
        get: function () {
            return this.tc;
        },
        set: function (a) {
            var b = this.tj;
            if (a != b) {
                this.tc = a;
                this.g1("OverlayPickerTemplate", b, this.tj);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "q2", {
        get: function () {
            return this.q1;
        },
        set: function (a) {
            var b = this.q2;
            if (a != b) {
                this.q1 = a;
                this.g1("ZoomSlider", b, this.q2);
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.get_cs = function () {
        return _super.prototype.get_cs.call(this);
    };
    FinancialChart.prototype.set_cs = function (a) {
        _super.prototype.set_cs.call(this, a);
    };
    FinancialChart.prototype.get_bq = function () {
        return _super.prototype.get_bq.call(this);
    };
    FinancialChart.prototype.set_bq = function (a) {
        _super.prototype.set_bq.call(this, a);
    };
    Object.defineProperty(FinancialChart.prototype, "sh", {
        get: function () {
            return this.r6;
        },
        set: function (a) {
            var b = this.sh;
            if (a != b) {
                this.r6 = a;
                this.g1("ToolbarHeight", b, this.sh);
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.h7 = function () {
        return this.xAxis;
    };
    FinancialChart.prototype.h8 = function () {
        return this.yAxis;
    };
    FinancialChart.prototype.u = function (a) {
        return 20;
    };
    FinancialChart.prototype.get_b5 = function () {
        return ((function () {
            var $ret = new List$1(DataSeriesType_$type, 0);
            $ret.add(20);
            return $ret;
        })());
    };
    Object.defineProperty(FinancialChart.prototype, "b5", {
        get: function () {
            return this.get_b5();
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.get_b4 = function () {
        return ((function () {
            var $ret = new List$1(IDataSeriesAdapterRule_$type, 0);
            $ret.add(new SimpleFinancialPriceSeriesRule());
            $ret.add(new SubCollectionsRule());
            return $ret;
        })());
    };
    Object.defineProperty(FinancialChart.prototype, "b4", {
        get: function () {
            return this.get_b4();
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.o6 = function (a) {
        return this.o7(a);
    };
    FinancialChart.prototype.qk = function (a) {
        return this.ql(a);
    };
    FinancialChart.prototype.o5 = function (a) {
        var b = this.o6(0);
        b.name = a;
        return b;
    };
    FinancialChart.prototype.f3 = function () {
        this.xAxis = this.o5("xAxis");
        this.yAxis = this.qk(0);
        this.yAxis.name = "yAxis";
        this.volumeAxis = this.qk(0);
        this.volumeAxis.name = "volumeAxis";
        this.volumeXAxis = this.o5("volumeXAxis");
        this.ru = new List$1(NumericYAxis.$, 0);
        this.rw = new List$1(CategoryAxisBase.$, 0);
        this.indicatorAxis = this.qk(0);
        this.indicatorAxis.name = "indicatorAxis";
        this.indicatorXAxis = this.o5("indicatorXAxis_0");
        this.ru.add(this.indicatorAxis);
        this.rw.add(this.indicatorXAxis);
        if (this.xAxis.aw == null) {
            this.xAxis.aw = new AxisLabelSettings();
        }
        if (this.yAxis.aw == null) {
            this.yAxis.aw = new AxisLabelSettings();
        }
        if (this.volumeAxis.aw == null) {
            this.volumeAxis.aw = new AxisLabelSettings();
        }
        if (this.volumeXAxis.aw == null) {
            this.volumeAxis.aw = new AxisLabelSettings();
        }
        if (this.indicatorAxis.aw == null) {
            this.indicatorAxis.aw = new AxisLabelSettings();
        }
        if (this.indicatorXAxis.aw == null) {
            this.indicatorXAxis.aw = new AxisLabelSettings();
        }
        this.zoomSliderAxis = this.qk(0);
        this.zoomSliderAxis.name = "zoomSliderAxis";
        this.zoomSliderXAxis = this.o5("zoomSliderXAxis");
        if (this.zoomSliderAxis.aw == null) {
            this.zoomSliderAxis.aw = new AxisLabelSettings();
        }
        if (this.zoomSliderXAxis.aw == null) {
            this.zoomSliderXAxis.aw = new AxisLabelSettings();
        }
    };
    FinancialChart.prototype.f1 = function (a, b) {
        var c = typeCast(MarkerSeries.$, a);
        if (c != null) {
            c.l0 = this.ai(a, b);
        }
    };
    FinancialChart.prototype.hh = function (a) {
        if (a.suggestedSecondaryAxis == 2) {
            this.yAxis.js = true;
            this.yAxis.kf = 10;
        }
    };
    FinancialChart.prototype.hk = function () {
        this.yAxis.js = this.rn;
        this.yAxis.kf = this.s9;
    };
    FinancialChart.prototype.po = function (a) {
        var b;
        if (this.pm == 0) {
            if (a == null || a.index > 0 || stringIsNullOrEmpty(a.getMemberPathFor(12))) {
                b = 4;
            }
            else {
                b = 2;
            }
        }
        else {
            b = this.pm;
        }
        b = this.pn(b);
        return b;
    };
    FinancialChart.prototype.pn = function (a) {
        if ((a == 1 || a == 2)) {
            if (TypeRegistrar.isRegistered("FinancialPriceSeries")) {
                return a;
            }
            a = 4;
        }
        if (a == 4) {
            if (TypeRegistrar.isRegistered("LineSeries")) {
                return a;
            }
            a = 3;
        }
        if (a == 3) {
            if (TypeRegistrar.isRegistered("ColumnSeries")) {
                return a;
            }
        }
        return a;
    };
    FinancialChart.prototype.px = function (a) {
        if ((a == 2 || a == 3)) {
            if (TypeRegistrar.isRegistered("FinancialPriceSeries")) {
                return a;
            }
            a = 5;
        }
        if (a == 5) {
            if (TypeRegistrar.isRegistered("LineSeries")) {
                return a;
            }
            a = 6;
        }
        if (a == 6) {
            if (TypeRegistrar.isRegistered("AreaSeries")) {
                return a;
            }
            a = 4;
        }
        if (a == 4) {
            if (TypeRegistrar.isRegistered("ColumnSeries")) {
                return a;
            }
        }
        return a;
    };
    FinancialChart.prototype.pq = function (a) {
        if (a == 2) {
            if (TypeRegistrar.isRegistered("LineSeries")) {
                return a;
            }
            a = 3;
        }
        if (a == 3) {
            if (TypeRegistrar.isRegistered("AreaSeries")) {
                return a;
            }
            a = 1;
        }
        if (a == 1) {
            if (TypeRegistrar.isRegistered("ColumnSeries")) {
                return a;
            }
        }
        return a;
    };
    FinancialChart.prototype.tv = function (a) {
        var b = a.getMemberPathFor(14);
        if (stringIsNullOrEmpty(b)) {
            b = a.getMemberPathFor(11);
        }
        return b;
    };
    FinancialChart.prototype.o7 = function (axisType_) {
        if ((this.externalObject)) {
            return (this.externalObject.createXAxis(axisType_).i);
        }
        else {
            var a = void 0;
            switch (axisType_) {
                case 0:
                    if (TypeRegistrar.isRegistered("OrdinalTimeXAxis")) {
                        a = TypeRegistrar.create("OrdinalTimeXAxis");
                    }
                    else if (TypeRegistrar.isRegistered("TimeXAxis")) {
                        a = TypeRegistrar.create("TimeXAxis");
                    }
                    else {
                        throw new BaseError(1, "no valid axes loaded");
                    }
                    return a;
                case 1:
                    if (TypeRegistrar.isRegistered("TimeXAxis")) {
                        a = TypeRegistrar.create("TimeXAxis");
                    }
                    else if (TypeRegistrar.isRegistered("OrdinalTimeXAxis")) {
                        a = TypeRegistrar.create("OrdinalTimeXAxis");
                    }
                    else {
                        throw new BaseError(1, "no valid axes loaded");
                    }
                    return a;
            }
            return null;
        }
    };
    FinancialChart.prototype.ql = function (axisType_) {
        if ((this.externalObject)) {
            return (this.externalObject.createYAxis(axisType_).i);
        }
        else {
            var a = void 0;
            switch (axisType_) {
                case 0:
                    if (TypeRegistrar.isRegistered("NumericYAxis")) {
                        a = TypeRegistrar.create("NumericYAxis");
                    }
                    else if (TypeRegistrar.isRegistered("PercentChangeYAxis")) {
                        a = TypeRegistrar.create("PercentChangeYAxis");
                    }
                    else {
                        throw new BaseError(1, "no valid axes loaded");
                    }
                    return a;
                case 1:
                    if (TypeRegistrar.isRegistered("PercentChangeYAxis")) {
                        a = TypeRegistrar.create("PercentChangeYAxis");
                    }
                    else if (TypeRegistrar.isRegistered("NumericYAxis")) {
                        a = TypeRegistrar.create("NumericYAxis");
                    }
                    else {
                        throw new BaseError(1, "no valid axes loaded");
                    }
                    return a;
            }
            return null;
        }
    };
    FinancialChart.prototype.qr = function () {
        return this.ar(1);
    };
    FinancialChart.prototype.qs = function () {
        return this.ar(0);
    };
    FinancialChart.prototype.qq = function () {
        return this.ar(2);
    };
    FinancialChart.prototype.qt = function () {
        return this.ar(20);
    };
    Object.defineProperty(FinancialChart.prototype, "q8", {
        get: function () {
            return (TypeRegistrar.isRegistered("HorizontalAnchoredCategorySeriesProxy"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "p8", {
        get: function () {
            if (TypeRegistrar.isRegistered("HorizontalAnchoredCategorySeriesProxy")) {
                return TypeRegistrar.create("HorizontalAnchoredCategorySeriesProxy");
            }
            else {
                throw new BaseError(1, "horizontal series module is not loaded, but is required.");
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "rb", {
        get: function () {
            return (TypeRegistrar.isRegistered("FinancialPriceSeriesProxy"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "p6", {
        get: function () {
            if (TypeRegistrar.isRegistered("FinancialPriceSeriesProxy")) {
                return TypeRegistrar.create("FinancialPriceSeriesProxy");
            }
            else {
                throw new BaseError(1, "financial series module is not loaded, but is required.");
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "q9", {
        get: function () {
            return (TypeRegistrar.isRegistered("IndicatorProxy"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "qa", {
        get: function () {
            if (TypeRegistrar.isRegistered("IndicatorProxy")) {
                return TypeRegistrar.create("IndicatorProxy");
            }
            else {
                throw new BaseError(1, "financial series module is not loaded, but is required.");
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ra", {
        get: function () {
            return (TypeRegistrar.isRegistered("OverlayProxy"));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "qf", {
        get: function () {
            if (TypeRegistrar.isRegistered("OverlayProxy")) {
                return TypeRegistrar.create("OverlayProxy");
            }
            else {
                throw new BaseError(1, "overlay series module is not loaded, but is required.");
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.aq = function (a, b) {
        var c = this.tv(a);
        switch (this.po(a)) {
            case 3:
                var d = this.qr();
                this.p8.setValueMemberPath(d, c);
                this.p8.setXAxis(d, this.xAxis);
                this.p8.setYAxis(d, this.yAxis);
                this.p8.setCategoryMode(d, 1);
                return d;
            case 4:
                var e = this.qs();
                this.p8.setValueMemberPath(e, c);
                this.p8.setXAxis(e, this.xAxis);
                this.p8.setYAxis(e, this.yAxis);
                this.p8.setCategoryMode(e, 1);
                return e;
            default:
            case 1:
            case 2:
                var f = this.qt();
                this.p6.setOpenMemberPath(f, a.getMemberPathFor(11));
                this.p6.setHighMemberPath(f, a.getMemberPathFor(12));
                this.p6.setLowMemberPath(f, a.getMemberPathFor(13));
                this.p6.setCloseMemberPath(f, a.getMemberPathFor(14));
                this.p6.setVolumeMemberPath(f, a.getMemberPathFor(15));
                this.p6.setXAxis(f, this.xAxis);
                this.p6.setYAxis(f, this.yAxis);
                this.p6.setDisplayType(f, this.pm == 1 ? 1 : 0);
                this.p6.setCategoryMode(f, 1);
                return f;
        }
    };
    FinancialChart.prototype.hj = function () {
        _super.prototype.hj.call(this);
        this.we(this.xAxis);
        this.w1(false);
        if (this.pr != 0 && this.volumeChart != null) {
            this.wk();
        }
        this.we(this.volumeXAxis);
        this.we(this.indicatorXAxis);
        this.wy();
        this.w0();
        if (this.py != 0) {
            this.wl();
            this.we(this.zoomSliderXAxis);
        }
    };
    FinancialChart.prototype.m6 = function (a, b) {
        var e_1, _a;
        _super.prototype.m6.call(this, a, b);
        a(this.volumeXAxis);
        if (this.rw != null) {
            try {
                for (var _b = tslib_1.__values(fromEnum(this.rw)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var c = _c.value;
                    a(c);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        }
        var d = true;
        switch (b) {
            case "XAxisMajorStroke":
            case "XAxisMajorStrokeThickness":
                d = false;
                break;
        }
        if (d) {
            a(this.zoomSliderXAxis);
        }
    };
    FinancialChart.prototype.na = function (a, b) {
        var e_2, _a;
        _super.prototype.na.call(this, a, b);
        if (b) {
            a(this.volumeAxis);
            if (this.ru != null) {
                try {
                    for (var _b = tslib_1.__values(fromEnum(this.ru)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var c = _c.value;
                        a(c);
                    }
                }
                catch (e_2_1) { e_2 = { error: e_2_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_2) throw e_2.error; }
                }
            }
            a(this.zoomSliderAxis);
        }
    };
    FinancialChart.prototype.m8 = function (a) {
        _super.prototype.m8.call(this, a);
        this.m0(this.volumeXAxis, a);
        this.m0(this.indicatorXAxis, a);
        this.m0(this.zoomSliderXAxis, a);
    };
    FinancialChart.prototype.nc = function (a) {
        _super.prototype.nc.call(this, a);
        this.m0(this.volumeAxis, a);
        this.m0(this.indicatorAxis, a);
        this.m0(this.zoomSliderAxis, a);
    };
    FinancialChart.prototype.nb = function (a) {
        _super.prototype.nb.call(this, a);
        this.mz(this.volumeAxis, a);
        this.mz(this.indicatorAxis, a);
        this.mz(this.zoomSliderAxis, a);
    };
    FinancialChart.prototype.m7 = function (a) {
        _super.prototype.m7.call(this, a);
        this.mz(this.volumeXAxis, a);
        this.mz(this.indicatorXAxis, a);
        this.mz(this.zoomSliderXAxis, a);
    };
    FinancialChart.prototype.gf = function (a) {
        var _this = this;
        _super.prototype.gf.call(this, a);
        if (a == null) {
            return;
        }
        if (a == this.zoomSliderChart) {
            a.nr = a.nt = false;
            a.legend = null;
            if (this.dataChart != null) {
                a.m9 = this.dataChart.m9;
                a.nc = this.dataChart.nc;
            }
        }
        else {
            SyncManager.d(a, ((function () {
                var $ret = new SyncSettings();
                $ret.syncChannel = _this.up();
                $ret.synchronizeHorizontally = true;
                $ret.synchronizeVertically = false;
                return $ret;
            })()));
            SyncManager.c(a);
        }
        a.bc = 2;
    };
    FinancialChart.prototype.up = function () {
        if (this.to == null) {
            FinancialChart.s8++;
            this.to = FinancialChart.s8.toString();
        }
        return this.to;
    };
    FinancialChart.prototype.v0 = function (a, b) {
        this.vm();
        this.wg();
    };
    FinancialChart.prototype.vm = function () {
        var e_3, _a;
        if (this.yAxis.bz()) {
            return;
        }
        var a = this.yAxis.at.a5;
        if (this.pr != 0) {
            a = Math.max(a, this.volumeAxis.at.a5);
        }
        try {
            for (var _b = tslib_1.__values(fromEnum(this.ru)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                a = Math.max(a, b.at.a5);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        this.vn(a);
    };
    FinancialChart.prototype.vn = function (a) {
        var e_4, _a;
        if (this.yAxis.bz()) {
            return;
        }
        this.yAxis.d3 = this.volumeAxis.d3 = a;
        try {
            for (var _b = tslib_1.__values(fromEnum(this.ru)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                b.d3 = a;
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_4) throw e_4.error; }
        }
        this.zoomSliderAxis.d3 = this.yAxis.d3;
    };
    FinancialChart.prototype.vs = function (a) {
        if (this.indicatorCharts == null) {
            return;
        }
        for (var b = 0; b < this.indicatorCharts.count; b++) {
            var c = this.indicatorCharts._inner[b];
            for (var d = 0; d < c.series.count; d++) {
                a(c.series._inner[d], b);
            }
        }
    };
    FinancialChart.prototype.vv = function (a) {
        if (this.volumeChart == null) {
            return;
        }
        for (var b = 0; b < this.volumeChart.series.count; b++) {
            a(this.volumeChart.series._inner[b], b);
        }
    };
    FinancialChart.prototype.vt = function (a) {
        if (this.dataChart == null) {
            return;
        }
        for (var b = 0; b < this.dataChart.series.count; b++) {
            var c = this.dataChart.series._inner[b];
            if (!this.rf(c)) {
                continue;
            }
            a(c, b);
        }
    };
    FinancialChart.prototype.vu = function (a, b) {
        if (this.dataChart == null) {
            return;
        }
        for (var c = 0; c < this.dataChart.series.count; c++) {
            var d = this.dataChart.series._inner[c];
            if (this.rf(d)) {
                continue;
            }
            var e = this.s2(d, c);
            a(d, e);
        }
        if (b) {
            this.vw(a);
        }
    };
    FinancialChart.prototype.vw = function (a) {
        if (this.zoomSliderChart == null) {
            return;
        }
        for (var b = 0; b < this.zoomSliderChart.series.count; b++) {
            a(this.zoomSliderChart.series._inner[b], b);
        }
    };
    FinancialChart.prototype.s2 = function (a, b) {
        if (a.bq != this.dataChart) {
            return b;
        }
        var c = this.v == null || this.v.dataSeries == null ? 0 : this.v.dataSeries.count;
        var d = this.p2 == null ? 0 : this.p2.count;
        return b - (c * d);
    };
    FinancialChart.prototype.f9 = function (a) {
        _super.prototype.f9.call(this, a);
        this.vv(a);
        this.vs(a);
        this.vw(a);
    };
    Object.defineProperty(FinancialChart.prototype, "volumeChart", {
        get: function () {
            return this.qx;
        },
        set: function (a) {
            var b = this.volumeChart;
            if (a != b) {
                this.qx = a;
                this.g1("VolumeChart", b, this.volumeChart);
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.wk = function () {
        if (this.dataChart == null) {
            return;
        }
        this.volumeChart.series.clear();
        var a = new List$1(Series.$, 0);
        var b = -1;
        for (var c = 0; c < this.dataChart.series.count; c++) {
            var d = this.dataChart.series._inner[c];
            if (this.rf(d) || d.cj) {
                continue;
            }
            b++;
            var e = void 0;
            var f = this.pr;
            f = this.pq(f);
            switch (f) {
                case 2:
                    e = this.qs();
                    break;
                case 3:
                    e = this.qq();
                    break;
                default:
                case 1:
                    e = this.qr();
                    break;
            }
            this.p8.setCategoryMode(e, 1);
            e.name = "volumeSeries_" + b;
            e.itemsSource = d.itemsSource;
            this.p8.setXAxis(e, this.volumeXAxis);
            this.p8.setYAxis(e, this.volumeAxis);
            this.p8.setValueMemberPath(e, this.v != null && this.v.dataSeries != null && this.v.dataSeries.count > b ? this.v.dataSeries._inner[b].getMemberPathFor(15) : null);
            e.fx = d.fx + " Volume";
            e.k4 = ArrayExtension.getModulus$1(Brush.$, this.oz, b);
            e.k7 = ArrayExtension.getModulus$1(Brush.$, this.o0, b);
            e.ey = this.si;
            a.add(e);
        }
        var g = this.b1("volume", false);
        if (g != null) {
            a.o(g);
        }
        for (var h = 0; h < a.count; h++) {
            var i = a._inner[h];
            this.volumeChart.series.add(i);
            this.gk(i, h);
        }
    };
    FinancialChart.prototype.rc = function (a) {
        if (!this.q8) {
            return false;
        }
        return this.p8.matchesType(a);
    };
    FinancialChart.prototype.rg = function (a) {
        if (!this.rb) {
            return false;
        }
        return this.p6.matchesType(a);
    };
    FinancialChart.prototype.rd = function (a) {
        if (!this.q9) {
            return false;
        }
        return this.qa.matchesType(a);
    };
    FinancialChart.prototype.rf = function (a) {
        if (!this.ra) {
            return false;
        }
        return this.qf.matchesType(a);
    };
    FinancialChart.prototype.wj = function () {
        if (this.dataChart == null) {
            return;
        }
        var a = 0;
        var b = this.p0 == null ? 0 : this.p0.count;
        var c = this.customIndicatorNames == null ? 0 : this.customIndicatorNames.count;
        var d = b + c;
        for (var e = 0; e < d; e++) {
            var f = new List$1(Series.$, 0);
            var g = this.indicatorCharts._inner[e];
            var h = e >= b;
            var i = h ? this.customIndicatorNames._inner[e - b] : EnumUtil.getName(FinancialIndicatorType_$type, this.p0._inner[e]);
            var j = -1;
            for (var k = 0; k < this.dataChart.series.count; k++) {
                var l = this.dataChart.series._inner[k];
                if (this.rf(l) || l.cj) {
                    continue;
                }
                j++;
                var m = void 0;
                if (h) {
                    var n = this.qu("Custom");
                    this.qa.handleCustomIndicatorEvent(n, runOn(this, this.vy));
                    m = n;
                }
                else {
                    m = this.qw(this.p0._inner[e]);
                }
                if (m == null) {
                    continue;
                }
                m.name = "indicator_" + a++;
                this.qa.setXAxis(m, this.rw._inner[e]);
                this.qa.setYAxis(m, this.ru._inner[e]);
                m.itemsSource = l.itemsSource;
                this.qa.setOpenMemberPath(m, this.v.dataSeries._inner[j].getMemberPathFor(11));
                this.qa.setHighMemberPath(m, this.v.dataSeries._inner[j].getMemberPathFor(12));
                this.qa.setLowMemberPath(m, this.v.dataSeries._inner[j].getMemberPathFor(13));
                this.qa.setCloseMemberPath(m, this.v.dataSeries._inner[j].getMemberPathFor(14));
                this.qa.setVolumeMemberPath(m, this.v.dataSeries._inner[j].getMemberPathFor(15));
                m.fx = l.fx + " " + i;
                m.k4 = ArrayExtension.getModulus$1(Brush.$, this.ot, e);
                m.ey = this.sf;
                if (this.rd(m)) {
                    this.qa.setNegativeBrush(m, ArrayExtension.getModulus$1(Brush.$, this.ou, e));
                    this.qa.setDisplayType(m, ArrayExtension.getModulus$1(IndicatorDisplayType_$type, this.qc, e));
                }
                if (this.s4 != -2147483648 && this.rd(m)) {
                    this.qa.setPeriodOverride(m, this.s4);
                }
                if (this.rd(m)) {
                    this.qa.setSmoothingPeriod(m, this.s7);
                }
                if (this.rd(m)) {
                    this.qa.setSignalPeriod(m, this.s6);
                }
                if (this.rd(m)) {
                    this.qa.setShortPeriod(m, this.s5);
                    this.qa.setLongPeriod(m, this.s3);
                }
                this.gk(m, e);
                f.add(m);
            }
            var o = this.b1(i, false);
            for (var p = 0; p < f.count; p++) {
                var q = f._inner[p];
                g.series.add(q);
            }
            if (o != null) {
                for (var r = 0; r < o.count; r++) {
                    var s = o._inner[r];
                    g.series.add(s);
                    this.gk(s, r);
                }
            }
        }
    };
    FinancialChart.prototype.qu = function (indicatorName_) {
        return (this.externalObject.createIndicator(indicatorName_ + 'Indicator').i);
    };
    FinancialChart.prototype.qw = function (a) {
        return this.qu(EnumUtil.getName(FinancialIndicatorType_$type, a));
    };
    FinancialChart.prototype.w1 = function (a) {
        if (this.pk == null) {
            return;
        }
        var b = this.xAxis;
        if (b.actualMinimumValue > b.actualMaximumValue) {
            return;
        }
        this.pk.as = b.actualMinimumValue;
        this.pk.ar = b.actualMaximumValue;
        if (a) {
            this.pk.au = b.visibleMinimum;
            this.pk.at = b.visibleMaximum;
        }
        this.pk.bn();
    };
    FinancialChart.prototype.dj = function () {
        var e_5, _a, e_6, _b;
        var _this = this;
        var a = ((function () {
            var $ret = new FinancialChartVisualData();
            $ret.mainChart = _super.prototype.dj.call(_this);
            $ret.volumeChart = _this.volumeChart == null ? null : _this.volumeChart.oe();
            $ret.toolbar = _this.pk == null ? null : _this.pk.aj();
            $ret.zoomChart = _this.zoomSliderChart == null ? null : _this.zoomSliderChart.oe();
            return $ret;
        })());
        if (this.indicatorCharts != null) {
            a.indicatorCharts = new List$1(Base.$, 0);
            try {
                for (var _c = tslib_1.__values(fromEnum(this.indicatorCharts)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var b = _d.value;
                    a.indicatorCharts.add1(b.oe());
                }
            }
            catch (e_5_1) { e_5 = { error: e_5_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_5) throw e_5.error; }
            }
        }
        if (this.dataChart != null) {
            a.mainChartLeft = this.xa(this.dataChart).x;
            a.mainChartTop = this.xa(this.dataChart).y;
        }
        if (this.volumeChart != null) {
            a.volumeChartLeft = this.xa(this.volumeChart).x;
            a.volumeChartTop = this.xa(this.volumeChart).y;
        }
        if (this.zoomSliderChart != null) {
            a.zoomChartLeft = this.xa(this.zoomSliderChart).x;
            a.zoomChartTop = this.xa(this.zoomSliderChart).y;
        }
        if (this.pk != null) {
            var c = this.xb(this.pk);
            a.toolbarLeft = c.left;
            a.toolbarTop = c.top;
            a.toolbarWidth = c.width;
            a.toolbarHeight = c.height;
        }
        if (this.indicatorCharts != null) {
            a.indicatorChartLefts = new List$1(Number_$type, 0);
            a.indicatorChartTops = new List$1(Number_$type, 0);
            try {
                for (var _e = tslib_1.__values(fromEnum(this.indicatorCharts)), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var d = _f.value;
                    a.indicatorChartLefts.add(this.xa(d).x);
                    a.indicatorChartTops.add(this.xa(d).y);
                }
            }
            catch (e_6_1) { e_6 = { error: e_6_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_6) throw e_6.error; }
            }
        }
        var e = this.xd();
        a.legendLeft = e.left;
        a.legendTop = e.top;
        a.legendWidth = e.width;
        a.legendHeight = e.height;
        a.legend = this.p4 == null ? null : this.p4.exportVisualData();
        return a;
    };
    FinancialChart.prototype.tt = function () {
        var a = this.dj();
        a.scaleByViewport();
        return a.serialize();
    };
    FinancialChart.prototype.qv = function (overlayName_) {
        return (this.externalObject.createOverlay(overlayName_ + 'Overlay').i);
    };
    FinancialChart.prototype.w0 = function () {
        var e_7, _a, e_8, _b;
        if (this.dataChart == null) {
            return;
        }
        var a = new List$1(Series.$, 0);
        try {
            for (var _c = tslib_1.__values(fromEnum(this.dataChart.series)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var b = _d.value;
                if (this.rf(b)) {
                    a.add(b);
                }
            }
        }
        catch (e_7_1) { e_7 = { error: e_7_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_7) throw e_7.error; }
        }
        try {
            for (var _e = tslib_1.__values(fromEnum(a)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var c = _f.value;
                this.dataChart.series.remove(c);
            }
        }
        catch (e_8_1) { e_8 = { error: e_8_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_8) throw e_8.error; }
        }
        if (this.p2 == null) {
            return;
        }
        var d = new List$1(Series.$, 0);
        var e = -1;
        for (var f = 0; f < this.dataChart.series.count; f++) {
            var g = this.dataChart.series._inner[f];
            if (this.rf(g) || g.cj) {
                continue;
            }
            e++;
            for (var h = 0; h < this.p2.count; h++) {
                var i = this.p2._inner[h];
                var j = void 0;
                switch (i) {
                    case 1:
                        j = this.qv(EnumUtil.getName(FinancialOverlayType_$type, i));
                        break;
                    default:
                    case 0:
                        j = this.qv(EnumUtil.getName(FinancialOverlayType_$type, i));
                        break;
                }
                j.name = g.name + "_" + EnumUtil.getName(FinancialOverlayType_$type, i);
                this.qf.setXAxis(j, this.xAxis);
                this.qf.setYAxis(j, this.yAxis);
                j.itemsSource = g.itemsSource;
                var k = e * this.p2.count + h;
                j.k4 = ArrayExtension.getModulus$1(Brush.$, this.ox, k);
                j.k7 = ArrayExtension.getModulus$1(Brush.$, this.oy, k);
                j.ey = this.sg;
                j.fx = g.fx + " " + EnumUtil.getName(FinancialOverlayType_$type, i);
                var l = g;
                if (l == null) {
                    continue;
                }
                var m = this.v.dataSeries._inner[e];
                this.qf.setOpenMemberPath(j, m.getMemberPathFor(11));
                this.qf.setHighMemberPath(j, m.getMemberPathFor(12));
                this.qf.setLowMemberPath(j, m.getMemberPathFor(13));
                this.qf.setCloseMemberPath(j, m.getMemberPathFor(14));
                this.qf.setVolumeMemberPath(j, m.getMemberPathFor(15));
                d.add(j);
            }
        }
        var n = new Array(this.dataChart.series.count);
        this.dataChart.series.copyTo(n, 0);
        this.dataChart.skipDataCleanup = true;
        this.dataChart.series.clear();
        this.dataChart.skipDataCleanup = false;
        for (var o = 0; o < n.length; o++) {
            n[o].fh = -1;
        }
        d.o(n);
        for (var p = 0; p < d.count; p++) {
            var q = d._inner[p];
            this.dataChart.series.add(q);
            this.gk(q, p);
        }
    };
    FinancialChart.prototype.wy = function () {
        var e_9, _a;
        if (this.rl) {
            return;
        }
        this.rl = true;
        if (this.indicatorCharts != null) {
            var a = this.indicatorCharts;
            this.indicatorCharts = null;
            try {
                for (var _b = tslib_1.__values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var b = _c.value;
                    this.wf(b);
                }
            }
            catch (e_9_1) { e_9 = { error: e_9_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_9) throw e_9.error; }
            }
        }
        if ((this.p0 == null || this.p0.count == 0) && (this.customIndicatorNames == null || this.customIndicatorNames.count == 0)) {
            this.indicatorCharts = null;
            if (this.ru != null) {
                this.ru.clear();
            }
            if (this.rw != null) {
                this.rw.clear();
            }
            this.wp();
            this.wz();
            this.rl = false;
            return;
        }
        if (this.indicatorCharts == null) {
            this.indicatorCharts = new List$1(XamDataChart.$, 0);
        }
        this.indicatorCharts.clear();
        this.ru.clear();
        this.rw.clear();
        var c = this.p0 == null ? 0 : this.p0.count;
        var d = this.customIndicatorNames == null ? 0 : this.customIndicatorNames.count;
        var e = c + d;
        for (var f = 0; f < e; f++) {
            var g = new XamDataChart();
            this.indicatorCharts.add(g);
            this.wd(g);
            var h = f >= c;
            g.gq = h ? this.customIndicatorNames._inner[f - c] : EnumUtil.getName(FinancialIndicatorType_$type, this.p0._inner[f]);
            if (this.indicatorAxis != null) {
                var i = void 0;
                var j = void 0;
                if (f == 0) {
                    i = this.indicatorAxis;
                    j = this.indicatorXAxis;
                }
                else {
                    i = new NumericYAxis();
                    if (!this.indicatorXAxis.b5) {
                        j = this.o6(0);
                    }
                    else {
                        j = this.o6(1);
                    }
                }
                j.name = "indicatorXAxis_" + f;
                i.name = "indicatorAxis_" + f;
                g.axes.add(i);
                g.axes.add(j);
                this.ru.add(i);
                this.rw.add(j);
                if (this.bh) {
                    this.m3(i);
                }
                if (this.bh) {
                    this.m1(j);
                }
            }
        }
        this.wj();
        this.wp();
        if (this.pk != null) {
            this.pk.ae = this.p0;
        }
        this.vo();
        this.wz();
        this.rl = false;
    };
    FinancialChart.prototype.gc = function () {
        var e_10, _a, e_11, _b;
        _super.prototype.gc.call(this);
        this.m1(this.xAxis);
        this.m1(this.volumeXAxis);
        if (this.rw != null) {
            try {
                for (var _c = tslib_1.__values(fromEnum(this.rw)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var a = _d.value;
                    this.m1(a);
                }
            }
            catch (e_10_1) { e_10 = { error: e_10_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_10) throw e_10.error; }
            }
        }
        this.m3(this.yAxis);
        this.m3(this.volumeAxis);
        if (this.ru != null) {
            try {
                for (var _e = tslib_1.__values(fromEnum(this.ru)), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var b = _f.value;
                    this.m3(b);
                }
            }
            catch (e_11_1) { e_11 = { error: e_11_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_11) throw e_11.error; }
            }
        }
        this.m1(this.zoomSliderXAxis);
        this.m3(this.zoomSliderAxis);
    };
    FinancialChart.prototype.get_bv = function () {
        return !this.rj;
    };
    Object.defineProperty(FinancialChart.prototype, "rp", {
        get: function () {
            return (this.externalObject._dynamicContent);
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.w6 = function (a, b) {
        this.ws(a, b);
        this.vo();
        if (this.zoomSliderChart != null) {
            this.zoomSliderChart.axes.add(this.zoomSliderAxis);
            this.zoomSliderChart.axes.add(this.zoomSliderXAxis);
        }
        this.wl();
        this.zoomSliderXAxis.itemsSource = this.xAxis.itemsSource;
        this.wq();
        this.w7(a, b);
    };
    FinancialChart.prototype.wl = function () {
        if (this.dataChart == null || this.zoomSliderChart == null) {
            return;
        }
        this.zoomSliderChart.series.clear();
        var a = new List$1(Series.$, 0);
        for (var b = 0; b < this.dataChart.series.count; b++) {
            var c = this.dataChart.series._inner[b];
            if (this.rf(c) || c.cj) {
                continue;
            }
            var d = void 0;
            var e = this.py;
            e = this.px(e);
            var f = this.s2(c, b);
            if (e == 1) {
                switch (this.po(this.v != null && this.v.dataSeries != null && this.v.dataSeries.count > f ? this.v.dataSeries._inner[f] : null)) {
                    case 1:
                        e = 2;
                        break;
                    case 2:
                        e = 3;
                        break;
                    case 3:
                        e = 4;
                        break;
                    case 4:
                        e = 5;
                        break;
                }
            }
            switch (e) {
                case 2:
                    d = this.qt();
                    this.p6.setDisplayType(d, 1);
                    break;
                case 3:
                    d = this.qt();
                    this.p6.setDisplayType(d, 0);
                    break;
                case 5:
                    d = this.qs();
                    break;
                case 6:
                    d = this.qq();
                    break;
                default:
                case 4:
                    d = this.qr();
                    break;
            }
            var g = this.v != null && this.v.dataSeries != null && this.v.dataSeries.count > f ? this.v.dataSeries._inner[f] : null;
            if (d.cl && !d.cr) {
                this.p8.setCategoryMode(d, 1);
                this.p8.setXAxis(d, this.zoomSliderXAxis);
                this.p8.setYAxis(d, this.zoomSliderAxis);
                this.p8.setValueMemberPath(d, g == null ? null : this.tv(g));
            }
            else if (d.cr) {
                this.p6.setCategoryMode(d, 1);
                this.p6.setXAxis(d, this.zoomSliderXAxis);
                this.p6.setYAxis(d, this.zoomSliderAxis);
                if (g != null) {
                    this.p6.setOpenMemberPath(d, g.getMemberPathFor(11));
                    this.p6.setHighMemberPath(d, g.getMemberPathFor(12));
                    this.p6.setLowMemberPath(d, g.getMemberPathFor(13));
                    this.p6.setCloseMemberPath(d, g.getMemberPathFor(14));
                    this.p6.setVolumeMemberPath(d, g.getMemberPathFor(15));
                }
            }
            d.name = "zoomSliderSeries_" + f;
            d.itemsSource = c.itemsSource;
            d.fx = c.fx;
            a.add(d);
        }
        for (var h = 0; h < a.count; h++) {
            var i = a._inner[h];
            this.zoomSliderChart.series.add(i);
            this.gk(i, h);
        }
    };
    FinancialChart.prototype.gy = function (a, b, c) {
        var e_12, _a;
        _super.prototype.gy.call(this, a, b, c);
        if (a == null || !b) {
            return;
        }
        var d = true;
        var e = true;
        switch (c) {
            case "Brushes":
            case "Outlines":
                d = e = false;
                break;
        }
        if (this.indicatorCharts != null && d) {
            try {
                for (var _b = tslib_1.__values(fromEnum(this.indicatorCharts)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var f = _c.value;
                    a(f);
                }
            }
            catch (e_12_1) { e_12 = { error: e_12_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_12) throw e_12.error; }
            }
        }
        if (this.volumeChart != null && e) {
            a(this.volumeChart);
        }
        if (this.zoomSliderChart != null) {
            a(this.zoomSliderChart);
        }
    };
    FinancialChart.prototype.vy = function (a, b) {
        var c = b;
        var d = a;
        var e = -1;
        if (this.indicatorCharts != null) {
            e = this.indicatorCharts.indexOf(d.bq);
        }
        e -= this.p0 == null ? 0 : this.p0.count;
        if (this.applyCustomIndicators != null) {
            this.applyCustomIndicators(this, new FinancialChartCustomIndicatorArgs(c, d, e));
        }
    };
    FinancialChart.prototype.wu = function (a, b, c) {
        if (a != null) {
            if (b != null) {
                a.axes.remove(b);
            }
            a.axes.add(c);
        }
        if (this.bh) {
            this.m1(c);
        }
    };
    Object.defineProperty(FinancialChart.prototype, "ro", {
        get: function () {
            return TypeRegistrar.isRegistered("IgxZoomSliderComponent");
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.vz = function (a, b) {
        this.wy();
    };
    FinancialChart.prototype.rh = function (a, b) {
        if (b <= (0)) {
            return false;
        }
        switch (a) {
            case 5: return true;
            case 4:
            case 3: return b >= timeSpanFromDays(365);
            case 2: return b >= timeSpanFromDays(180);
            case 1: return b >= timeSpanFromDays(90);
            case 0: return b >= timeSpanFromDays(30);
        }
        return false;
    };
    FinancialChart.prototype.wo = function () {
        var e_13, _a;
        var a = this.pi != null ? this.pi : new FinancialChartRangeSelectorOptionCollection(1, [5, 4, 3, 2, 1, 0]);
        var b = new FinancialChartRangeSelectorOptionCollection(0);
        var c = this.xAxis;
        var d = +(c.actualMaximumValue) - +(c.actualMinimumValue);
        try {
            for (var _b = tslib_1.__values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                if (this.rh(e, d)) {
                    b.add(e);
                }
            }
        }
        catch (e_13_1) { e_13 = { error: e_13_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_13) throw e_13.error; }
        }
        this.ph = b;
        if (this.pk != null) {
            this.pk.u = this.ph;
        }
    };
    FinancialChart.prototype.v3 = function (a, b) {
        this.wo();
    };
    FinancialChart.prototype.v8 = function (a, b) {
        this.p2 = this.pk.ag;
    };
    FinancialChart.prototype.v7 = function (a, b) {
        this.p0 = this.pk.ae;
    };
    FinancialChart.prototype.v1 = function (a, b) {
        this.wy();
    };
    FinancialChart.prototype.v2 = function (a, b) {
        this.w0();
    };
    FinancialChart.prototype.wc = function (a, b) {
        var c = a;
        if (c.bd == null) {
            return;
        }
        if (this.rj) {
            this.wn(c.bd);
        }
    };
    FinancialChart.prototype.wf = function (a) {
        SyncManager.e(a);
        a.axes.clear();
        a.series.clear();
        a.gridAreaRectChanged = delegateRemove(a.gridAreaRectChanged, runOn(this, this.v0));
        if (this.volumeChart == null && this.indicatorCharts == null) {
            this.yAxis.d3 = this.volumeAxis.d3 = this.indicatorAxis.d3 = 0;
            this.xAxis.aw.visibility = this.oj;
        }
    };
    FinancialChart.prototype.wd = function (a) {
        var b = a != this.zoomSliderChart;
        if (b) {
            if (this.dataChart != null) {
                a.m4 = new Rect(0, this.dataChart.mq.x, a.m4.y, this.dataChart.mq.width, a.m4.height);
            }
            var c = ((function () {
                var $ret = new SyncSettings();
                $ret.syncChannel = "one";
                $ret.synchronizeHorizontally = true;
                $ret.synchronizeVertically = false;
                return $ret;
            })());
            SyncManager.d(a, c);
            SyncManager.c(a);
        }
        a.gridAreaRectChanged = delegateCombine(a.gridAreaRectChanged, runOn(this, this.v0));
        this.ge(a);
    };
    FinancialChart.prototype.vo = function () {
        if (this.indicatorCharts != null || this.volumeChart != null) {
            this.mz(this.xAxis, function (a) { return a.visibility = 1; });
        }
        var _loop_1 = function (a) {
            var b = this_1.rw._inner[a];
            var c = a < this_1.rw.count - 1 || this_1.volumeChart != null;
            this_1.mz(b, function (d) { return d.visibility = c ? 1 : 0; });
        };
        var this_1 = this;
        for (var a = 0; a < this.rw.count; a++) {
            _loop_1(a);
        }
    };
    FinancialChart.prototype.ws = function (a, b) {
        if (a != null) {
            this.wf(a);
        }
        if (b != null) {
            this.wd(b);
        }
    };
    FinancialChart.prototype.w4 = function (a, b) {
        this.ws(a, b);
        this.vo();
        if (this.volumeChart != null) {
            if (this.volumeAxis != null) {
                this.volumeChart.axes.add(this.volumeAxis);
                this.volumeChart.axes.add(this.volumeXAxis);
            }
            this.wk();
            this.volumeXAxis.itemsSource = this.xAxis.itemsSource;
        }
        this.w5(a, b);
    };
    FinancialChart.prototype.v4 = function (a, b) {
        this.w2();
    };
    FinancialChart.prototype.w2 = function () {
        if (this.pk == null || +(this.pk.au) == +(dateMaxValue()) || +(this.pk.at) == +(dateMinValue()) || this.dataChart == null) {
            return;
        }
        var a = this.xAxis;
        var b = a.getWindowRectForSelection(this.pk.au, this.pk.at);
        if (b.width == 0 || isNaN_(b.width) || isInfinity(b.width)) {
            return;
        }
        this.rk = true;
        this.dataChart.m4 = new Rect(0, b.left, this.dataChart.m4.top, b.width, this.dataChart.m4.height);
        if (this.q2 != null) {
            this.q2.windowRect = this.dataChart.mq;
        }
        if (this.rj) {
            this.wn(this.dataChart);
        }
        this.rk = false;
    };
    FinancialChart.prototype.wb = function (a, b) {
        this.wo();
        this.w1(!this.rk);
    };
    FinancialChart.prototype.vx = function (a, b) {
        var _this = this;
        if (!this.rk) {
            if (this.rj) {
                this.wn(a);
            }
            var c = false;
            var d = this.g6(function () { return _this.w1(true); }, c);
            c = d.p1;
            if (this.q2 != null) {
                this.q2.windowRect = this.dataChart.mq;
            }
        }
    };
    FinancialChart.prototype.ww = function (a, b, c, d) {
        var e_14, _a;
        if (a == null || b == null) {
            return;
        }
        if (c != -1) {
            this.rk = true;
            a.m4 = new Rect(0, d, a.mq.top, c, a.mq.height);
            this.rk = false;
        }
        var e = 1.7976931348623157E+308;
        var f = -1.7976931348623157E+308;
        var g = new Rect(0, 0, 0, 1, 1);
        var h = new ScalerParams(0, g, g, this.yAxis.b8, a.mu);
        try {
            for (var _b = tslib_1.__values(fromEnum(a.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var i = _c.value;
                h.b = i.eh();
                var j = i.ao();
                var k = j == null || j.c == 1.7976931348623157E+308 || isNaN_(j.c);
                if (k) {
                    continue;
                }
                var l = b.dv(j.c, h);
                var m = b.dv(j.b, h);
                f = Math.max(f, l);
                e = Math.min(e, m);
            }
        }
        catch (e_14_1) { e_14 = { error: e_14_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_14) throw e_14.error; }
        }
        var n = a.mq.width;
        if (c != -1) {
            n = c;
        }
        var o = a.mq.left;
        if (d != -1) {
            o = d;
        }
        if (e == 1.7976931348623157E+308 || f == -1.7976931348623157E+308 || isNaN_(e) || isNaN_(f)) {
            return;
        }
        this.rk = true;
        var p = new Rect(0, o, e, n, f - e);
        a.m4 = p;
        this.rk = false;
    };
    FinancialChart.prototype.wv = function (a) {
        if (a == null) {
            return;
        }
        if (a == this.dataChart) {
            this.ww(this.dataChart, this.yAxis, -1, -1);
            if (this.volumeChart != null) {
                this.ww(this.volumeChart, this.volumeAxis, this.dataChart.mq.width, this.dataChart.mq.left);
            }
        }
        else if (a == this.volumeChart) {
            this.ww(this.volumeChart, this.volumeAxis, -1, -1);
            this.ww(this.dataChart, this.yAxis, this.volumeChart.mq.width, this.volumeChart.mq.left);
        }
    };
    FinancialChart.prototype.wn = function (a) {
        var _this = this;
        this.g5(function () { return _this.wv(a); });
    };
    FinancialChart.prototype.v5 = function (a, b) {
        if (this.rj) {
            this.wn(a);
        }
    };
    FinancialChart.prototype.w3 = function () {
        if (!this.rp) {
            return;
        }
        this.vr();
        if (this.py == 0) {
            this.zoomSliderChart = null;
        }
        else if (this.zoomSliderChart == null) {
            this.zoomSliderChart = ((function () {
                var $ret = new XamDataChart();
                $ret.name = "ZoomSliderChart";
                return $ret;
            })());
        }
        else {
            this.wl();
        }
    };
    FinancialChart.prototype.vr = function () {
        var container_ = this.su.rootWrapper.getNativeElement();
        var containerParent_ = container_.parentElement;
        if (this.q2 != null && containerParent_ != null && !this.rq) {
            this.rq = true;
            if (TypeRegistrar.isRegistered("IgxZoomSliderComponent")) {
                var z_ = this.q2;
                var f_ = this.externalObject;
                var sliderComponent_ = TypeRegistrar.get("IgxZoomSliderComponent");
                var sliderInstance_ = TypeRegistrar.create("IgxZoomSliderComponent");
                sliderInstance_._implementation = z_;
                sliderComponent_._staticStyling(container_, sliderInstance_, f_);
            }
        }
    };
    FinancialChart.prototype.wx = function () {
        var _this = this;
        if (this.pt != 1) {
            return;
        }
        this.m5(function (a) {
            var e_15, _a;
            var b;
            b = a.breaks;
            b.clear();
            if (_this.xAxisBreaks == null) {
                return;
            }
            try {
                for (var _b = tslib_1.__values(fromEnum(_this.xAxisBreaks)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var c = _c.value;
                    b.add(c);
                }
            }
            catch (e_15_1) { e_15 = { error: e_15_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_15) throw e_15.error; }
            }
        });
    };
    FinancialChart.prototype.ho = function (a, b, c) {
        _super.prototype.ho.call(this, a, b, c);
        if (this.v.dataSeries.count > 0) {
            if (this.pt == 1 && stringIsNullOrEmpty(this.ea)) {
                this.ac.setXMemberPath(a, c.getMemberPathFor(17));
            }
            if (stringIsNullOrEmpty(this.ec)) {
                this.ac.setYMemberPath(a, this.tv(c));
            }
            if (stringIsNullOrEmpty(this.d6)) {
                this.ac.setLabelMemberPath(a, this.tv(c));
            }
            if (stringIsNullOrEmpty(this.d3)) {
                this.ac.setContentMemberPath(a, this.tv(c));
            }
        }
    };
    FinancialChart.prototype.m1 = function (a) {
        var e_16, _a;
        _super.prototype.m1.call(this, a);
        var b = a;
        this.we(b);
        if (a.bd != null) {
            try {
                for (var _b = tslib_1.__values(fromEnum(a.bd.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var c = _c.value;
                    if (this.rc(c)) {
                        this.p8.setXAxis(c, b);
                    }
                    else if (this.rg(c)) {
                        this.p6.setXAxis(c, b);
                    }
                    else if (this.rd(c)) {
                        this.qa.setXAxis(c, b);
                    }
                    else if (this.rf(c)) {
                        this.qf.setXAxis(c, b);
                    }
                }
            }
            catch (e_16_1) { e_16 = { error: e_16_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_16) throw e_16.error; }
            }
        }
        var d = a == this.zoomSliderXAxis;
        if (d) {
            a.ii = this.w9;
            a.d2 = this.sp;
            this.mz(a, function (e) { return e.visibility = 1; });
        }
        var e = a;
        e.minimumValue = this.r2;
        e.maximumValue = this.r1;
    };
    FinancialChart.prototype.m3 = function (a) {
        var e_17, _a;
        _super.prototype.m3.call(this, a);
        if (a.bd != null && a == this.yAxis) {
            try {
                for (var _b = tslib_1.__values(fromEnum(a.bd.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var b = _c.value;
                    if (this.rc(b)) {
                        this.p8.setYAxis(b, this.yAxis);
                    }
                    else if (this.rg(b)) {
                        this.p6.setYAxis(b, this.yAxis);
                    }
                    else if (this.rd(b)) {
                        this.qa.setYAxis(b, this.yAxis);
                    }
                    else if (this.rf(b)) {
                        this.qf.setYAxis(b, this.yAxis);
                    }
                }
            }
            catch (e_17_1) { e_17 = { error: e_17_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_17) throw e_17.error; }
            }
        }
        a.jn = this.rm;
        a.kb = this.sn;
        a.ka = this.sm;
        if (a == this.yAxis) {
            a.j7 = this.sl;
        }
        var c = a == this.zoomSliderAxis;
        if (c) {
            this.mz(a, function (d) { return d.visibility = 1; });
        }
    };
    FinancialChart.prototype.we = function (a) {
        a.itemsSource = this.dataChart != null && this.dataChart.series.count > 0 ? this.dataChart.series._inner[0].itemsSource : null;
        a.e6 = XYChart.kv(a, this.v.dataSeries);
        if (this.v.dataSeries.count > 0) {
            var b = this.v.dataSeries._inner[0].getMemberPathFor(17);
            a.gv(b);
        }
    };
    FinancialChart.prototype.gk = function (a, b) {
        _super.prototype.gk.call(this, a, b);
        if (a == null) {
            return;
        }
        var c = this.dataChart != null && this.dataChart.series.contains(a);
        if (c && a.cz) {
            a.jh(this.ov != null ? ArrayExtension.getModulus$1(Brush.$, this.ov, b) : null, this.ow != null ? ArrayExtension.getModulus$1(Brush.$, this.ow, b) : null);
        }
        var d = this.zoomSliderChart == a.bq;
        var e = this.rd(a);
        if (this.rf(a)) {
            a.k4 = this.ox != null ? ArrayExtension.getModulus$1(Brush.$, this.ox, b) : null;
            a.k7 = this.oy != null ? ArrayExtension.getModulus$1(Brush.$, this.oy, b) : null;
            a.ey = this.sg;
        }
        else if (e) {
            a.k4 = this.ot != null ? ArrayExtension.getModulus$1(Brush.$, this.ot, b) : null;
            a.ey = this.sf;
        }
        else if (!a.cj && (c || d)) {
            a.k4 = this.j != null ? ArrayExtension.getModulus$1(Brush.$, this.j, b) : null;
            a.k7 = this.n != null ? ArrayExtension.getModulus$1(Brush.$, this.n, b) : null;
        }
        var f = this.volumeChart != null && this.volumeChart == a.bq;
        if (f) {
            a.ey = this.si;
        }
        a.legend = d || f || e || !a.isUsableInLegend ? null : this.legend != null ? this.legend : this.re ? this.p4 : null;
    };
    FinancialChart.prototype.g1 = function (a, b, c) {
        var e_18, _a, e_19, _b;
        var _this = this;
        _super.prototype.g1.call(this, a, b, c);
        switch (a) {
            case "YAxisIsLogarithmic":
                this.yAxis.js = this.rn;
                if (this.volumeAxis != null) {
                    this.volumeAxis.js = this.rn;
                }
                if (this.zoomSliderAxis != null) {
                    this.zoomSliderAxis.js = this.rn;
                }
                break;
            case "YAxisLogarithmBase":
                this.yAxis.kf = this.s9;
                if (this.volumeAxis != null) {
                    this.volumeAxis.kf = this.s9;
                }
                if (this.zoomSliderAxis != null) {
                    this.zoomSliderAxis.kf = this.s9;
                }
                break;
            case "VolumeType":
                var d = EnumUtil.getEnumValue(FinancialChartVolumeType_$type, b);
                if (this.pr == 0) {
                    this.volumeChart = null;
                }
                else if (this.volumeChart == null) {
                    this.volumeChart = ((function () {
                        var $ret = new XamDataChart();
                        $ret.name = "VolumeChart";
                        return $ret;
                    })());
                }
                else {
                    this.wk();
                }
                break;
            case "VolumeChart":
                this.w4(typeCast(XamDataChart.$, b), typeCast(XamDataChart.$, c));
                break;
            case "DataChart":
                if (typeCast(XamDataChart.$, b) !== null) {
                    var e = b;
                    e.gridAreaRectChanged = delegateRemove(e.gridAreaRectChanged, runOn(this, this.v0));
                    e.actualWindowRectChanged = delegateRemove(e.actualWindowRectChanged, runOn(this, this.vx));
                    e.seriesDataUpdated = delegateRemove(e.seriesDataUpdated, runOn(this, this.v5));
                }
                if (this.dataChart != null) {
                    var f = this.dataChart;
                    f.gridAreaRectChanged = delegateCombine(f.gridAreaRectChanged, runOn(this, this.v0));
                    var g = this.dataChart;
                    g.actualWindowRectChanged = delegateCombine(g.actualWindowRectChanged, runOn(this, this.vx));
                    var h = this.dataChart;
                    h.seriesDataUpdated = delegateCombine(h.seriesDataUpdated, runOn(this, this.v5));
                }
                this.w3();
                break;
            case "XAxisMode":
                this.xAxis = this.o6(this.pt);
                this.xAxis.name = "xAxis";
                this.volumeXAxis = this.o6(this.pt);
                this.volumeXAxis.name = "volumeXAxis";
                this.indicatorXAxis = this.o6(this.pt);
                this.indicatorXAxis.name = "indicatorXAxis_0";
                this.zoomSliderXAxis = this.o6(this.pt);
                this.zoomSliderXAxis.name = "zoomSliderXAxis";
                this.mz(this.zoomSliderXAxis, function (i) { return i.visibility = 1; });
                this.vo();
                if (this.pt == 1) {
                    this.wx();
                }
                break;
            case "YAxisMode":
                this.yAxis = this.qk(this.pv);
                this.yAxis.name = "yAxis";
                this.zoomSliderAxis = this.qk(this.pv);
                this.zoomSliderAxis.name = "zoomSliderAxis";
                this.volumeAxis = this.qk(this.pv);
                this.volumeAxis.name = "volumeAxis";
                break;
            case "Toolbar":
                var i = typeCast(FinancialChartToolbar.$, b);
                if (i != null) {
                    i.rangeChanged = delegateRemove(i.rangeChanged, runOn(this, this.v4));
                    i.indicatorTypesChanged = delegateRemove(i.indicatorTypesChanged, runOn(this, this.v7));
                    i.overlayTypesChanged = delegateRemove(i.overlayTypesChanged, runOn(this, this.v8));
                }
                if (this.pk != null) {
                    this.pk.ae = this.p0;
                    this.pk.ag = this.p2;
                    this.pk.u = this.ph;
                    this.w1(true);
                    var j = this.pk;
                    j.rangeChanged = delegateCombine(j.rangeChanged, runOn(this, this.v4));
                    var k = this.pk;
                    k.indicatorTypesChanged = delegateCombine(k.indicatorTypesChanged, runOn(this, this.v7));
                    var l = this.pk;
                    l.overlayTypesChanged = delegateCombine(l.overlayTypesChanged, runOn(this, this.v8));
                }
                break;
            case "XAxis":
                var m = typeCast(CategoryAxisBase.$, b);
                if (m != null) {
                    if (this.dataChart != null) {
                        this.dataChart.axes.remove(m);
                    }
                }
                var n = typeCast(ITimeRangeSelectorAxis_$type, b);
                if (n != null) {
                    n.visibleRangeChanged = delegateRemove(n.visibleRangeChanged, runOn(this, this.wb));
                }
                if (this.dataChart != null) {
                    this.dataChart.axes.add(this.xAxis);
                }
                if (this.bh) {
                    this.m1(this.xAxis);
                    this.f7();
                }
                this.w1(false);
                this.w2();
                this.wo();
                var o = this.xAxis;
                o.visibleRangeChanged = delegateCombine(o.visibleRangeChanged, runOn(this, this.wb));
                break;
            case "ChartType":
                this.hj();
                break;
            case "VolumeXAxis":
                this.wu(this.volumeChart, typeCast(Axis.$, b), this.volumeXAxis);
                break;
            case "ZoomSliderXAxis":
                this.wu(this.zoomSliderChart, typeCast(Axis.$, b), this.zoomSliderXAxis);
                break;
            case "IndicatorXAxis":
                this.wy();
                break;
            case "YAxis":
                var p = typeCast(NumericYAxis.$, b);
                if (p != null) {
                    if (this.dataChart != null) {
                        this.dataChart.axes.remove(p);
                    }
                }
                if (this.dataChart != null) {
                    this.dataChart.axes.add(this.yAxis);
                }
                if (this.bh) {
                    this.m3(this.yAxis);
                    this.m3(this.yAxis);
                }
                var q = this.yAxis;
                q.rangeChanged = delegateCombine(q.rangeChanged, runOn(this, this.wc));
                break;
            case "VolumeAxis":
                var r = typeCast(Axis.$, b);
                if (this.volumeChart != null && r != null) {
                    this.volumeChart.axes.remove(r);
                }
                if (this.volumeChart != null && this.volumeAxis != null) {
                    this.volumeChart.axes.add(this.volumeAxis);
                    this.wk();
                }
                if (this.bh) {
                    this.m3(this.volumeAxis);
                }
                var s = this.volumeAxis;
                s.rangeChanged = delegateCombine(s.rangeChanged, runOn(this, this.wc));
                break;
            case "IndicatorAxis":
                if (this.indicatorCharts != null) {
                    for (var t = 0; t < this.indicatorCharts.count; t++) {
                        var u = this.indicatorCharts._inner[t];
                        var v = new List$1(Axis.$, 0);
                        try {
                            for (var _c = (e_18 = void 0, tslib_1.__values(fromEnum(u.axes))), _d = _c.next(); !_d.done; _d = _c.next()) {
                                var w = _d.value;
                                if (typeCast(NumericYAxis.$, w) !== null) {
                                    v.add(w);
                                }
                            }
                        }
                        catch (e_18_1) { e_18 = { error: e_18_1 }; }
                        finally {
                            try {
                                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                            }
                            finally { if (e_18) throw e_18.error; }
                        }
                        try {
                            for (var _e = (e_19 = void 0, tslib_1.__values(fromEnum(v))), _f = _e.next(); !_f.done; _f = _e.next()) {
                                var x = _f.value;
                                u.axes.remove(x);
                            }
                        }
                        catch (e_19_1) { e_19 = { error: e_19_1 }; }
                        finally {
                            try {
                                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                            }
                            finally { if (e_19) throw e_19.error; }
                        }
                        var y = null;
                        if (t == 0) {
                            y = this.indicatorAxis;
                        }
                        else if (this.pv == 1) {
                            y = this.qk(this.pv);
                        }
                        else if (typeCast(NumericYAxis.$, this.indicatorAxis) !== null) {
                            y = new NumericYAxis();
                        }
                        if (y != null) {
                            u.axes.add(y);
                        }
                        if (this.bh) {
                            this.m3(y);
                        }
                    }
                }
                break;
            case "IsWindowSyncedToVisibleRange":
                if (this.dataChart != null) {
                    this.dataChart.nt = this.bw && this.bv;
                }
                if (this.volumeChart != null) {
                    this.volumeChart.nt = this.bw && this.bv;
                }
                if (this.rj) {
                    this.wv(this.dataChart);
                }
                else {
                    this.volumeChart.oc = 1;
                }
                break;
            case "IndicatorTypes":
                var z = typeCast(ObservableCollection$1.$.specialize(FinancialIndicatorType_$type), b);
                if (z != null) {
                    z.collectionChanged = delegateRemove(z.collectionChanged, runOn(this, this.v1));
                }
                var aa = typeCast(ObservableCollection$1.$.specialize(FinancialIndicatorType_$type), c);
                if (aa != null) {
                    aa.collectionChanged = delegateCombine(aa.collectionChanged, runOn(this, this.v1));
                }
                this.wy();
                break;
            case "OverlayTypes":
                var ab = typeCast(ObservableCollection$1.$.specialize(FinancialOverlayType_$type), b);
                if (ab != null) {
                    ab.collectionChanged = delegateRemove(ab.collectionChanged, runOn(this, this.v2));
                }
                var ac = typeCast(ObservableCollection$1.$.specialize(FinancialOverlayType_$type), c);
                if (ac != null) {
                    ac.collectionChanged = delegateCombine(ac.collectionChanged, runOn(this, this.v2));
                }
                this.w0();
                break;
            case "YAxisAbbreviateLargeNumbers":
                this.m9(function (ad) { return ad.jn = _this.rm; });
                break;
            case "YAxisMinimumValue":
                this.na(function (ad) { return ad.kb = _this.sn; }, false);
                break;
            case "YAxisMaximumValue":
                this.na(function (ad) { return ad.ka = _this.sm; }, false);
                break;
            case "YAxisInterval":
                this.na(function (ad) { return ad.j7 = _this.sl; }, false);
                break;
            case "ZoomSliderType":
                this.w3();
                break;
            case "ZoomSliderChart":
                if (!this.ro) {
                    return;
                }
                this.w6(typeCast(XamDataChart.$, b), typeCast(XamDataChart.$, c));
                break;
            case "NegativeBrushes":
            case "NegativeOutlines":
                this.vu(function (ad, ae) {
                    if (ad.cz) {
                        ad.jh(_this.ov != null ? ArrayExtension.getModulus$1(Brush.$, _this.ov, ae) : null, _this.ow != null ? ArrayExtension.getModulus$1(Brush.$, _this.ow, ae) : null);
                    }
                }, true);
                break;
            case "OverlayBrushes":
                this.f9(function (ad, ae) {
                    if (!(_this.rf(ad))) {
                        return;
                    }
                    ad.k4 = _this.ox != null ? ArrayExtension.getModulus$1(Brush.$, _this.ox, ae) : null;
                });
                break;
            case "OverlayOutlines":
                this.f9(function (ad, ae) {
                    if (!(_this.rf(ad))) {
                        return;
                    }
                    ad.k7 = _this.oy != null ? ArrayExtension.getModulus$1(Brush.$, _this.oy, ae) : null;
                });
                break;
            case "OverlayThickness":
                this.f9(function (ad, ae) {
                    if (!(_this.rf(ad))) {
                        return;
                    }
                    ad.ey = _this.sg;
                });
                break;
            case "VolumeBrushes":
                this.vv(function (ad, ae) { return ad.k4 = ArrayExtension.getModulus$1(Brush.$, _this.oz, ae); });
                break;
            case "VolumeOutlines":
                this.vv(function (ad, ae) { return ad.k7 = ArrayExtension.getModulus$1(Brush.$, _this.o0, ae); });
                break;
            case "VolumeThickness":
                this.vv(function (ad, ae) { return ad.ey = _this.si; });
                break;
            case "IndicatorNegativeBrushes":
                this.vs(function (ad, ae) { return _this.qa.setNegativeBrush(ad, ArrayExtension.getModulus$1(Brush.$, _this.ou, ae)); });
                break;
            case "IndicatorBrushes":
                this.vs(function (ad, ae) { return ad.k4 = ArrayExtension.getModulus$1(Brush.$, _this.ot, ae); });
                break;
            case "IndicatorThickness":
                this.vs(function (ad, ae) { return ad.ey = _this.sf; });
                break;
            case "IndicatorDisplayTypes":
                this.vs(function (ad, ae) { return _this.qa.setDisplayType(ad, ArrayExtension.getModulus$1(IndicatorDisplayType_$type, _this.qc, ae)); });
                break;
            case "IndicatorPeriod":
                this.vs(function (ad, ae) {
                    if (_this.s4 == -2147483648 || !(_this.rd(ad))) {
                        return;
                    }
                    _this.qa.setPeriodOverride(ad, _this.s4);
                });
                break;
            case "IndicatorMultiplier":
                this.vs(function (ad, ae) {
                    if (!(_this.rf(ad))) {
                        return;
                    }
                    _this.qf.setMultiplier(ad, _this.se);
                });
                break;
            case "IndicatorSmoothingPeriod":
                this.vs(function (ad, ae) {
                    if (!(_this.rd(ad))) {
                        return;
                    }
                    _this.qa.setSmoothingPeriod(ad, _this.s7);
                });
                break;
            case "IndicatorShortPeriod":
                this.vs(function (ad, ae) {
                    if (!(_this.rd(ad))) {
                        return;
                    }
                    _this.qa.setShortPeriod(ad, _this.s5);
                });
                break;
            case "IndicatorLongPeriod":
                this.vs(function (ad, ae) {
                    if (!(_this.rd(ad))) {
                        return;
                    }
                    _this.qa.setLongPeriod(ad, _this.s3);
                });
                break;
            case "IndicatorSignalPeriod":
                this.vs(function (ad, ae) {
                    if (!(_this.rd(ad))) {
                        return;
                    }
                    _this.qa.setSignalPeriod(ad, _this.s6);
                });
                break;
            case "RangeSelectorOptions":
                var ad = typeCast(FinancialChartRangeSelectorOptionCollection.$, b);
                if (ad != null) {
                    ad.collectionChanged = delegateRemove(ad.collectionChanged, runOn(this, this.v3));
                }
                if (this.pi != null) {
                    var ae = this.pi;
                    ae.collectionChanged = delegateCombine(ae.collectionChanged, runOn(this, this.v3));
                }
                this.wo();
                break;
            case "CustomIndicatorNames":
                var af = typeCast(ObservableCollection$1.$.specialize(String_$type), b);
                if (af != null) {
                    af.collectionChanged = delegateRemove(af.collectionChanged, runOn(this, this.vz));
                }
                if (this.customIndicatorNames != null) {
                    var ag = this.customIndicatorNames;
                    ag.collectionChanged = delegateCombine(ag.collectionChanged, runOn(this, this.vz));
                }
                this.wy();
                break;
            case "Legend":
                if (this.zoomSliderChart != null) {
                    this.zoomSliderChart.legend = null;
                }
                break;
            case "Brushes":
                this.vu(function (ah, ai) { return ah.k4 = _this.j != null ? ArrayExtension.getModulus$1(Brush.$, _this.j, ai) : null; }, true);
                break;
            case "Outlines":
                this.vu(function (ah, ai) { return ah.k7 = _this.n != null ? ArrayExtension.getModulus$1(Brush.$, _this.n, ai) : null; }, true);
                break;
            case "XAxisLabelVisibility":
                if (this.oj == 0 && this.zoomSliderXAxis != null) {
                    this.mz(this.zoomSliderXAxis, function (ah) { return ah.visibility = 1; });
                }
                this.vo();
                break;
            case "YAxisLabelVisibility":
                if (this.ok != 0 || this.zoomSliderAxis == null) {
                    break;
                }
                this.mz(this.zoomSliderAxis, function (ah) { return ah.visibility = 1; });
                break;
            case "ZoomSliderXAxisMajorStroke":
                this.zoomSliderXAxis.ii = this.w9;
                break;
            case "ZoomSliderXAxisMajorStrokeThickness":
                this.zoomSliderXAxis.d2 = this.sp;
                break;
            case "FinancialChartLegend":
            case "IsLegendVisible":
                var ah_1 = this.re && this.legend == null;
                {
                    var ai = function (aj, ak) {
                        if (aj.isUsableInLegend) {
                            aj.legend = ah_1 ? _this.p4 : null;
                        }
                    };
                    this.vu(ai, false);
                    this.vt(ai);
                }
                break;
            case "ZoomSliderAxis":
                var aj = typeCast(Axis.$, b);
                if (aj != null && this.zoomSliderChart != null) {
                    this.zoomSliderChart.axes.remove(aj);
                }
                if (this.zoomSliderAxis != null) {
                    if (this.zoomSliderChart != null) {
                        this.zoomSliderChart.axes.add(this.zoomSliderAxis);
                        this.wl();
                        this.zoomSliderXAxis.itemsSource = this.xAxis.itemsSource;
                    }
                    if (this.bh) {
                        this.m3(this.zoomSliderAxis);
                    }
                    this.mz(this.zoomSliderAxis, function (ak) { return ak.visibility = 1; });
                }
                break;
            case "XAxisMinimumValue":
                this.m5(function (ak) {
                    var al = typeCast(ITimeRangeSelectorAxis_$type, ak);
                    if (al != null) {
                        al.minimumValue = _this.r2;
                    }
                });
                break;
            case "XAxisMaximumValue":
                this.m5(function (ak) {
                    var al = typeCast(ITimeRangeSelectorAxis_$type, ak);
                    if (al != null) {
                        al.maximumValue = _this.r1;
                    }
                });
                break;
        }
    };
    Object.defineProperty(FinancialChart.prototype, "rn", {
        get: function () {
            return this.q7;
        },
        set: function (a) {
            var b = this.rn;
            if (a != b) {
                this.q7 = a;
                this.g1("YAxisIsLogarithmic", b, this.rn);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "s9", {
        get: function () {
            return this.s1;
        },
        set: function (a) {
            var b = this.s9;
            if (a != b) {
                this.s1 = a;
                this.g1("YAxisLogarithmBase", b, this.s9);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "sl", {
        get: function () {
            return this.r8;
        },
        set: function (a) {
            var b = this.sl;
            if (a != b) {
                this.r8 = a;
                this.g1("YAxisInterval", b, this.sl);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "sn", {
        get: function () {
            return this.sa;
        },
        set: function (a) {
            var b = this.sn;
            if (a != b) {
                this.sa = a;
                this.g1("YAxisMinimumValue", b, this.sn);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "sm", {
        get: function () {
            return this.r9;
        },
        set: function (a) {
            var b = this.sm;
            if (a != b) {
                this.r9 = a;
                this.g1("YAxisMaximumValue", b, this.sm);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "so", {
        get: function () {
            return this.sb;
        },
        set: function (a) {
            var b = this.so;
            if (a != b) {
                this.sb = a;
                this.g1("YAxisMinorInterval", b, this.so);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "sk", {
        get: function () {
            return this.yAxis.j3;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "sj", {
        get: function () {
            return this.yAxis.j2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "pr", {
        get: function () {
            return this.pp;
        },
        set: function (a) {
            var b = this.pr;
            if (a != b) {
                this.pp = a;
                this.g1("VolumeType", enumGetBox(FinancialChartVolumeType_$type, b), enumGetBox(FinancialChartVolumeType_$type, this.pr));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "pt", {
        get: function () {
            return this.ps;
        },
        set: function (a) {
            var b = this.pt;
            if (a != b) {
                this.ps = a;
                this.g1("XAxisMode", enumGetBox(FinancialChartXAxisMode_$type, b), enumGetBox(FinancialChartXAxisMode_$type, this.pt));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "pv", {
        get: function () {
            return this.pu;
        },
        set: function (a) {
            var b = this.pv;
            if (a != b) {
                this.pu = a;
                this.g1("YAxisMode", enumGetBox(FinancialChartYAxisMode_$type, b), enumGetBox(FinancialChartYAxisMode_$type, this.pv));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ri", {
        get: function () {
            return this.q4;
        },
        set: function (a) {
            var b = this.ri;
            if (a != b) {
                this.q4 = a;
                this.g1("IsToolbarVisible", b, this.ri);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "pm", {
        get: function () {
            return this.pl;
        },
        set: function (a) {
            var b = this.pm;
            if (a != b) {
                this.pl = a;
                this.g1("ChartType", enumGetBox(FinancialChartType_$type, b), enumGetBox(FinancialChartType_$type, this.pm));
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.get_ni = function () {
        return _super.prototype.get_ni.call(this);
    };
    FinancialChart.prototype.set_ni = function (a) {
        _super.prototype.set_ni.call(this, a);
    };
    Object.defineProperty(FinancialChart.prototype, "rj", {
        get: function () {
            return this.q5;
        },
        set: function (a) {
            var b = this.rj;
            if (a != b) {
                this.q5 = a;
                this.g1("IsWindowSyncedToVisibleRange", b, this.rj);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "p0", {
        get: function () {
            return this.pz;
        },
        set: function (a) {
            var b = this.p0;
            if (a != b) {
                this.pz = a;
                this.g1("IndicatorTypes", b, this.p0);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "p2", {
        get: function () {
            return this.p1;
        },
        set: function (a) {
            var b = this.p2;
            if (a != b) {
                this.p1 = a;
                this.g1("OverlayTypes", b, this.p2);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "indicatorCharts", {
        get: function () {
            return this.rs;
        },
        set: function (a) {
            var b = this.indicatorCharts;
            if (a != b) {
                this.rs = a;
                this.g1("IndicatorCharts", b, this.indicatorCharts);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "rm", {
        get: function () {
            return this.q6;
        },
        set: function (a) {
            var b = this.rm;
            if (a != b) {
                this.q6 = a;
                this.g1("YAxisAbbreviateLargeNumbers", b, this.rm);
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.get_cu = function () {
        return _super.prototype.get_cu.call(this);
    };
    FinancialChart.prototype.set_cu = function (a) {
        _super.prototype.set_cu.call(this, a);
    };
    FinancialChart.prototype.get_ie = function () {
        return _super.prototype.get_ie.call(this);
    };
    FinancialChart.prototype.set_ie = function (a) {
        _super.prototype.set_ie.call(this, a);
    };
    Object.defineProperty(FinancialChart.prototype, "zoomSliderChart", {
        get: function () {
            return this.qy;
        },
        set: function (a) {
            var b = this.zoomSliderChart;
            if (a != b) {
                this.qy = a;
                this.g1("ZoomSliderChart", b, this.zoomSliderChart);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "zoomSliderAxis", {
        get: function () {
            return this.qj;
        },
        set: function (a) {
            var b = this.zoomSliderAxis;
            if (a != b) {
                this.qj = a;
                this.g1("ZoomSliderAxis", b, this.zoomSliderAxis);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "zoomSliderXAxis", {
        get: function () {
            return this.o4;
        },
        set: function (a) {
            var b = this.zoomSliderXAxis;
            if (a != b) {
                this.o4 = a;
                this.g1("ZoomSliderXAxis", b, this.zoomSliderXAxis);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "py", {
        get: function () {
            return this.pw;
        },
        set: function (a) {
            var b = this.py;
            if (a != b) {
                this.pw = a;
                this.g1("ZoomSliderType", enumGetBox(FinancialChartZoomSliderType_$type, b), enumGetBox(FinancialChartZoomSliderType_$type, this.py));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ov", {
        get: function () {
            return this.on;
        },
        set: function (a) {
            var b = this.ov;
            if (a != b) {
                this.on = a;
                this.g1("NegativeBrushes", b, this.ov);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ow", {
        get: function () {
            return this.oo;
        },
        set: function (a) {
            var b = this.ow;
            if (a != b) {
                this.oo = a;
                this.g1("NegativeOutlines", b, this.ow);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ox", {
        get: function () {
            return this.op;
        },
        set: function (a) {
            var b = this.ox;
            if (a != b) {
                this.op = a;
                this.g1("OverlayBrushes", b, this.ox);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "oy", {
        get: function () {
            return this.oq;
        },
        set: function (a) {
            var b = this.oy;
            if (a != b) {
                this.oq = a;
                this.g1("OverlayOutlines", b, this.oy);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "o0", {
        get: function () {
            return this.os;
        },
        set: function (a) {
            var b = this.o0;
            if (a != b) {
                this.os = a;
                this.g1("VolumeOutlines", b, this.o0);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "oz", {
        get: function () {
            return this.or;
        },
        set: function (a) {
            var b = this.oz;
            if (a != b) {
                this.or = a;
                this.g1("VolumeBrushes", b, this.oz);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ou", {
        get: function () {
            return this.om;
        },
        set: function (a) {
            var b = this.ou;
            if (a != b) {
                this.om = a;
                this.g1("IndicatorNegativeBrushes", b, this.ou);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ot", {
        get: function () {
            return this.ol;
        },
        set: function (a) {
            var b = this.ot;
            if (a != b) {
                this.ol = a;
                this.g1("IndicatorBrushes", b, this.ot);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "si", {
        get: function () {
            return this.r7;
        },
        set: function (a) {
            var b = this.si;
            if (a != b) {
                this.r7 = a;
                this.g1("VolumeThickness", b, this.si);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "sg", {
        get: function () {
            return this.r5;
        },
        set: function (a) {
            var b = this.sg;
            if (a != b) {
                this.r5 = a;
                this.g1("OverlayThickness", b, this.sg);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "sf", {
        get: function () {
            return this.r4;
        },
        set: function (a) {
            var b = this.sf;
            if (a != b) {
                this.r4 = a;
                this.g1("IndicatorThickness", b, this.sf);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "qc", {
        get: function () {
            return this.qb;
        },
        set: function (a) {
            var b = this.qc;
            if (a != b) {
                this.qb = a;
                this.g1("IndicatorDisplayTypes", b, this.qc);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "s4", {
        get: function () {
            return this.sx;
        },
        set: function (a) {
            var b = this.s4;
            if (a != b) {
                this.sx = a;
                this.g1("IndicatorPeriod", b, this.s4);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "se", {
        get: function () {
            return this.r3;
        },
        set: function (a) {
            var b = this.se;
            if (a != b) {
                this.r3 = a;
                this.g1("IndicatorMultiplier", b, this.se);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "s7", {
        get: function () {
            return this.s0;
        },
        set: function (a) {
            var b = this.s7;
            if (a != b) {
                this.s0 = a;
                this.g1("IndicatorSmoothingPeriod", b, this.s7);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "s5", {
        get: function () {
            return this.sy;
        },
        set: function (a) {
            var b = this.s5;
            if (a != b) {
                this.sy = a;
                this.g1("IndicatorShortPeriod", b, this.s5);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "s3", {
        get: function () {
            return this.sw;
        },
        set: function (a) {
            var b = this.s3;
            if (a != b) {
                this.sw = a;
                this.g1("IndicatorLongPeriod", b, this.s3);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "s6", {
        get: function () {
            return this.sz;
        },
        set: function (a) {
            var b = this.s6;
            if (a != b) {
                this.sz = a;
                this.g1("IndicatorSignalPeriod", b, this.s6);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "pi", {
        get: function () {
            return this.pg;
        },
        set: function (a) {
            var b = this.pi;
            if (a != b) {
                this.pg = a;
                this.g1("RangeSelectorOptions", b, this.pi);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "customIndicatorNames", {
        get: function () {
            return this.pc;
        },
        set: function (a) {
            var b = this.pc;
            if (a != b) {
                this.pc = a;
                this.g1("CustomIndicatorNames", b, this.customIndicatorNames);
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.prototype.get_bw = function () {
        return _super.prototype.get_bw.call(this);
    };
    FinancialChart.prototype.set_bw = function (a) {
        _super.prototype.set_bw.call(this, a);
    };
    Object.defineProperty(FinancialChart.prototype, "w9", {
        get: function () {
            return this.w8;
        },
        set: function (a) {
            var b = this.w9;
            if (a != b) {
                this.w8 = a;
                this.g1("ZoomSliderXAxisMajorStroke", b, this.w9);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "sp", {
        get: function () {
            return this.sc;
        },
        set: function (a) {
            var b = this.sp;
            if (a != b) {
                this.sc = a;
                this.g1("ZoomSliderXAxisMajorStrokeThickness", b, this.sp);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "re", {
        get: function () {
            return this.q3;
        },
        set: function (a) {
            var b = this.re;
            if (a != b) {
                this.q3 = a;
                this.g1("IsLegendVisible", b, this.re);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "p4", {
        get: function () {
            return this.p3;
        },
        set: function (a) {
            var b = this.p4;
            if (a != b) {
                this.p3 = a;
                this.g1("FinancialChartLegend", b, this.p4);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "xAxis", {
        get: function () {
            return this.o3;
        },
        set: function (a) {
            var b = this.xAxis;
            if (a != b) {
                this.o3 = a;
                this.g1("XAxis", b, this.xAxis);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "yAxis", {
        get: function () {
            return this.qi;
        },
        set: function (a) {
            var b = this.yAxis;
            if (a != b) {
                this.qi = a;
                this.g1("YAxis", b, this.yAxis);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "volumeAxis", {
        get: function () {
            return this.qh;
        },
        set: function (a) {
            var b = this.volumeAxis;
            if (a != b) {
                this.qh = a;
                this.g1("VolumeAxis", b, this.volumeAxis);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "volumeXAxis", {
        get: function () {
            return this.o2;
        },
        set: function (a) {
            var b = this.volumeXAxis;
            if (a != b) {
                this.o2 = a;
                this.g1("VolumeXAxis", b, this.volumeXAxis);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "indicatorAxis", {
        get: function () {
            return this.qg;
        },
        set: function (a) {
            var b = this.indicatorAxis;
            if (a != b) {
                this.qg = a;
                this.g1("IndicatorAxis", b, this.indicatorAxis);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "indicatorXAxis", {
        get: function () {
            return this.o1;
        },
        set: function (a) {
            var b = this.indicatorXAxis;
            if (a != b) {
                this.o1 = a;
                this.g1("IndicatorXAxis", b, this.indicatorXAxis);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "ru", {
        get: function () {
            return this.rr;
        },
        set: function (a) {
            var b = this.ru;
            if (a != b) {
                this.rr = a;
                this.g1("IndicatorAxes", b, this.ru);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "rw", {
        get: function () {
            return this.rt;
        },
        set: function (a) {
            var b = this.rw;
            if (a != b) {
                this.rt = a;
                this.g1("IndicatorXAxes", b, this.rw);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "r2", {
        get: function () {
            return this.r0;
        },
        set: function (a) {
            var b = this.r2;
            if (+a != +b) {
                this.r0 = a;
                this.g1("XAxisMinimumValue", b, this.r2);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "r1", {
        get: function () {
            return this.rz;
        },
        set: function (a) {
            var b = this.r1;
            if (+a != +b) {
                this.rz = a;
                this.g1("XAxisMaximumValue", b, this.r1);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChart.prototype, "xAxisBreaks", {
        get: function () {
            return this.rx;
        },
        enumerable: true,
        configurable: true
    });
    FinancialChart.$t = markType(FinancialChart, 'FinancialChart', XYChart.$);
    FinancialChart.s8 = 0;
    return FinancialChart;
}(XYChart));
export { FinancialChart };
/**
 * @hidden
 */
var FinancialChartToolbar = /** @class */ (function (_super) {
    tslib_1.__extends(FinancialChartToolbar, _super);
    function FinancialChartToolbar(a, b) {
        var _this = _super.call(this, "financialChartToolbar", b, "") || this;
        _this.o = null;
        _this.r = null;
        _this.z = null;
        _this.p = null;
        _this.w = null;
        _this.aq = dateMaxValue();
        _this.ap = dateMinValue();
        _this.ao = dateMaxValue();
        _this.an = dateMinValue();
        _this.rangeChanged = null;
        _this.chartTypeChanged = null;
        _this.trendLineTypeChanged = null;
        _this.volumeTypeChanged = null;
        _this.indicatorTypesChanged = null;
        _this.overlayTypesChanged = null;
        _this.x = 0;
        _this.ah = 0;
        _this.ab = 0;
        _this.ad = null;
        _this.af = null;
        _this.t = null;
        _this.ak = false;
        _this.o = a;
        _this.w = new FinancialChartToolbarViewModel();
        _this.s = new FinancialChartRangeSelector(a != null ? a.tk : null);
        _this.aa = new FinancialChartTypePicker(a != null ? a.th : null);
        _this.q = new FinancialChartIndicatorMenu(1, a != null ? a.ti : null);
        return _this;
    }
    FinancialChartToolbar.prototype.bg = function (a) {
        var b = a.querySelectorAll(".financialChartToolbarArea");
        if (b != null && b.length > 0) {
            this.g = b[0];
            if (!this.al) {
                this.g.hide();
            }
        }
        var c = a.querySelectorAll(".financialChartIndicatorMenu");
        if (c != null && c.length > 0) {
            this.q.g = c[0];
        }
        var d = a.querySelectorAll(".financialChartRangeSelector");
        if (d != null && d.length > 0) {
            this.s.g = d[0];
        }
        var e = a.querySelectorAll(".financialChartTypePicker");
        if (e != null && e.length > 0) {
            this.aa.g = e[0];
        }
    };
    FinancialChartToolbar.prototype.bl = function (a) {
        this.q.u(a);
        this.aa.u(a);
    };
    Object.defineProperty(FinancialChartToolbar.prototype, "s", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            var b = this.s;
            if (a != b) {
                this.r = a;
                this.bm("RangeSelector", b, this.s);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "aa", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            var b = this.aa;
            if (a != b) {
                this.z = a;
                this.bm("ChartTypePicker", b, this.aa);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "q", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            var b = this.q;
            if (a != b) {
                this.p = a;
                this.bm("IndicatorMenu", b, this.q);
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChartToolbar.prototype.bm = function (a, b, c) {
        switch (a) {
            case "RangeStart":
                if (this.s != null) {
                    this.s.t = this.as;
                }
                break;
            case "RangeEnd":
                if (this.s != null) {
                    this.s.s = this.ar;
                }
                break;
            case "SelectionStart":
                if (this.s != null) {
                    this.s.v = this.au;
                }
                break;
            case "SelectionEnd":
                if (this.s != null) {
                    this.s.u = this.at;
                }
                break;
            case "RangeSelector":
                var d = b;
                if (d != null) {
                    d.rangeChanged = delegateRemove(d.rangeChanged, runOn(this, this.bj));
                }
                if (this.s != null) {
                    this.s.t = this.as;
                    this.s.s = this.ar;
                    this.s.o = this.u;
                    this.s.v = this.au;
                    this.s.u = this.at;
                    var e = this.s;
                    e.rangeChanged = delegateCombine(e.rangeChanged, runOn(this, this.bj));
                }
                break;
            case "ChartTypePicker":
                var f = b;
                if (f != null) {
                    f.selectionChanged = delegateRemove(f.selectionChanged, runOn(this, this.bi));
                }
                if (this.aa != null) {
                    this.aa.w = this.y;
                    var g = this.aa;
                    g.selectionChanged = delegateCombine(g.selectionChanged, runOn(this, this.bi));
                }
                break;
            case "ChartType":
                if (this.aa != null) {
                    this.aa.w = this.y;
                }
                break;
            case "RangeSelectorOptions":
                if (this.s != null) {
                    this.s.o = this.u;
                }
                break;
            case "IsToolbarVisible":
                if (this.g == null) {
                    break;
                }
                if (this.al) {
                    this.g.show();
                }
                else {
                    this.g.hide();
                }
                break;
            case "IndicatorMenu":
                var h = typeCast(FinancialChartIndicatorMenu.$, b);
                if (h != null) {
                    h.selectionChanged = delegateRemove(h.selectionChanged, runOn(this, this.bh));
                }
                if (this.q != null) {
                    var i = this.q;
                    i.selectionChanged = delegateCombine(i.selectionChanged, runOn(this, this.bh));
                }
                break;
            case "IndicatorTypes":
                if (this.indicatorTypesChanged != null) {
                    this.indicatorTypesChanged(this, EventArgs.empty);
                }
                break;
            case "OverlayTypes":
                if (this.overlayTypesChanged != null) {
                    this.overlayTypesChanged(this, EventArgs.empty);
                }
                break;
            case "TrendLineType":
                if (this.trendLineTypeChanged != null) {
                    this.trendLineTypeChanged(this, EventArgs.empty);
                }
                break;
            case "VolumeType":
                if (this.volumeTypeChanged != null) {
                    this.volumeTypeChanged(this, EventArgs.empty);
                }
                break;
        }
    };
    FinancialChartToolbar.prototype.bh = function (a, b) {
        this.ag = this.q.z;
        this.ae = this.q.y;
        this.ai = this.q.aa;
        this.ac = this.q.x;
    };
    FinancialChartToolbar.prototype.bi = function (a, b) {
        this.y = this.aa.w;
        if (this.chartTypeChanged != null) {
            this.chartTypeChanged(this, b);
        }
    };
    FinancialChartToolbar.prototype.bj = function (a, b) {
        this.au = this.s.v;
        this.at = this.s.u;
        if (this.rangeChanged != null) {
            this.rangeChanged(this, b);
        }
    };
    FinancialChartToolbar.prototype.v = function () {
        var _this = this;
        var a = new FinancialChartToolbarContext();
        a.container = this.d;
        a.vm = this.w;
        a.vm.financialChartIndicatorMenu = ((function () {
            var $ret = new FinancialChartIndicatorMenuContext();
            $ret.vm = _this.q.p;
            return $ret;
        })());
        a.vm.financialChartTypePicker = ((function () {
            var $ret = new FinancialChartTypePickerContext();
            $ret.vm = _this.aa.p;
            return $ret;
        })());
        a.vm.financialChartRangeSelector = ((function () {
            var $ret = new FinancialChartRangeSelectorContext();
            $ret.vm = _this.s.q;
            return $ret;
        })());
        return a;
    };
    FinancialChartToolbar.prototype.l = function (a) {
        _super.prototype.l.call(this, a);
        if (a == null) {
            return;
        }
        this.bk();
    };
    FinancialChartToolbar.prototype.bk = function () {
    };
    Object.defineProperty(FinancialChartToolbar.prototype, "au", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            var b = this.au;
            if (+a != +b) {
                this.aq = a;
                this.bm("SelectionStart", b, this.au);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "at", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            var b = this.at;
            if (+a != +b) {
                this.ap = a;
                this.bm("SelectionEnd", b, this.at);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "as", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            var b = this.as;
            if (+a != +b) {
                this.ao = a;
                this.bm("RangeStart", b, this.as);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "ar", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            var b = this.ar;
            if (+a != +b) {
                this.an = a;
                this.bm("RangeEnd", b, this.ar);
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChartToolbar.prototype.bn = function () {
        if (this.s != null) {
            this.s.ab();
        }
    };
    Object.defineProperty(FinancialChartToolbar.prototype, "y", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            var b = this.y;
            if (a != b) {
                this.x = a;
                this.bm("ChartType", enumGetBox(FinancialChartType_$type, b), enumGetBox(FinancialChartType_$type, this.y));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "ai", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            var b = this.ai;
            if (a != b) {
                this.ah = a;
                this.bm("TrendLineType", enumGetBox(TrendLineType_$type, b), enumGetBox(TrendLineType_$type, this.ai));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "ac", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            var b = this.ac;
            if (a != b) {
                this.ab = a;
                this.bm("VolumeType", enumGetBox(FinancialChartVolumeType_$type, b), enumGetBox(FinancialChartVolumeType_$type, this.ac));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "ae", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            var b = this.ae;
            if (!FinancialChartToolbar.am(b, a)) {
                this.ad = a;
                this.bm("IndicatorTypes", b, this.ae);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "ag", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            var b = this.ag;
            if (!FinancialChartToolbar.am(b, a)) {
                this.af = a;
                this.bm("OverlayTypes", b, this.ag);
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChartToolbar.am = function (a, b) {
        var e_20, _a;
        if (a == b) {
            return true;
        }
        if ((a == null && b != null) || (a != null && b == null)) {
            return false;
        }
        if (a.count != b.count) {
            return false;
        }
        try {
            for (var _b = tslib_1.__values(fromEn(a)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                if (!b.contains(c)) {
                    return false;
                }
            }
        }
        catch (e_20_1) { e_20 = { error: e_20_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_20) throw e_20.error; }
        }
        return true;
    };
    FinancialChartToolbar.prototype.aj = function () {
        var _this = this;
        return ((function () {
            var $ret = new FinancialChartToolbarVisualData();
            $ret.rangeSelector = _this.s == null ? null : _this.s.r();
            return $ret;
        })());
    };
    Object.defineProperty(FinancialChartToolbar.prototype, "u", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            var b = this.u;
            if (a != b) {
                this.t = a;
                this.bm("RangeSelectorOptions", b, this.u);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartToolbar.prototype, "al", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            var b = this.al;
            if (a != b) {
                this.ak = a;
                this.bm("IsToolbarVisible", b, this.al);
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChartToolbar.$t = markType(FinancialChartToolbar, 'FinancialChartToolbar', TemplatedHtmlControl.$);
    return FinancialChartToolbar;
}(TemplatedHtmlControl));
export { FinancialChartToolbar };
/**
 * @hidden
 */
var FinancialChartRangeSelector = /** @class */ (function (_super) {
    tslib_1.__extends(FinancialChartRangeSelector, _super);
    function FinancialChartRangeSelector(a) {
        var _this = _super.call(this, "financialChartRangeSelector", a, "") || this;
        _this.q = null;
        _this.rangeChanged = null;
        _this.p = null;
        _this.p = new FinancialChartRangeSelectorView();
        _this.q = new FinancialChartRangeSelectorViewModel();
        _this.q.onRangeChanged = runOn(_this, _this.z);
        return _this;
    }
    Object.defineProperty(FinancialChartRangeSelector.prototype, "v", {
        get: function () {
            return this.q.selectionStart;
        },
        set: function (a) {
            this.q.selectionStart = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartRangeSelector.prototype, "u", {
        get: function () {
            return this.q.selectionEnd;
        },
        set: function (a) {
            this.q.selectionEnd = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartRangeSelector.prototype, "t", {
        get: function () {
            return this.q.rangeStart;
        },
        set: function (a) {
            this.q.rangeStart = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinancialChartRangeSelector.prototype, "s", {
        get: function () {
            return this.q.rangeEnd;
        },
        set: function (a) {
            this.q.rangeEnd = a;
        },
        enumerable: true,
        configurable: true
    });
    FinancialChartRangeSelector.prototype.ab = function () {
        if (this.q.onPropertiesChanged()) {
            this.p.e(this.q);
        }
    };
    FinancialChartRangeSelector.prototype.l = function (a) {
        _super.prototype.l.call(this, a);
        this.p.d(this.d, this.q);
    };
    FinancialChartRangeSelector.prototype.z = function () {
        if (this.rangeChanged != null) {
            this.rangeChanged(this, EventArgs.empty);
        }
    };
    FinancialChartRangeSelector.prototype.r = function () {
        return this.p.c(this.g);
    };
    Object.defineProperty(FinancialChartRangeSelector.prototype, "o", {
        get: function () {
            return this.q.options;
        },
        set: function (a) {
            var b = !FinancialChartToolbar.am(this.q.options, a);
            if (b) {
                this.q.options = a;
                this.aa();
            }
        },
        enumerable: true,
        configurable: true
    });
    FinancialChartRangeSelector.prototype.aa = function () {
        if (this.q != null) {
            this.q.af();
        }
        if (this.p != null) {
            this.p.g(this.o);
        }
    };
    FinancialChartRangeSelector.$t = markType(FinancialChartRangeSelector, 'FinancialChartRangeSelector', TemplatedHtmlControl.$);
    FinancialChartRangeSelector.x = 0;
    return FinancialChartRangeSelector;
}(TemplatedHtmlControl));
export { FinancialChartRangeSelector };
