/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { FinancialOverlay } from "./FinancialOverlay";
import { DependencyProperty } from "igniteui-react-core/ES5/DependencyProperty";
import { List$1 } from "igniteui-react-core/ES5/List$1";
import { Type, Number_$type, typeCast, runOn, markType, getEnumerator, Point_$type, fromEnum } from "igniteui-react-core/ES5/type";
import { CategoryFrame } from "./CategoryFrame";
import { Series } from "./Series";
import { SafeEnumerable } from "./SafeEnumerable";
import { TrendCalculators } from "igniteui-react-core/ES5/TrendCalculators";
import { AxisRange } from "./AxisRange";
import { FinancialSeriesView } from "./FinancialSeriesView";
import { ScalerParams } from "./ScalerParams";
import { ISortingAxis_$type } from "./ISortingAxis";
import { FinancialBucketCalculator } from "./FinancialBucketCalculator";
import { Polyline } from "igniteui-react-core/ES5/Polyline";
import { Polygon } from "igniteui-react-core/ES5/Polygon";
import { PropertyMetadata } from "igniteui-react-core/ES5/PropertyMetadata";
import { isNaN_ } from "igniteui-react-core/ES5/number";
import { Flattener } from "igniteui-react-core/ES5/Flattener";
/**
 * @hidden
 */
var BollingerBandsOverlay = /** @class */ (function (_super) {
    tslib_1.__extends(BollingerBandsOverlay, _super);
    function BollingerBandsOverlay() {
        var _this = _super.call(this) || this;
        _this.pp = 0;
        _this.pq = 0;
        _this.pn = new List$1(Number_$type, 0);
        _this.po = new List$1(Number_$type, 0);
        _this.ab = BollingerBandsOverlay.$;
        _this.ma = new CategoryFrame(4);
        _this.mc = new CategoryFrame(4);
        _this.l9 = new CategoryFrame(4);
        return _this;
    }
    BollingerBandsOverlay.prototype.iy = function (a, b, c, d) {
        if (this.nq().contains(b)) {
            this.ph = false;
        }
        _super.prototype.iy.call(this, a, b, c, d);
        switch (b) {
            case BollingerBandsOverlay.$$p[1]:
                this.ph = false;
                this.jc(false);
                break;
            case BollingerBandsOverlay.$$p[0]:
                this.jc(false);
                break;
        }
    };
    BollingerBandsOverlay.prototype.pi = function () {
        this.pn.clear();
        this.po.clear();
        var a = getEnumerator(TrendCalculators.e(new SafeEnumerable(this.np), this.ps));
        var b = getEnumerator(TrendCalculators.f(new SafeEnumerable(this.np), this.ps));
        this.pq = 1.7976931348623157E+308;
        this.pp = -1.7976931348623157E+308;
        var c = true;
        var d = true;
        var e = this.pr;
        while (c || d) {
            if (a.moveNext()) {
                this.pn.add(a.current);
            }
            else {
                c = false;
            }
            if (b.moveNext()) {
                this.po.add(b.current);
            }
            else {
                d = false;
            }
            if (c && d) {
                this.pq = Math.min(this.pq, a.current - b.current * e);
                this.pp = Math.max(this.pp, a.current + b.current * e);
            }
        }
        return true;
    };
    BollingerBandsOverlay.prototype.an = function (a) {
        if (this.pn == null || this.po == null || a == null || this.bz == null || a != this.ms) {
            return null;
        }
        var b = new AxisRange(this.pq, this.pp);
        return b;
    };
    BollingerBandsOverlay.prototype.oy = function (a, b) {
        _super.prototype.oy.call(this, a, b);
        var c = b.bs;
        var d = b.br;
        var e = this.getEffectiveViewport1(b);
        var f = this.l7;
        var g = this.ms;
        var h = new ScalerParams(0, c, d, f.b8, e);
        var i = new ScalerParams(0, c, d, g.b8, e);
        a.f.clear();
        a.m.clear();
        a.p.clear();
        var j = typeCast(ISortingAxis_$type, this.l7);
        if (j != null && j.i$b.count != this.bz.count) {
            return;
        }
        var k = 0;
        k = this.ny(c, d, e);
        if (!this.ph) {
            this.ph = this.pi();
            if (this.ms != null) {
                this.ms.cl(true);
            }
        }
        i.b = this.eh();
        var l = this.l7.dy(2, h) - this.l7.dy(1, h);
        for (var m = b.bu.c; m <= b.bu.d; ++m) {
            var n = void 0;
            if (j == null) {
                n = b.bu.getBucket(m);
            }
            else {
                var o = j.i$b._inner[m];
                var p = j.i$d(o);
                var q = this.pn._inner[m];
                var r = this.po._inner[m];
                var s = q;
                var t = r;
                var u = p;
                var v = 1;
                while (m < b.bu.d) {
                    o = j.i$b._inner[m + 1];
                    u = j.i$d(o);
                    if (u - p > l) {
                        break;
                    }
                    m++;
                    s += this.pn._inner[m];
                    t += this.po._inner[m];
                    v++;
                }
                s /= v;
                t /= v;
                var w = s - t * this.pr;
                var x = s;
                var y = s + t * this.pr;
                var z = NaN;
                if (!isNaN_(p)) {
                    z = this.l7.dv(p, h);
                }
                n = [z, w, x, y];
            }
            var aa = Math.max(1, l);
            if (!isNaN_(n[0]) && m * aa >= this.pj) {
                if (this.l7 != null && typeCast(ISortingAxis_$type, this.l7) !== null) {
                    n[0] = n[0] + k;
                }
                else {
                    n[0] = f.dv(n[0], h) + k;
                }
                n[1] = g.dv(n[1], i);
                n[2] = g.dv(n[2], i);
                n[3] = g.dv(n[3], i);
                a.f.add(n);
            }
        }
    };
    BollingerBandsOverlay.prototype.hv = function (a, b) {
        _super.prototype.hv.call(this, a, b);
        var c = b;
        if (c != null) {
            c.b1();
        }
    };
    BollingerBandsOverlay.prototype.en = function (a, b, c) {
        if (this.pn == null) {
            return _super.prototype.en.call(this, a, b, c);
        }
        var d = this.getEffectiveViewport1(this.bi);
        var e = this.ny(this.bi.bs, this.bi.br, d);
        var f = new ScalerParams(0, this.bi.bs, this.bi.br, this.l7.b8, d);
        f.c = this.bs.m3;
        return this.ep(this.pn, a, this.l7, f, e, runOn(this, this.nx), b, c);
    };
    BollingerBandsOverlay.prototype.fe = function (a, b) {
        if (this.pn == null) {
            return _super.prototype.fe.call(this, a, b);
        }
        return this.ff(a, b, this.l7, runOn(this, this.nx), this.pn);
    };
    BollingerBandsOverlay.prototype.fc = function (a, b) {
        if (this.pn == null) {
            return _super.prototype.fc.call(this, a, b);
        }
        return this.fd(a, b, this.l7, runOn(this, this.nx), this.pn);
    };
    BollingerBandsOverlay.prototype.dw = function (a, b, c) {
        var d = _super.prototype.dw.call(this, a, b, c);
        if (!this.ng(this.nq())) {
            d = false;
        }
        return d;
    };
    BollingerBandsOverlay.prototype.o0 = function (a, b) {
        _super.prototype.o0.call(this, a, b);
        var c = typeCast(BollingerBandsOverlayView.$, b);
        var d = this.getEffectiveViewport1(b);
        if (b.bx(a)) {
            c.b1();
            var e_1 = a.f.count;
            var f = function (g) { return a.f._inner[g][0]; };
            var g = function (h) { return a.f._inner[e_1 - 1 - h][0]; };
            var h = function (i) { return a.f._inner[i][1]; };
            var i = function (j) { return a.f._inner[j][2]; };
            var j = function (k) { return a.f._inner[e_1 - 1 - k][3]; };
            c.b2(e_1, f, g, h, i, j);
            b.bz(a);
        }
        this.mf.x(this, this.nf(), this.l7, runOn(this, this.lz), this.n4(b), this.n6(b));
        var k = false;
        var l = this.mf.c;
        var m = a.f;
        var n = this.bz.count;
        if (l != null) {
            k = true;
        }
        if (k) {
            var o = new ScalerParams(0, b.bs, b.br, this.l7.b8, d);
            this.ox(m, -1, n, this.l7, o, b.n);
        }
        var p = c.b9;
        var q = c.ca;
        var r = c.cb;
        var s = c.b4;
        this.mf.ae(q, true, false, true, true);
        this.mf.ao = null;
        this.mf.an = null;
        this.mf.ae(p, true, false, false, true);
        this.mf.ae(r, true, false, false, true);
        this.mf.ae(s, false, true, false, false);
        s._opacity = this.mf.i * this.d6;
    };
    BollingerBandsOverlay.prototype.bf = function () {
        return new BollingerBandsOverlayView(this);
    };
    BollingerBandsOverlay.prototype.it = function (a) {
        _super.prototype.it.call(this, a);
        this.pm = typeCast(BollingerBandsOverlayView.$, a);
    };
    BollingerBandsOverlay.prototype.n7 = function () {
        return 3;
    };
    BollingerBandsOverlay.prototype.eh = function () {
        return Series.ei(this.pn, null);
    };
    BollingerBandsOverlay.$t = markType(BollingerBandsOverlay, 'BollingerBandsOverlay', FinancialOverlay.$);
    return BollingerBandsOverlay;
}(FinancialOverlay));
export { BollingerBandsOverlay };
Type.dep(DependencyProperty, PropertyMetadata, BollingerBandsOverlay, 'raisePropertyChanged', ['Multiplier:pr:pv', [1, 2], 'Period:ps:pw', [1, 14]]);
/**
 * @hidden
 */
var BollingerBandsBucketCalculator = /** @class */ (function (_super) {
    tslib_1.__extends(BollingerBandsBucketCalculator, _super);
    function BollingerBandsBucketCalculator(a) {
        var _this = _super.call(this, a) || this;
        _this.f = null;
        _this.f = a;
        return _this;
    }
    BollingerBandsBucketCalculator.prototype.getBucket = function (a) {
        var b = a * this.b;
        var c = Math.min(b + this.b - 1, this.a.bw.bz.count - 1);
        if (b <= c) {
            var d = this.f.b0.pr;
            var e = 0;
            var f = 0;
            var g = 0;
            for (var h = b; h <= c; ++h) {
                if (!isNaN_(this.f.b0.pn._inner[h]) && !isNaN_(this.f.b0.po._inner[h])) {
                    e += this.f.b0.pn._inner[h];
                    f += this.f.b0.po._inner[h];
                    ++g;
                }
            }
            if (g > 0) {
                e = e / g;
                f = f / g;
                return [0.5 * (b + c), e - f * d, e, e + f * d];
            }
        }
        return [NaN, NaN, NaN, NaN];
    };
    BollingerBandsBucketCalculator.$t = markType(BollingerBandsBucketCalculator, 'BollingerBandsBucketCalculator', FinancialBucketCalculator.$);
    return BollingerBandsBucketCalculator;
}(FinancialBucketCalculator));
export { BollingerBandsBucketCalculator };
/**
 * @hidden
 */
var BollingerBandsOverlayView = /** @class */ (function (_super) {
    tslib_1.__extends(BollingerBandsOverlayView, _super);
    function BollingerBandsOverlayView(a) {
        var _this = _super.call(this, a) || this;
        _this.b0 = null;
        _this.b5 = new Polygon();
        _this.cc = new Polyline();
        _this.cd = new Polyline();
        _this.ce = new Polyline();
        _this.b3 = new Polygon();
        _this.b6 = new Polyline();
        _this.b7 = new Polyline();
        _this.b8 = new Polyline();
        _this.b0 = a;
        return _this;
    }
    BollingerBandsOverlayView.prototype.ap = function () {
        _super.prototype.ap.call(this);
        if (!this.n) {
            this.e.bj = 1;
        }
    };
    BollingerBandsOverlayView.prototype.bv = function () {
        return new BollingerBandsBucketCalculator(this);
    };
    BollingerBandsOverlayView.prototype.b2 = function (a, b, c, d, e, f) {
        var e_2, _a, e_3, _b, e_4, _c;
        try {
            for (var _d = tslib_1.__values(fromEnum(Flattener.d(a, b, d, this.e.eu))), _e = _d.next(); !_e.done; _e = _d.next()) {
                var g = _e.value;
                this.b5.aj.add({ $type: Point_$type, x: b(g), y: d(g) });
                this.cc.aj.add({ $type: Point_$type, x: b(g), y: d(g) });
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
            }
            finally { if (e_2) throw e_2.error; }
        }
        try {
            for (var _f = tslib_1.__values(fromEnum(Flattener.d(a, b, e, this.e.eu))), _g = _f.next(); !_g.done; _g = _f.next()) {
                var h = _g.value;
                this.cd.aj.add({ $type: Point_$type, x: b(h), y: e(h) });
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
            }
            finally { if (e_3) throw e_3.error; }
        }
        try {
            for (var _h = tslib_1.__values(fromEnum(Flattener.d(a, c, f, this.e.eu))), _j = _h.next(); !_j.done; _j = _h.next()) {
                var i = _j.value;
                this.b5.aj.add({ $type: Point_$type, x: c(i), y: f(i) });
                this.ce.aj.add({ $type: Point_$type, x: c(i), y: f(i) });
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
            }
            finally { if (e_4) throw e_4.error; }
        }
        this.an();
    };
    BollingerBandsOverlayView.prototype.b1 = function () {
        this.b5.aj.clear();
        this.cc.aj.clear();
        this.cd.aj.clear();
        this.ce.aj.clear();
        this.an();
    };
    Object.defineProperty(BollingerBandsOverlayView.prototype, "b4", {
        get: function () {
            return this.b5;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BollingerBandsOverlayView.prototype, "b9", {
        get: function () {
            return this.cc;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BollingerBandsOverlayView.prototype, "ca", {
        get: function () {
            return this.cd;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BollingerBandsOverlayView.prototype, "cb", {
        get: function () {
            return this.ce;
        },
        enumerable: true,
        configurable: true
    });
    BollingerBandsOverlayView.prototype.a9 = function () {
        _super.prototype.a9.call(this);
        this.b3.aj = this.b5.aj;
        this.b6.aj = this.cc.aj;
        this.b7.aj = this.cd.aj;
        this.b8.aj = this.ce.aj;
        var a = this.bl();
        this.b3._fill = a;
        this.b3._opacity = 1;
        this.b6._stroke = a;
        this.b6.ac = this.e.ey + 3;
        this.b7._stroke = a;
        this.b7.ac = this.e.ey + 3;
        this.b8._stroke = a;
        this.b8.ac = this.e.ey + 3;
    };
    BollingerBandsOverlayView.prototype.a3 = function (a, b) {
        _super.prototype.a3.call(this, a, b);
        if (a.d) {
            if (b) {
                a.t(this.b3);
                a.u(this.b6);
                a.u(this.b7);
                a.u(this.b8);
            }
            else {
                a.t(this.b5);
                a.u(this.cc);
                a.u(this.cd);
                a.u(this.ce);
            }
        }
    };
    BollingerBandsOverlayView.prototype.ai = function (a) {
        _super.prototype.ai.call(this, a);
        this.e.a2.exportPolygonData(a, this.b5, "FillShape", ["Fill"]);
        this.e.a2.exportPolylineData(a, this.cc, "BottomLine", ["Lower", "Main"]);
        this.e.a2.exportPolylineData(a, this.cd, "CentralLine", ["Central"]);
        this.e.a2.exportPolylineData(a, this.ce, "TopLine", ["Upper"]);
    };
    BollingerBandsOverlayView.$t = markType(BollingerBandsOverlayView, 'BollingerBandsOverlayView', FinancialSeriesView.$);
    return BollingerBandsOverlayView;
}(FinancialSeriesView));
export { BollingerBandsOverlayView };
