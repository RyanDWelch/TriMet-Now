import { SplineSeriesBase } from "./SplineSeriesBase";
import { CategoryLineRasterizer } from "./CategoryLineRasterizer";
import { SeriesView } from "./SeriesView";
import { Type } from "igniteui-react-core/ES5/type";
import { CategoryMode } from "./CategoryMode";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { CategoryFrame } from "./CategoryFrame";
import { CategorySeriesView } from "./CategorySeriesView";
import { List$1 } from "igniteui-react-core/ES5/List$1";
import { Path } from "igniteui-react-core/ES5/Path";
import { UnknownValuePlotting } from "igniteui-react-core/ES5/UnknownValuePlotting";
import { SplineSeriesBaseView } from "./SplineSeriesBaseView";
import { Clipper } from "igniteui-react-core/ES5/Clipper";
import { RenderingContext } from "igniteui-react-core/ES5/RenderingContext";
/**
 * @hidden
 */
export declare class SplineSeries extends SplineSeriesBase {
    static $t: Type;
    protected bf(): SeriesView;
    it(a: SeriesView): void;
    qr: SplineSeriesView;
    constructor();
    qq: CategoryLineRasterizer;
    preferredCategoryMode(a: CategoryAxisBase): CategoryMode;
    hv(a: boolean, b: SeriesView): void;
    on(a: CategoryFrame, b: CategorySeriesView): void;
    readonly useHighMarkerFidelity: boolean;
}
/**
 * @hidden
 */
export declare class SplineSeriesView extends SplineSeriesBaseView {
    static $t: Type;
    protected c7: SplineSeries;
    constructor(a: SplineSeries);
    private dh;
    private dg;
    private di;
    readonly de: Path;
    readonly df: Path;
    readonly dd: Path;
    c8(): void;
    c9(a: number, b: List$1<number[]>, c: boolean, d: UnknownValuePlotting, e: Clipper, f: number, g: number): void;
    private dc;
    private db;
    private da;
    protected a9(): void;
    protected a3(a: RenderingContext, b: boolean): void;
    ai(a: any): void;
}
