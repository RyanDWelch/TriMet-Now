/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { DependencyObject } from "igniteui-react-core/ES5/DependencyObject";
import { INotifyPropertyChanged_$type, PropertyChangedEventArgs, Type, markType } from "igniteui-react-core/ES5/type";
import { Style } from "igniteui-react-core/ES5/Style";
import { DependencyProperty } from "igniteui-react-core/ES5/DependencyProperty";
import { PropertyUpdatedEventArgs } from "igniteui-react-core/ES5/PropertyUpdatedEventArgs";
import { PropertyMetadata } from "igniteui-react-core/ES5/PropertyMetadata";
/**
 * @hidden
 */
var ErrorBarSettingsBase = /** @class */ (function (_super) {
    tslib_1.__extends(ErrorBarSettingsBase, _super);
    function ErrorBarSettingsBase() {
        var _this = _super.call(this) || this;
        _this.propertyChanged = null;
        _this.propertyUpdated = null;
        _this.n = new Style();
        return _this;
    }
    ErrorBarSettingsBase.prototype.l = function (a, b, c) {
        if (this.propertyChanged != null) {
            this.propertyChanged(this, new PropertyChangedEventArgs(a));
        }
        if (this.propertyUpdated != null) {
            this.propertyUpdated(this, new PropertyUpdatedEventArgs(a, b, c));
        }
    };
    ErrorBarSettingsBase.$t = markType(ErrorBarSettingsBase, 'ErrorBarSettingsBase', DependencyObject.$, [INotifyPropertyChanged_$type]);
    return ErrorBarSettingsBase;
}(DependencyObject));
export { ErrorBarSettingsBase };
Type.dep(DependencyProperty, PropertyMetadata, ErrorBarSettingsBase, 'l', ['DefaultErrorBarStyle:n:m', [Style.$, null]]);
