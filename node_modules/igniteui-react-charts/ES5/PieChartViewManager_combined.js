/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, Point_$type, runOn, delegateCombine, Type, markType, PointUtil, EventArgs, typeCast, INotifyPropertyChanged_$type, IEnumerable_$type, PropertyChangedEventArgs, IList_$type, Number_$type, enumGetBox, EnumUtil, Boolean_$type, delegateRemove, Delegate_$type, fromEnum, fromEn } from "igniteui-react-core/ES5/type";
import { Rect } from "igniteui-react-core/ES5/Rect";
import { RenderingContext } from "igniteui-react-core/ES5/RenderingContext";
import { PieChartStyleInfo } from "./PieChartStyleInfo";
import { BrushCollection } from "igniteui-react-core/ES5/BrushCollection";
import { BrushUtil } from "igniteui-react-core/ES5/BrushUtil";
import { Brush } from "igniteui-react-core/ES5/Brush";
import { FontUtil } from "igniteui-react-core/ES5/FontUtil";
import { DeviceUtils } from "igniteui-react-core/ES5/DeviceUtils";
import { Path } from "igniteui-react-core/ES5/Path";
import { CanvasViewRenderer } from "igniteui-react-core/ES5/CanvasViewRenderer";
import { DOMEventProxy } from "igniteui-react-core/ES5/DOMEventProxy";
import { PieChartVisualData } from "./PieChartVisualData";
import { Style } from "igniteui-react-core/ES5/Style";
import { isNaN_, isInfinity } from "igniteui-react-core/ES5/number";
import { Control } from "igniteui-react-core/ES5/Control";
import { Line } from "igniteui-react-core/ES5/Line";
import { LabelsPosition_$type } from "./LabelsPosition";
import { TextBlock } from "igniteui-react-core/ES5/TextBlock";
import { GeometryUtil } from "igniteui-react-core/ES5/GeometryUtil";
import { PathFigure } from "igniteui-react-core/ES5/PathFigure";
import { BezierSegment } from "igniteui-react-core/ES5/BezierSegment";
import { PathGeometry } from "igniteui-react-core/ES5/PathGeometry";
import { List$1 } from "igniteui-react-core/ES5/List$1";
import { Visibility_$type } from "igniteui-react-core/ES5/Visibility";
import { LeaderLineType_$type } from "./LeaderLineType";
import { stringEmpty } from "igniteui-react-core/ES5/string";
import { ILegendOwner_$type } from "igniteui-react-core/ES5/ILegendOwner";
import { ILegendSeries_$type } from "igniteui-react-core/ES5/ILegendSeries";
import { ILegendTemplateProvider_$type } from "igniteui-react-core/ES5/ILegendTemplateProvider";
import { FastItemsSource } from "igniteui-react-core/ES5/FastItemsSource";
import { DependencyProperty } from "igniteui-react-core/ES5/DependencyProperty";
import { UIElement } from "igniteui-react-core/ES5/UIElement";
import { OthersCategoryType_$type } from "./OthersCategoryType";
import { IndexCollection } from "./IndexCollection";
import { NotifyCollectionChangedEventArgs } from "igniteui-react-core/ES5/NotifyCollectionChangedEventArgs";
import { IChartLegend_$type } from "igniteui-react-core/ES5/IChartLegend";
import { SweepDirection_$type } from "igniteui-react-core/ES5/SweepDirection";
import { DataTemplate } from "igniteui-react-core/ES5/DataTemplate";
import { SliceSelectionMode_$type } from "./SliceSelectionMode";
import { ObjectCollection } from "igniteui-react-core/ES5/ObjectCollection";
import { PropertyUpdatedEventArgs } from "igniteui-react-core/ES5/PropertyUpdatedEventArgs";
import { Pool$1 } from "igniteui-react-core/ES5/Pool$1";
import { SelectedItemChangingEventArgs } from "./SelectedItemChangingEventArgs";
import { SelectedItemsChangingEventArgs } from "./SelectedItemsChangingEventArgs";
import { SelectedItemChangedEventArgs } from "./SelectedItemChangedEventArgs";
import { SelectedItemsChangedEventArgs } from "./SelectedItemsChangedEventArgs";
import { MathUtil } from "igniteui-react-core/ES5/MathUtil";
import { DataContext } from "igniteui-react-core/ES5/DataContext";
import { Size } from "igniteui-react-core/ES5/Size";
import { ContentControl } from "igniteui-react-core/ES5/ContentControl";
import { PieSliceVisualData } from "./PieSliceVisualData";
import { RectData } from "igniteui-react-core/ES5/RectData";
import { MouseEventArgs } from "igniteui-react-core/ES5/MouseEventArgs";
import { PropertyMetadata } from "igniteui-react-core/ES5/PropertyMetadata";
import { FastItemObjectColumn } from "igniteui-react-core/ES5/FastItemObjectColumn";
import { ArcSegment } from "igniteui-react-core/ES5/ArcSegment";
import { LineSegment } from "igniteui-react-core/ES5/LineSegment";
import { EllipseGeometry } from "igniteui-react-core/ES5/EllipseGeometry";
import { PathSegmentCollection } from "igniteui-react-core/ES5/PathSegmentCollection";
import { PathFigureCollection } from "igniteui-react-core/ES5/PathFigureCollection";
import { GeometryGroup } from "igniteui-react-core/ES5/GeometryGroup";
import { RectUtil } from "igniteui-react-core/ES5/RectUtil";
import { PrimitiveAppearanceData } from "igniteui-react-core/ES5/PrimitiveAppearanceData";
import { LabelAppearanceData } from "igniteui-react-core/ES5/LabelAppearanceData";
import { PointData } from "igniteui-react-core/ES5/PointData";
import { AppearanceHelper } from "igniteui-react-core/ES5/AppearanceHelper";
import { PathVisualData } from "igniteui-react-core/ES5/PathVisualData";
import { PieLegendTemplates } from "./PieLegendTemplates";
import { MouseButtonEventArgs } from "igniteui-react-core/ES5/MouseButtonEventArgs";
import { TranslateTransform } from "igniteui-react-core/ES5/TranslateTransform";
/**
 * @hidden
 */
var PieChartViewManager = /** @class */ (function (_super) {
    tslib_1.__extends(PieChartViewManager, _super);
    function PieChartViewManager(a) {
        var _this = _super.call(this) || this;
        _this.o = null;
        _this.q = null;
        _this.t = null;
        _this.s = null;
        _this.r = null;
        _this.k = 0;
        _this.j = 0;
        _this.l = 1;
        _this.ao = null;
        _this.e = null;
        _this.g = null;
        _this.f = null;
        _this.h = null;
        _this.a = null;
        _this.n = null;
        _this.c = null;
        _this._toolTipObject = null;
        _this.v = null;
        _this.i = true;
        _this.a = a;
        return _this;
    }
    PieChartViewManager.prototype.ab = function () {
        var a = this.o.rootWrapper.width();
        var b = this.o.rootWrapper.height();
        this.ad(a, b);
    };
    PieChartViewManager.prototype.ad = function (a, b) {
        this.c.bd = new Rect(0, 0, 0, a, b);
        var c = this.a.a.cd;
        if (c == this.l && a == this.k && b == this.j) {
            return;
        }
        this.k = a;
        this.j = b;
        this.l = c;
        this.a.a8();
    };
    PieChartViewManager.prototype.aa = function () {
        var _this = this;
        if (this.n == null) {
            this.n = function (a) {
                var b = _this.a.a.cq;
                var c = _this.a.a.cd;
                if (!isNaN_(b) && b != 0) {
                    return;
                }
                if (window.devicePixelRatio != undefined && window.devicePixelRatio != c) {
                    _this.a.a.cd = window.devicePixelRatio;
                }
            };
            window.addEventListener("resize", this.n, false);
        }
        this.n(null);
    };
    PieChartViewManager.prototype.x = function (a, b) {
        var c = this.a.a.cd;
        if (a != this.k || b != this.j || c != this.l) {
            this.k = a;
            this.j = b;
            this.l = this.a.a.cd;
            this.an();
        }
    };
    PieChartViewManager.prototype.an = function () {
        this.ao = new Rect(0, 0, 0, this.k, this.j);
        var a = this.k;
        var b = this.j;
        var c = this.l;
        if (c != 1) {
            a = Math.round(this.k * c);
            b = Math.round(this.j * c);
        }
        this.q.setAttribute("width", a.toString());
        this.q.setAttribute("height", b.toString());
        this.q.setStyleProperty("width", this.k.toString() + "px");
        this.q.setStyleProperty("height", this.j.toString() + "px");
        this.s.setAttribute("width", a.toString());
        this.s.setAttribute("height", b.toString());
        this.s.setStyleProperty("width", this.k.toString() + "px");
        this.s.setStyleProperty("height", this.j.toString() + "px");
        this.r.setAttribute("width", a.toString());
        this.r.setAttribute("height", b.toString());
        this.r.setStyleProperty("width", this.k.toString() + "px");
        this.r.setStyleProperty("height", this.j.toString() + "px");
        this.t.setAttribute("width", a.toString());
        this.t.setAttribute("height", b.toString());
        this.t.setStyleProperty("width", this.k.toString() + "px");
        this.t.setStyleProperty("height", this.j.toString() + "px");
        return this.ao;
    };
    PieChartViewManager.prototype.d = function () {
        return this.a.b.c;
    };
    PieChartViewManager.prototype.am = function () {
        var a = DOMEventProxy.cv(this.o.rootWrapper);
        return { $type: Point_$type, x: a.left, y: a.top };
    };
    PieChartViewManager.prototype.ag = function (a) {
        if (this.o != null) {
            this.o.setTimeout(a, 0);
        }
        else {
            window.setTimeout(a, 0);
        }
    };
    PieChartViewManager.prototype.b = function () {
        var _this = this;
        var a = new PieChartStyleInfo();
        var b;
        var c;
        var d = BrushUtil.d("chart", this.o, b, c);
        b = d.p2;
        c = d.p3;
        a.a = b;
        a.b = c;
        this.o.startCSSQuery();
        a.f = ((function () {
            var $ret = new Brush();
            $ret.fill = _this.o.getCssDefaultPropertyValue("ui-chart-innerlabels", "color");
            return $ret;
        })());
        a.g = ((function () {
            var $ret = new Brush();
            $ret.fill = _this.o.getCssDefaultPropertyValue("ui-chart-outerlabels", "color");
            return $ret;
        })());
        this.o.endCSSQuery();
        a.c = FontUtil.getFont(this.o);
        a.e = DeviceUtils.g(6);
        a.i = ((function () {
            var $ret = new Brush();
            $ret.fill = "#00000033";
            return $ret;
        })());
        a.d = 1;
        return a;
    };
    PieChartViewManager.prototype.ah = function (a) {
        a._stroke = ((function () {
            var $ret = new Brush();
            $ret.fill = "#000000";
            return $ret;
        })());
        a._fill = ((function () {
            var $ret = new Brush();
            $ret.fill = "#222222";
            return $ret;
        })());
    };
    PieChartViewManager.prototype.ac = function (a) {
        if (a == null) {
            if (this.c != null) {
                this.c.ao();
            }
            this.o = null;
            this.q = null;
            this.s = null;
            this.r = null;
            this.t = null;
            this.e = null;
            this.g = null;
            this.f = null;
            this.h = null;
            this.c = null;
            if (this.n != null) {
                window.removeEventListener("resize", this.n, false);
                this.n = null;
            }
            return;
        }
        var b = a;
        this.o = b;
        this.a.a9();
        this.a.bi();
        this.o.rootWrapper.setStyleProperty("position", "relative");
        this.o.rootWrapper.addClass("ui-corner-all");
        this.o.rootWrapper.addClass("ui-widget-content");
        this.q = this.o.createElement("canvas");
        this.q.setStyleProperty("position", "absolute");
        this.q.setStyleProperty("top", "0px");
        this.q.setStyleProperty("left", "0px");
        this.s = this.o.createElement("canvas");
        this.s.setStyleProperty("position", "absolute");
        this.s.setStyleProperty("top", "0px");
        this.s.setStyleProperty("left", "0px");
        this.r = this.o.createElement("canvas");
        this.r.setStyleProperty("position", "absolute");
        this.r.setStyleProperty("top", "0px");
        this.r.setStyleProperty("left", "0px");
        this.t = this.o.createElement("canvas");
        this.t.setStyleProperty("position", "absolute");
        this.t.setStyleProperty("top", "0px");
        this.t.setStyleProperty("left", "0px");
        this.o.append(this.q);
        this.o.append(this.s);
        this.o.append(this.r);
        this.o.append(this.t);
        this.e = new RenderingContext(new CanvasViewRenderer(), this.o.get2DCanvasContext(this.q));
        this.g = new RenderingContext(new CanvasViewRenderer(), this.o.get2DCanvasContext(this.s));
        this.f = new RenderingContext(new CanvasViewRenderer(), this.o.get2DCanvasContext(this.r));
        this.h = new RenderingContext(new CanvasViewRenderer(), this.o.get2DCanvasContext(this.t));
        this.c = new DOMEventProxy(this.t, this.o, false);
        var c = this.c;
        c.onMouseOver = delegateCombine(c.onMouseOver, runOn(this.a, this.a.aj));
        var d = this.c;
        d.onMouseLeave = delegateCombine(d.onMouseLeave, runOn(this.a, this.a.ai));
        var e = this.c;
        e.onMouseDown = delegateCombine(e.onMouseDown, runOn(this.a, this.a.ah));
        var f = this.c;
        f.onMouseUp = delegateCombine(f.onMouseUp, runOn(this.a, this.a.ak));
        this.c.ab = this.a.a.bv;
        this.ad(this.o.rootWrapper.width(), this.o.rootWrapper.height());
    };
    PieChartViewManager.prototype.w = function (a) {
        this.o.append(a);
    };
    PieChartViewManager.prototype.ae = function (a) {
        if (this.c == null) {
            return;
        }
        this.c.ab = a;
    };
    PieChartViewManager.prototype.u = function () {
        return this.o;
    };
    PieChartViewManager.prototype.y = function (a) {
        a.width = this.k;
        a.height = this.j;
    };
    PieChartViewManager.prototype.aj = function (a) {
        this.v = null;
        this._toolTipObject = null;
        if (typeof a === 'string') {
            this.v = a;
        }
        else {
            this._toolTipObject = a;
            if (this._toolTipObject != null) {
                this._toolTipObject.setStyleProperty("position", "absolute");
                this._toolTipObject.setStyleProperty("white-space", "nowrap");
                this._toolTipObject.setStyleProperty("top", "0");
                this._toolTipObject.setStyleProperty("left", "0");
                this._toolTipObject.setStyleProperty("z-index", "10000");
            }
        }
    };
    PieChartViewManager.prototype.ai = function (pos_, context_) {
        if (this._toolTipObject != null) {
            if (this.i) {
                this.w(this._toolTipObject);
                this.i = false;
            }
            context_.hideOthers = true;
            if (this._toolTipObject.updateToolTip) {
                this._toolTipObject.updateToolTip(context_);
            }
            ;
            this._toolTipObject.setOffset(pos_.x, pos_.y);
        }
    };
    PieChartViewManager.prototype.z = function (a) {
        if (this._toolTipObject != null) {
            var context_ = a;
            if (this._toolTipObject.hideToolTip) {
                this._toolTipObject.hideToolTip(context_);
            }
            ;
        }
    };
    PieChartViewManager.prototype.ak = function (style_) {
        var a = null;
        var fillColor_ = null;
        if (style_ != null) {
            if (style_.fill) {
                fillColor_ = style_.fill;
            }
            ;
            if (fillColor_ != null) {
                a = Brush.create(fillColor_);
            }
        }
        return a;
    };
    PieChartViewManager.prototype.al = function (style_) {
        var a = null;
        var outlineColor_ = null;
        if (style_ != null) {
            if (style_.stroke) {
                outlineColor_ = style_.stroke;
            }
            ;
            if (outlineColor_ != null) {
                a = Brush.create(outlineColor_);
            }
        }
        return a;
    };
    PieChartViewManager.prototype.m = function (style_) {
        var actualOutlineThickness_ = NaN;
        if (style_ != null) {
            if (style_.strokeThickness) {
                actualOutlineThickness_ = style_.strokeThickness;
            }
            ;
        }
        return actualOutlineThickness_;
    };
    PieChartViewManager.prototype.af = function () {
    };
    PieChartViewManager.$t = markType(PieChartViewManager, 'PieChartViewManager');
    return PieChartViewManager;
}(Base));
export { PieChartViewManager };
/**
 * @hidden
 */
var LabelClickEventArgs = /** @class */ (function (_super) {
    tslib_1.__extends(LabelClickEventArgs, _super);
    function LabelClickEventArgs(a, b) {
        var _this = _super.call(this) || this;
        _this._slice = null;
        _this.c = true;
        _this.slice = a;
        return _this;
    }
    Object.defineProperty(LabelClickEventArgs.prototype, "slice", {
        get: function () {
            return this._slice;
        },
        set: function (a) {
            this._slice = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LabelClickEventArgs.prototype, "item", {
        get: function () {
            if (this.slice != null) {
                return this.slice.dataContext;
            }
            else {
                return null;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LabelClickEventArgs.prototype, "allowSliceClick", {
        get: function () {
            return this.c;
        },
        set: function (a) {
            this.c = a;
        },
        enumerable: true,
        configurable: true
    });
    LabelClickEventArgs.$t = markType(LabelClickEventArgs, 'LabelClickEventArgs', EventArgs.$);
    return LabelClickEventArgs;
}(EventArgs));
export { LabelClickEventArgs };
/**
 * @hidden
 */
var SliceClickEventArgs = /** @class */ (function (_super) {
    tslib_1.__extends(SliceClickEventArgs, _super);
    function SliceClickEventArgs(a, b) {
        var _this = _super.call(this) || this;
        _this._slice = null;
        _this.d = false;
        _this.c = false;
        _this._originalEvent = null;
        _this.slice = a;
        _this.originalEvent = b;
        if (a == null) {
            return _this;
        }
        _this.d = a.isSelected;
        _this.c = a.isExploded;
        return _this;
    }
    Object.defineProperty(SliceClickEventArgs.prototype, "slice", {
        get: function () {
            return this._slice;
        },
        set: function (a) {
            this._slice = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliceClickEventArgs.prototype, "isSelected", {
        get: function () {
            return this.d;
        },
        set: function (a) {
            this.d = a;
            this.slice.ai.fi(this.slice, a);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliceClickEventArgs.prototype, "isExploded", {
        get: function () {
            return this.c;
        },
        set: function (a) {
            this.c = a;
            this.slice.isExploded = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliceClickEventArgs.prototype, "isOthersSlice", {
        get: function () {
            return this.slice.isOthersSlice;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliceClickEventArgs.prototype, "dataContext", {
        get: function () {
            if (this.slice != null) {
                return this.slice.dataContext;
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliceClickEventArgs.prototype, "originalEvent", {
        get: function () {
            return this._originalEvent;
        },
        set: function (a) {
            this._originalEvent = a;
        },
        enumerable: true,
        configurable: true
    });
    SliceClickEventArgs.$t = markType(SliceClickEventArgs, 'SliceClickEventArgs', EventArgs.$);
    return SliceClickEventArgs;
}(EventArgs));
export { SliceClickEventArgs };
/**
 * @hidden
 */
var PieLabel = /** @class */ (function (_super) {
    tslib_1.__extends(PieLabel, _super);
    function PieLabel() {
        var _this = _super.call(this) || this;
        _this.ah = null;
        _this.ao = null;
        _this.ai = 0;
        _this.aj = null;
        _this.ap = null;
        _this.aq = null;
        _this.ag = 0;
        return _this;
    }
    PieLabel.prototype.ak = function (a) {
        if (a.a.ao == 3) {
            this.ao = a.bz(this);
            var b = typeCast(TextBlock.$, this.aj);
            var c = b.ak;
            a.a.ff();
            var d = this.ah.isExploded ? this.ah.b5 : this.ah.b7;
            var e = GeometryUtil.k(d, this.ai, this.ah.a2 + a.a.cm);
            var f = a.b0.width;
            if (a.y(b) + e.x > f && e.x < f) {
                while (c.length > 0 && a.y(b) + e.x > f) {
                    c = c.substr(0, c.length - 1);
                    b.ak = c;
                }
                if (c.length > 3) {
                    c = c.substr(0, c.length - 3);
                    c = c + "...";
                }
                else {
                    if (a.y("...") < this.ao.width) {
                        c = "...";
                    }
                    else {
                        c = stringEmpty();
                    }
                }
            }
            var g = new TextBlock();
            g.ak = c;
            this.aj = g;
        }
    };
    PieLabel.prototype.al = function () {
    };
    PieLabel.prototype.am = function () {
        this.ap._visibility = this.ah.ai.g8 != 0 ? this.ah.ai.g8 : this.ah.aj._visibility;
        var a;
        var b = this.ah.ai.cn;
        var c = GeometryUtil.k(this.ah.b6(), this.ai, this.ah.a2);
        this.ap.aj = c.x;
        this.ap.al = c.y;
        if (this.ai < 90 || this.ai >= 270) {
            a = { $type: Point_$type, x: this.ao.left, y: (this.ao.top + this.ao.bottom) / 2 };
        }
        else {
            a = { $type: Point_$type, x: this.ao.right, y: (this.ao.top + this.ao.bottom) / 2 };
        }
        if (b > 0) {
            var d = GeometryUtil.f(c, a);
            if (b < d) {
                a = GeometryUtil.m(a, c, b);
            }
            else {
                a = c;
            }
        }
        this.ap.ak = a.x;
        this.ap.am = a.y;
    };
    PieLabel.prototype.an = function () {
        this.aq._visibility = this.ah.ai.g8 != 0 ? this.ah.ai.g8 : this.ah.aj._visibility;
        var a = this.ah.b6();
        var b = this.aq.aj.b._inner[0];
        var c = b._segments._inner[0];
        var d = this.ah.ai.cn;
        var e = (this.ao.top + this.ao.bottom) / 2;
        var f = GeometryUtil.k(a, this.ai, this.ah.a2);
        var g = GeometryUtil.k(a, this.ai, this.ah.a2 + this.ah.ai.cm / 2);
        var h;
        var i;
        var j;
        var k = e;
        if (this.ai < 90 && this.ai >= 0) {
            h = { $type: Point_$type, x: this.ao.left - 30, y: k };
            j = { $type: Point_$type, x: this.ao.left, y: e };
        }
        else if (this.ai < 180 && this.ai >= 90) {
            h = { $type: Point_$type, x: this.ao.right + 30, y: k };
            j = { $type: Point_$type, x: this.ao.right, y: e };
        }
        else if (this.ai < 270 && this.ai >= 180) {
            h = { $type: Point_$type, x: this.ao.right + 30, y: k };
            j = { $type: Point_$type, x: this.ao.right, y: e };
        }
        else {
            h = { $type: Point_$type, x: this.ao.left - 30, y: k };
            j = { $type: Point_$type, x: this.ao.left, y: e };
        }
        if (d > 0) {
            var l = GeometryUtil.f(f, j);
            if (d < l) {
                i = GeometryUtil.m(j, f, d);
                var m = g.x - f.x;
                var n = g.y - f.y;
                g = GeometryUtil.m(g, f, d);
                var o = g.x - f.x;
                var p = g.y - f.y;
                if ((m > 0 && o < 0) || (m < 0 && o > 0) || (n > 0 && p < 0) || (n < 0 && p > 0)) {
                    g = f;
                }
                h = GeometryUtil.m(h, f, d);
                var q = GeometryUtil.f(f, i) / GeometryUtil.f(f, j);
                h.x = f.x + (h.x - f.x) * q;
                h.y = f.y + (h.y - f.y) * q;
            }
            else {
                this.aq._visibility = 1;
                return;
            }
        }
        else {
            i = j;
        }
        if (this.ai < 180 && this.ai >= 0) {
            if (g.y > h.y) {
                g.y = f.y;
            }
        }
        else {
            if (g.y < h.y) {
                g.y = f.y;
            }
        }
        b._startPoint = f;
        if (this.ah.ai.ap == 1) {
            c.e = f;
        }
        else {
            c.e = g;
        }
        c.f = h;
        c.g = i;
    };
    PieLabel.$t = markType(PieLabel, 'PieLabel', Control.$);
    return PieLabel;
}(Control));
export { PieLabel };
/**
 * @hidden
 */
var PieChartBase = /** @class */ (function (_super) {
    tslib_1.__extends(PieChartBase, _super);
    function PieChartBase() {
        var _this = _super.call(this) || this;
        _this.as = null;
        _this.bh = false;
        _this.bk = false;
        _this.bj = false;
        _this.bl = false;
        _this.bi = false;
        _this.bo = false;
        _this.bn = false;
        _this.bm = false;
        _this.aw = null;
        _this.b5 = null;
        _this.b7 = null;
        _this.b6 = null;
        _this.b8 = null;
        _this.cv = null;
        _this.a9 = null;
        _this.cx = 0;
        _this.cp = 0;
        _this.cu = 0;
        _this.b2 = null;
        _this.b1 = null;
        _this.b0 = null;
        _this.cf = 0;
        _this.bz = null;
        _this.av = null;
        _this.a7 = null;
        _this.a8 = null;
        _this.aj = new IndexCollection();
        _this.ak = new IndexCollection();
        _this.ca = NaN;
        _this.b9 = 1;
        _this._selectedItems = null;
        _this.labelClick = null;
        _this.selectedItemChanging = null;
        _this.selectedItemsChanging = null;
        _this.selectedItemChanged = null;
        _this.selectedItemsChanged = null;
        _this.sliceClick = null;
        _this.bg = null;
        _this.bf = null;
        _this.g3 = null;
        _this.propertyChanged = null;
        _this.propertyUpdated = null;
        _this.c1 = null;
        _this.g3 = Rect.empty;
        var a = _this.ar();
        _this.e4(a);
        a.az();
        _this.ab = PieChartBase.$;
        _this.b2 = new List$1(Number_$type, 0);
        _this.b1 = new List$1(Number_$type, 0);
        _this.b0 = new List$1(Base.$, 0);
        _this.aw = function (b, c) { return _this.e8(b, c.propertyName, c.oldValue, c.newValue); };
        _this.b5 = function (b, c) {
            _this.ff();
            _this.fe();
        };
        _this.b6 = function (b, c) {
            if (_this.bp) {
                _this.e7();
                _this.e6();
                _this.ff();
                _this.fd();
            }
        };
        _this.b7 = function (b, c) { return _this.fh(c); };
        _this.b8 = function (b, c) { return _this.e0(c); };
        _this.cv = function (b, c) { return _this.ei(c.action, c.position, c.count, c.propertyName); };
        _this.propertyUpdated = delegateCombine(_this.propertyUpdated, _this.aw);
        var b = _this.selectedSlices;
        b.collectionChanged = delegateCombine(b.collectionChanged, _this.b7);
        _this.bl = true;
        var c = _this.explodedSlices;
        c.collectionChanged = delegateCombine(c.collectionChanged, _this.b6);
        _this.bi = true;
        _this.selectedItems = new ObjectCollection(0);
        var d = _this.selectedItems;
        d.collectionChanged = delegateCombine(d.collectionChanged, _this.b8);
        _this.bg = ((function () {
            var $ret = new Pool$1(Slice.$);
            $ret.create = runOn(_this.as, _this.as.g);
            $ret.activate = runOn(_this.as, _this.as.bc);
            $ret.disactivate = runOn(_this.as, _this.as.be);
            $ret.destroy = runOn(_this.as, _this.as.bd);
            return $ret;
        })());
        _this.bf = ((function () {
            var $ret = new Pool$1(PieLabel.$);
            $ret.create = runOn(_this.as, _this.as.d);
            $ret.activate = runOn(_this.as, _this.as.ar);
            $ret.disactivate = runOn(_this.as, _this.as.at);
            $ret.destroy = runOn(_this.as, _this.as.as);
            return $ret;
        })());
        _this.av = new PieChartSliceSelector(_this);
        FastItemObjectColumn.m();
        return _this;
    }
    PieChartBase.prototype.ar = function () {
        return new PieChartBaseView(this);
    };
    PieChartBase.prototype.e4 = function (a) {
        this.as = a;
    };
    Object.defineProperty(PieChartBase.prototype, "be", {
        get: function () {
            return this.a9;
        },
        set: function (a) {
            if (this.a9 != a) {
                var b = this.a9;
                this.a9 = a;
                this.fa("ValueColumn", b, this.a9);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieChartBase.prototype, "cc", {
        get: function () {
            return Math.abs(this.cl) > 1 ? this.cl : this.cl * 100;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieChartBase.prototype, "cl", {
        get: function () {
            return this.c(PieChartBase.f0);
        },
        set: function (a) {
            var b = a;
            if (isNaN_(a) || isInfinity(a)) {
                b = 0;
            }
            if (a < 0) {
                b = 0;
            }
            if (a > 100) {
                b = 100;
            }
            this.h(PieChartBase.f0, b);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieChartBase.prototype, "ba", {
        get: function () {
            return this.a7;
        },
        set: function (a) {
            if (this.a7 != a) {
                var b = this.ba;
                this.a7 = a;
                this.fa("LabelColumn", b, this.ba);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieChartBase.prototype, "bb", {
        get: function () {
            return this.a8;
        },
        set: function (a) {
            if (this.a8 != a) {
                var b = this.bb;
                this.a8 = a;
                this.fa("LegendLabelColumn", b, this.bb);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieChartBase.prototype, "cb", {
        get: function () {
            var a = this.cg;
            if (isNaN_(a) || isInfinity(a) || a < 0) {
                return 0;
            }
            if (a > 1) {
                return 1;
            }
            return a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieChartBase.prototype, "ce", {
        get: function () {
            var a = this.cr;
            if (isNaN_(a) || isInfinity(a) || a < 0) {
                return 0;
            }
            if (a > 1) {
                return 1;
            }
            return a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieChartBase.prototype, "explodedSlices", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            var b = this.aj;
            if (b != null) {
                var c = this.aj;
                c.collectionChanged = delegateRemove(c.collectionChanged, this.b6);
            }
            this.bi = false;
            this.aj = a;
            if (this.aj != null) {
                var d = this.aj;
                d.collectionChanged = delegateCombine(d.collectionChanged, this.b6);
                this.bi = true;
            }
            if (this.bp) {
                this.e7();
                this.e6();
                this.ff();
                this.fd();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieChartBase.prototype, "selectedSlices", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            var b = this.ak;
            b.collectionChanged = delegateRemove(b.collectionChanged, this.b7);
            this.bl = false;
            this.ak = a;
            if (this.ak != null) {
                var c = this.ak;
                c.collectionChanged = delegateCombine(c.collectionChanged, this.b7);
                this.bl = true;
            }
            if (this.bq) {
                this.e7();
                this.e6();
                this.ff();
                this.fd();
                this.fe();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieChartBase.prototype, "fs", {
        get: function () {
            return typeCast(DataTemplate.$, this.c(PieChartBase.f8));
        },
        set: function (a) {
            this.h(PieChartBase.f8, a);
        },
        enumerable: true,
        configurable: true
    });
    PieChartBase.prototype.bs = function () {
        return this.at != null;
    };
    PieChartBase.prototype.bt = function () {
        return this.au != null;
    };
    Object.defineProperty(PieChartBase.prototype, "cq", {
        get: function () {
            return this.ca;
        },
        set: function (a) {
            var b = this.ca;
            this.ca = a;
            this.fa("PixelScalingRatio", b, this.ca);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieChartBase.prototype, "cd", {
        get: function () {
            return this.b9;
        },
        set: function (a) {
            var b = this.b9;
            this.b9 = a;
            this.fa("ActualPixelScalingRatio", b, this.b9);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieChartBase.prototype, "selectedItem", {
        get: function () {
            return this.c(PieChartBase.gn);
        },
        set: function (a) {
            this.h(PieChartBase.gn, a);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieChartBase.prototype, "selectedItems", {
        get: function () {
            return this._selectedItems;
        },
        set: function (a) {
            this._selectedItems = a;
        },
        enumerable: true,
        configurable: true
    });
    PieChartBase.prototype.ew = function (a, b) {
        if (this.labelClick != null) {
            this.labelClick(a, b);
        }
    };
    PieChartBase.prototype.ey = function (a, b) {
        if (this.selectedItemChanging != null) {
            this.selectedItemChanging(a, b);
        }
    };
    PieChartBase.prototype.e1 = function (a, b) {
        if (this.selectedItemsChanging != null) {
            this.selectedItemsChanging(a, b);
        }
    };
    PieChartBase.prototype.ex = function (a, b) {
        if (this.selectedItemChanged != null) {
            this.selectedItemChanged(a, b);
        }
    };
    PieChartBase.prototype.ez = function (a, b) {
        if (this.selectedItemsChanged != null) {
            this.selectedItemsChanged(a, b);
        }
    };
    PieChartBase.prototype.e3 = function (a, b) {
        if (this.sliceClick != null) {
            this.sliceClick(a, b);
        }
    };
    PieChartBase.prototype.ek = function (a, b) {
        if (!this.bi) {
            return;
        }
        if (!this.explodedSlices.contains(a.a5) && b) {
            this.explodedSlices.add(a.a5);
        }
        if (this.explodedSlices.contains(a.a5) && !b) {
            this.explodedSlices.remove(a.a5);
        }
    };
    PieChartBase.prototype.fi = function (a, b) {
        this.bn = true;
        if (!this.selectedSlices.contains(a.a5) && b) {
            this.selectedSlices.add(a.a5);
        }
        if (this.selectedSlices.contains(a.a5) && !b) {
            this.selectedSlices.remove(a.a5);
        }
        this.bn = false;
    };
    PieChartBase.prototype.fj = function (a) {
        this.as.ba(a);
    };
    PieChartBase.prototype.cy = function (a) {
        return this.as.ad(a);
    };
    PieChartBase.prototype.g2 = function (a, b) {
        var c = new Rect(0, 0, 0, 0, 0);
        return c;
    };
    PieChartBase.prototype.br = function (a, b) {
        var c = a.ah;
        if (c == null) {
            return false;
        }
        var d = c.b6();
        var e = this.gx == 1 ? c.a3 : c.ax;
        var f = this.gx == 1 ? c.ax : c.a3;
        var g = false;
        var h = false;
        var i = GeometryUtil.k(d, e, c.a2);
        var j = GeometryUtil.k(d, f, c.a2);
        e = PieChartBase.ch(i.x, d.x, i.y, d.y);
        f = PieChartBase.ch(j.x, d.x, j.y, d.y);
        if (this.bu(c)) {
            h = true;
        }
        var k;
        k = MathUtil.e(a.ao.right - d.x, a.ao.top - d.y);
        if (k > c.a2) {
            return false;
        }
        k = MathUtil.e(a.ao.right - d.x, a.ao.bottom - d.y);
        if (k > c.a2) {
            return false;
        }
        k = MathUtil.e(a.ao.left - d.x, a.ao.top - d.y);
        if (k > c.a2) {
            return false;
        }
        k = MathUtil.e(a.ao.left - d.x, a.ao.bottom - d.y);
        if (k > c.a2) {
            return false;
        }
        if (h) {
            return true;
        }
        if (e > f) {
            e = e - 360;
            g = true;
        }
        var l;
        l = PieChartBase.ch(a.ao.right, d.x, a.ao.top, d.y);
        if (g && l > 180 && l < 360) {
            l = l - 360;
        }
        if (l < e || l > f) {
            return false;
        }
        l = PieChartBase.ch(a.ao.right, d.x, a.ao.bottom, d.y);
        if (g && l > 180 && l < 360) {
            l = l - 360;
        }
        if (l < e || l > f) {
            return false;
        }
        l = PieChartBase.ch(a.ao.left, d.x, a.ao.top, d.y);
        if (g && l > 180 && l < 360) {
            l = l - 360;
        }
        if (l < e || l > f) {
            return false;
        }
        l = PieChartBase.ch(a.ao.left, d.x, a.ao.bottom, d.y);
        if (g && l > 180 && l < 360) {
            l = l - 360;
        }
        if (l < e || l > f) {
            return false;
        }
        return true;
    };
    PieChartBase.cs = function (a) {
        var b = Math.round(a * Math.pow(10, 5)) / Math.pow(10, 5);
        return b;
    };
    PieChartBase.prototype.bu = function (a) {
        return PieChartBase.cs(Math.abs(a.ax - a.a3)) == 360;
    };
    PieChartBase.ch = function (a, b, c, d) {
        var e = MathUtil.e(a - b, c - d);
        var f = Math.asin((c - d) / e) * 180 / Math.PI;
        if (a < b) {
            f = 180 - f;
        }
        if (a > b) {
            f = 360 + f;
        }
        if (f == 360) {
            f = 0;
        }
        return GeometryUtil.g(f);
    };
    PieChartBase.fo = function (a) {
        var b = new Array(a.count);
        for (var c = 0; c < a.count; c++) {
            var d = a._inner[c];
            var e = d.ah;
            var f = GeometryUtil.k(e.b7, d.ai, e.a2);
            b[c] = f.y;
        }
        for (var g = 0; g < a.count; g++) {
            for (var h = g + 1; h < a.count; h++) {
                if (b[g] >= b[h]) {
                    var i = a._inner[g];
                    a._inner[g] = a._inner[h];
                    a._inner[h] = i;
                    var j = b[g];
                    b[g] = b[h];
                    b[h] = j;
                }
            }
        }
    };
    PieChartBase.prototype.fg = function (a) {
        var e_1, _a, e_2, _b;
        if (a.count == 0) {
            return;
        }
        var b = this.as.b0.width;
        var c = this.as.b0.height;
        var d = a.count;
        var e = a._inner[0].ah.a2;
        var f = a._inner[0].ah.b6();
        var g = true;
        var h = 0;
        var i = Number.POSITIVE_INFINITY;
        var j = Number.NEGATIVE_INFINITY;
        for (var k = 0; k < d - 1; k++) {
            var l = a._inner[k];
            var m = a._inner[k + 1];
            if (l.ao.intersectsWith(m.ao)) {
                h++;
            }
        }
        var n = 0;
        try {
            for (var _c = tslib_1.__values(fromEnum(a)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var o = _d.value;
                i = Math.min(i, o.ao.height);
                j = Math.max(j, o.ao.height);
                n += o.ao.height;
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_1) throw e_1.error; }
        }
        if (n > c) {
            g = false;
        }
        if (g && h > 0) {
            for (var p = 0; p < d - 1; p++) {
                for (var q = p + 1; q < d; q++) {
                    var r = a._inner[p];
                    var s = a._inner[q];
                    if (r.ao.intersectsWith(s.ao)) {
                        var t = s.ao;
                        t.y = Math.min(r.ao.bottom + 0.01, c - i);
                        var u = this.cm + e;
                        var v = Math.abs(f.y - (t.y + i / 2));
                        var w = Math.sqrt(Math.abs(u * u - v * v));
                        var x = GeometryUtil.g(s.ai);
                        if (x > 90 && x < 270) {
                            w = (t.width + w) * -1;
                        }
                        t.x = f.x + w;
                        s.ao = t;
                    }
                }
            }
            for (var y = d - 1; y > 0; y--) {
                for (var z = y - 1; z >= 0; z--) {
                    var aa = a._inner[y];
                    var ab = a._inner[z];
                    if (aa.ao.intersectsWith(ab.ao)) {
                        var ac = ab.ao;
                        ac.y = Math.max(aa.ao.top - i - 0.01, 0);
                        var ad = this.cm + e;
                        var ae = Math.abs(f.y - (ac.y + i / 2));
                        var af = Math.sqrt(Math.abs(ad * ad - ae * ae));
                        var ag = GeometryUtil.g(ab.ai);
                        if (ag > 90 && ag < 270) {
                            af = (ac.width + af) * -1;
                        }
                        ac.x = f.x + af;
                        ab.ao = ac;
                    }
                }
            }
        }
        try {
            for (var _e = tslib_1.__values(fromEnum(a)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var ah = _f.value;
                var ai = ah.ao;
                if (ai.left > b || ai.right < 0) {
                    ah._visibility = 1;
                    if (this.ap == 0) {
                        ah.ap._visibility = 1;
                    }
                    else {
                        ah.aq._visibility = 1;
                    }
                }
                else if (ai.left < 0) {
                    var aj = Math.abs(ai.x);
                    ai.x = 0;
                    if (aj > ai.width) {
                        ai.width = 0;
                    }
                    else {
                    }
                    ah.ao = ai;
                }
                else if (ai.right > b) {
                    var ak = ai.right - b;
                    if (ak > ai.width) {
                        ai.width = 0;
                    }
                    else {
                        ai.width = ai.width - ak;
                    }
                    ah.ao = ai;
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    PieChartBase.prototype.ei = function (a, b, c, d) {
        this.fc();
    };
    PieChartBase.prototype.fc = function () {
        this.e5();
        this.e7();
        this.e6();
        this.ff();
        this.fd();
        this.fe();
        this.as.bp();
    };
    PieChartBase.prototype.e5 = function () {
        var e_3, _a;
        this.cu = 0;
        this.cp = 0;
        this.b2.clear();
        this.b1.clear();
        this.b0.clear();
        if (this.itemsSource == null || this.a5 == null) {
            return;
        }
        if (this.be == null || this.be.count == 0) {
            return;
        }
        try {
            for (var _b = tslib_1.__values(fromEnum(this.be)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var a = _c.value;
                if (isNaN_(a) || isInfinity(a) || a <= 0) {
                    continue;
                }
                this.cu = this.cu + a;
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
        for (var b = 0; b < this.be.count; b++) {
            var c = this.be.item(b);
            var d = c <= 0;
            if (isNaN_(c) || isInfinity(c) || d) {
                continue;
            }
            var e = this.aq == 1 ? c / this.cu : c;
            var f = this.aq == 1 ? this.co / 100 : this.co;
            var g = true;
            if (e <= f && g) {
                this.cp = this.cp + c;
                this.b1.add(b);
                this.b0.add1(this.a5.item(b));
            }
            else {
                this.b2.add(b);
            }
        }
    };
    PieChartBase.prototype.e7 = function () {
        if (this.itemsSource == null || this.a5 == null) {
            this.bg.count = 0;
            return;
        }
        var a = this.b2.count;
        var b = this.b1.count > 0;
        var c = PieChartBase.cs(this.cf);
        var d = PieChartBase.cs(this.cf);
        if (b) {
            a++;
        }
        this.cx = a;
        for (var e = 0; e < a; e++) {
            var f = false;
            var g = void 0;
            if (e == a - 1 && b) {
                g = this.cp;
                f = true;
            }
            else {
                g = this.be.item(this.b2._inner[e]);
            }
            if (this.gx == 1) {
                d += PieChartBase.cs(Math.abs(g) * 360 / this.cu);
            }
            else {
                d -= PieChartBase.cs(Math.abs(g) * 360 / this.cu);
            }
            var h = this.bg.item(e);
            h.aw = true;
            h.a3 = c;
            h.ax = d;
            h.a1 = h.a0 = this.cc;
            h.isOthersSlice = f;
            h.ay = this.cb;
            h.a5 = e;
            h.dataContext = f ? this.b0 : this.a5.item(this.b2._inner[e]);
            this.av.j(h);
            h.isExploded = this.bi ? this.explodedSlices.contains(e) : false;
            c = d;
            h.aw = false;
        }
        this.bg.count = a;
    };
    PieChartBase.prototype.e6 = function () {
        var _this = this;
        if (this.itemsSource == null || this.a5 == null) {
            this.bf.count = 0;
            return;
        }
        if (this.ba == null || this.ba.count == 0 || this.ao == 0) {
            this.bf.count = 0;
        }
        var a = this.b2.count;
        if (this.b1.count > 0) {
            a++;
        }
        this.as.au();
        var b = 0;
        var _loop_1 = function (c) {
            var d = stringEmpty();
            var e = false;
            var f;
            var g = null;
            if (c == a - 1 && this_1.b1.count > 0) {
                f = this_1.dz;
                e = true;
                if (this_1.bs()) {
                    var h = ((function () {
                        var $ret = new PieSliceDataContext();
                        $ret.series = _this;
                        $ret.item = e ? _this.b0 : _this.a5.item(_this.b2._inner[c]);
                        $ret.percentValue = _this.ck(_this.bg.item(c));
                        $ret.isOthersSlice = e;
                        return $ret;
                    })());
                    if (f != null) {
                        h.itemLabel = f.toString();
                        h.legendLabel = f.toString();
                    }
                    var i = h;
                    i = i.flatten();
                    f = this_1.at(i);
                }
                if (null != f) {
                    d = f.toString();
                }
                else {
                    d = this_1.dz;
                }
                d = this_1.dz;
            }
            else {
                if (this_1.ba != null && this_1.ba.count >= this_1.b2.count) {
                    f = this_1.ba.item(this_1.b2._inner[c]);
                }
                else {
                    f = null;
                }
                g = (this_1.bb != null && this_1.bb.count > 0) ? this_1.bb.item(this_1.b2._inner[c]) : null;
                if (this_1.bs()) {
                    var j = ((function () {
                        var $ret = new PieSliceDataContext();
                        $ret.series = _this;
                        $ret.item = e ? _this.b0 : _this.a5.item(_this.b2._inner[c]);
                        $ret.itemLabel = f != null ? f.toString() : null;
                        $ret.legendLabel = g != null ? g.toString() : f != null ? f.toString() : null;
                        $ret.percentValue = _this.ck(_this.bg.item(c));
                        $ret.isOthersSlice = e;
                        return $ret;
                    })());
                    var k = j;
                    k = k.flatten();
                    var formatedLabel_ = this_1.at(k);
                    if (null == formatedLabel_ && this_1.ba != null && this_1.ba.count > 0) {
                        f = this_1.ba.item(this_1.b2._inner[c]);
                    }
                    else {
                        f = formatedLabel_;
                    }
                }
                var label_ = f;
                var errorMsg_ = this_1.as.af;
                if (label_ === undefined) {
                    throw new Error(errorMsg_);
                }
                ;
                if (null != f) {
                    d = f.toString();
                }
                else {
                    d = null;
                }
            }
            if (this_1.ba != null && this_1.ba.count > 0) {
                var l = this_1.bf.item(c);
                var m = this_1.bg.item(c);
                m.aj = l;
                l.ai = GeometryUtil.g((m.a3 + m.ax) / 2);
                l.ah = m;
                l.aj = ((function () {
                    var $ret = new TextBlock();
                    $ret.ak = d;
                    return $ret;
                })());
                if (this_1.fs == null) {
                    l.dataContext = e ? this_1.b0 : this_1.a5.item(this_1.b2._inner[c]);
                    l.ak(this_1.as);
                }
                else {
                }
                l._visibility = 0;
                l.ao = this_1.as.bz(l);
                b++;
            }
            if (this_1.bb != null && this_1.bb.count > 0) {
                var n = this_1.bg.item(c);
                n.bf = g != null ? g.toString() : null;
            }
        };
        var this_1 = this;
        for (var c = 0; c < a; c++) {
            _loop_1(c);
        }
        this.bf.count = b;
    };
    PieChartBase.prototype.ff = function () {
        var e_4, _a;
        if (this.itemsSource == null || this.a5 == null) {
            return;
        }
        var a = this.as.b1();
        this.g3 = new Rect(0, 0, 0, a.width, a.height);
        var b = this.as.aa();
        var c = this.as.z(this.g6);
        b = isNaN_(b) ? 0 : b / 2;
        c = isNaN_(c) ? 0 : c / 2;
        b = Math.max(c, b);
        var d = Math.min(a.width / 2, a.height / 2);
        var e = { $type: Point_$type, x: a.width / 2, y: a.height / 2 };
        var f = d * this.ce;
        var g = f + b;
        if (g > d) {
            var h = g - d;
            f = f - h;
        }
        try {
            for (var _b = tslib_1.__values(fromEnum(this.bg.a)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var i = _c.value;
                var j = GeometryUtil.j(a.width, a.height, true, (i.a3 + i.ax) / 2, f * this.cb);
                i.aw = true;
                i.a1 = i.a0 = this.cc;
                i.a2 = f;
                i.ay = this.cb;
                i.b7 = e;
                i.b5 = j;
                this.fj(i);
                i.aw = false;
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_4) throw e_4.error; }
        }
        this.as.bp();
    };
    PieChartBase.prototype.fd = function () {
        var e_5, _a, e_6, _b, e_7, _c, e_8, _d, e_9, _e;
        var a = this.as.b0.width;
        var b = this.as.b0.height;
        if (b == 0 || a == 0) {
            return;
        }
        if (this.bf.a.count == 0 || this.ao == 0) {
            this.bf.count = 0;
            return;
        }
        var c = new List$1(PieLabel.$, 0);
        var d = new List$1(PieLabel.$, 0);
        var e = new List$1(PieLabel.$, 0);
        var f = new List$1(PieLabel.$, 0);
        try {
            for (var _f = tslib_1.__values(fromEnum(this.bf.a)), _g = _f.next(); !_g.done; _g = _f.next()) {
                var g = _g.value;
                var h = g.ah;
                if (h == null) {
                    continue;
                }
                var i = h.b6();
                var j = g.ao.width;
                var k = g.ao.height;
                if (this.ao == 1 || this.ao == 4) {
                    var l = h.a2 * h.a1 / 100;
                    var m = GeometryUtil.k(i, g.ai, h.a2 - (h.a2 - l) / 2);
                    g.ao = new Rect(0, m.x - j / 2, m.y - k / 2, j, k);
                    var n = this.br(g, m);
                    if (n || this.ao == 1) {
                        if (this.gv == null) {
                            h.f(Slice.bp);
                        }
                        else {
                            h.b2 = this.gv;
                        }
                        h.au = true;
                        e.add(g);
                        g.ag = 1;
                        if (g.ah.ai.ap == 0) {
                            g.ap._visibility = 1;
                        }
                        else {
                            g.aq._visibility = 1;
                        }
                        if (!n && this.ao == 1) {
                            g._visibility = 1;
                        }
                        else {
                            g._visibility = 0;
                        }
                        continue;
                    }
                }
                if (this.ao == 2 || this.ao == 4) {
                    var o = PieChartBase.ci(i, h.a2, g);
                    var p = GeometryUtil.k(i, g.ai, o);
                    g.ao = new Rect(0, p.x - j / 2, p.y - k / 2, j, k);
                    var q = this.br(g, p);
                    if (q || this.ao == 2) {
                        if (this.gv == null) {
                            h.f(Slice.bp);
                        }
                        else {
                            h.b2 = this.gv;
                        }
                        h.au = true;
                        f.add(g);
                        g.ag = 2;
                        if (g.ah.ai.ap == 0) {
                            g.ap._visibility = 1;
                        }
                        else {
                            g.aq._visibility = 1;
                        }
                        if (!q && this.ao == 2) {
                            g._visibility = 1;
                        }
                        else {
                            g._visibility = 0;
                        }
                        continue;
                    }
                }
                if (this.gw == null) {
                    h.f(Slice.bp);
                }
                else {
                    h.b2 = this.gw;
                }
                h.au = false;
                var r = GeometryUtil.k(i, g.ai, h.a2 + this.cm);
                g.ag = 3;
                g._visibility = 0;
                g.al();
                if (g.ai < 90 && g.ai >= 0) {
                    g.ao = new Rect(0, r.x, r.y, j, k);
                    c.add(g);
                }
                else if (g.ai < 180 && g.ai >= 90) {
                    g.ao = new Rect(0, r.x - j, r.y, j, k);
                    d.add(g);
                }
                else if (g.ai < 270 && g.ai >= 180) {
                    g.ao = new Rect(0, r.x - j, r.y - k, j, k);
                    d.add(g);
                }
                else {
                    g.ao = new Rect(0, r.x, r.y - k, j, k);
                    c.add(g);
                }
                if (g.ao.y < 0) {
                    g.ao = new Rect(0, g.ao.x, 0, g.ao.width, g.ao.height);
                }
                if (g.ao.bottom > b) {
                    g.ao = new Rect(0, g.ao.x, b - g.ao.height, g.ao.width, g.ao.height);
                }
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_g && !_g.done && (_a = _f.return)) _a.call(_f);
            }
            finally { if (e_5) throw e_5.error; }
        }
        PieChartBase.fo(c);
        this.fg(c);
        PieChartBase.fo(d);
        this.fg(d);
        try {
            for (var _h = tslib_1.__values(fromEnum(e)), _j = _h.next(); !_j.done; _j = _h.next()) {
                var s = _j.value;
                this.as.bk(s, s.ao.x, s.ao.y);
            }
        }
        catch (e_6_1) { e_6 = { error: e_6_1 }; }
        finally {
            try {
                if (_j && !_j.done && (_b = _h.return)) _b.call(_h);
            }
            finally { if (e_6) throw e_6.error; }
        }
        try {
            for (var _k = tslib_1.__values(fromEnum(f)), _l = _k.next(); !_l.done; _l = _k.next()) {
                var t = _l.value;
                this.as.bk(t, t.ao.x, t.ao.y);
            }
        }
        catch (e_7_1) { e_7 = { error: e_7_1 }; }
        finally {
            try {
                if (_l && !_l.done && (_c = _k.return)) _c.call(_k);
            }
            finally { if (e_7) throw e_7.error; }
        }
        try {
            for (var _m = tslib_1.__values(fromEnum(c)), _o = _m.next(); !_o.done; _o = _m.next()) {
                var u = _o.value;
                this.as.bk(u, u.ao.x, u.ao.y);
                if (u.ah.ai.ap == 0) {
                    u.am();
                }
                else {
                    u.an();
                }
            }
        }
        catch (e_8_1) { e_8 = { error: e_8_1 }; }
        finally {
            try {
                if (_o && !_o.done && (_d = _m.return)) _d.call(_m);
            }
            finally { if (e_8) throw e_8.error; }
        }
        try {
            for (var _p = tslib_1.__values(fromEnum(d)), _q = _p.next(); !_q.done; _q = _p.next()) {
                var v = _q.value;
                this.as.bk(v, v.ao.x, v.ao.y);
                if (v.ah.ai.ap == 0) {
                    v.am();
                }
                else {
                    v.an();
                }
            }
        }
        catch (e_9_1) { e_9 = { error: e_9_1 }; }
        finally {
            try {
                if (_q && !_q.done && (_e = _p.return)) _e.call(_p);
            }
            finally { if (e_9) throw e_9.error; }
        }
        this.as.bp();
    };
    PieChartBase.ci = function (a, b, c) {
        var d = c.ai * Math.PI / 180;
        var e = 1;
        var f = GeometryUtil.k({ $type: Point_$type, x: 0, y: 0 }, c.ai, e);
        var g = PieChartBase.gz(c);
        var h = Math.sqrt(g.x * g.x + g.y * g.y);
        var i = { $type: Point_$type, x: g.x / h, y: g.y / h };
        var j = PieChartBase.cj(f, i);
        var k = h / b;
        var l = j * k;
        var m = l;
        var n = GeometryUtil.e({ $type: Point_$type, x: 0, y: 0 }, f);
        var o = GeometryUtil.e({ $type: Point_$type, x: 0, y: 0 }, i);
        if (o < n) {
            m = -m;
        }
        var p = GeometryUtil.k(a, (d + m) * 180 / Math.PI, b);
        var q = PieChartBase.gy(c, p);
        var r = Math.sqrt((q.x - a.x) * (q.x - a.x) + (q.y - a.y) * (q.y - a.y));
        var s = r - 5;
        return s;
    };
    PieChartBase.gy = function (a, b) {
        var c = GeometryUtil.g(a.ai);
        var d = a.ao.width / 2;
        var e = a.ao.height / 2;
        if (c >= 0 && c <= 90) {
            return { $type: Point_$type, x: b.x - d, y: b.y - e };
        }
        if (c >= 90 && c <= 180) {
            return { $type: Point_$type, x: b.x + d, y: b.y - e };
        }
        if (c >= 180 && c <= 270) {
            return { $type: Point_$type, x: b.x + d, y: b.y + e };
        }
        return { $type: Point_$type, x: b.x - d, y: b.y + e };
    };
    PieChartBase.cj = function (a, b) {
        var c = a.x * b.x + a.y * b.y;
        var d = Math.sqrt(a.x * a.x + a.y * a.y);
        var e = Math.sqrt(b.x * b.x + b.y * b.y);
        var f = Math.acos(c / (d * e));
        return f;
    };
    PieChartBase.gz = function (a) {
        var b = GeometryUtil.g(a.ai);
        var c = a.ao.width / 2;
        var d = a.ao.height / 2;
        if (b >= 0 && b <= 90) {
            return { $type: Point_$type, x: c, y: d };
        }
        if (b >= 90 && b <= 180) {
            return { $type: Point_$type, x: -c, y: d };
        }
        if (b >= 180 && b <= 270) {
            return { $type: Point_$type, x: -c, y: -d };
        }
        return { $type: Point_$type, x: c, y: -d };
    };
    PieChartBase.prototype.fe = function () {
        var e_10, _a;
        var _this = this;
        if (this.legend == null || !this.legend.isItemwise) {
            return;
        }
        if ((this.ba == null || this.ba.count == 0) && (this.bb == null || this.bb.count == 0)) {
            this.legend.clearLegendItemsForSeries(this);
            return;
        }
        this.bz = new List$1(UIElement.$, 0);
        var _loop_2 = function (a) {
            var b = new ContentControl();
            var c = this_2.cy(a);
            var d = this_2.as.br(a);
            var e = this_2.as.bs(a);
            b.content = ((function () {
                var $ret = new PieSliceDataContext();
                $ret.series = _this;
                $ret.slice = a;
                $ret.item = a.dataContext;
                $ret.itemBrush = d;
                $ret.outline = e;
                $ret.thickness = a.a4;
                $ret.itemLabel = c != null ? c.toString() : null;
                $ret.legendLabel = a.isOthersSlice ? _this.dz : a.bf != null ? a.bf : (c != null ? c.toString() : null);
                $ret.percentValue = _this.ck(a);
                $ret.isOthersSlice = a.isOthersSlice;
                return $ret;
            })());
            var f = b.content;
            if (this_2.bt()) {
                var g = this_2.au(b.content);
                if (g != null) {
                    f.legendLabel = g.toString();
                }
            }
            if (this_2.legendItemTemplate != null) {
                b.ah = this_2.legendItemTemplate;
            }
            this_2.bz.add(b);
        };
        var this_2 = this;
        try {
            for (var _b = tslib_1.__values(fromEnum(this.bg.a)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var a = _c.value;
                _loop_2(a);
            }
        }
        catch (e_10_1) { e_10 = { error: e_10_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_10) throw e_10.error; }
        }
        if (this.legend.isItemwise) {
            var h = this.legend;
            h.createItemwiseLegendItems(this.bz, this);
        }
    };
    PieChartBase.prototype.a4 = function () {
        var a = new PieChartVisualData();
        a.viewport = RectData.b(this.g3);
        this.as.an(a);
        for (var b = 0; b < this.bg.count; b++) {
            var c = this.bg.item(b).am();
            a.slices.add(c);
            if (this.bg.item(b).isOthersSlice) {
                a.othersSlice = this.bg.item(b).am();
            }
        }
        a.others = this.b0;
        a.name = this.name;
        a.radiusFactor = this.ce;
        a.leaderLineMargin = this.cn;
        return a;
    };
    PieChartBase.prototype.c8 = function () {
        var a = this.a4();
        a.scaleByViewport();
        return a.serialize();
    };
    PieChartBase.prototype.bc = function (a) {
        var b = null;
        return this.a5.registerColumn(a, b, false);
    };
    PieChartBase.prototype.bd = function (a) {
        var b = null;
        return this.a5.registerColumnObject(a, b, false);
    };
    PieChartBase.prototype.e8 = function (a, b, c, d) {
        var e_11, _a;
        switch (b) {
            case PieChartBase.$$p[8]:
                this.a5 = ((function () {
                    var $ret = new FastItemsSource();
                    $ret.e = d;
                    return $ret;
                })());
                break;
            case PieChartBase.$$p[4]:
                if (typeCast(FastItemsSource.$, c) != null) {
                    var e = c;
                    e.event = delegateRemove(e.event, this.cv);
                    this.bj = false;
                    c.deregisterColumn(this.be);
                    c.deregisterColumn(this.ba);
                    this.be = null;
                    this.ba = null;
                    this.selectedItem = null;
                    this.selectedItems.clear();
                    if (this.selectedSlices != null) {
                        this.selectedSlices.clear();
                    }
                    (typeCast(FastItemsSource.$, c)).deregisterColumn(this.bb);
                    this.bb = null;
                }
                if (typeCast(FastItemsSource.$, d) != null) {
                    var f = d;
                    f.event = delegateCombine(f.event, this.cv);
                    this.bj = true;
                    this.be = this.bc(this.eg);
                    this.ba = this.bd(this.di);
                    this.bb = this.bd(this.dv);
                    this.e7();
                    if (this.selectedItem != null || this.selectedItems.count > 0) {
                        this.fq();
                    }
                    else if (this.selectedSlices != null && this.selectedSlices.count > 0) {
                        this.fr();
                    }
                }
                this.fc();
                break;
            case PieChartBase.$$p[34]:
                if (this.a5 != null) {
                    this.a5.deregisterColumn(this.be);
                    this.be = this.bc(this.eg);
                }
                break;
            case PieChartBase.$$p[20]:
                if (this.a5 != null) {
                    this.a5.deregisterColumn(this.bb);
                    this.bb = this.bd(this.dv);
                    this.e6();
                    this.fd();
                    this.fe();
                }
                break;
            case PieChartBase.$$p[6]:
                this.fe();
                break;
            case PieChartBase.$$p[5]:
            case PieChartBase.$$p[11]:
                if (this.a5 != null) {
                    this.a5.deregisterColumn(this.ba);
                    this.ba = this.bd(this.di);
                    this.e6();
                    this.fd();
                    this.fe();
                }
                break;
            case PieChartBase.$$p[30]:
                this.cf = d;
                this.e7();
                this.e6();
                this.ff();
                this.fd();
                break;
            case PieChartBase.$$p[32]:
                this.as.bn(this.c0);
                break;
            case PieChartBase.$$p[21]:
                var g = typeCast(IChartLegend_$type, c);
                if (g != null) {
                    g.clearLegendItemsForSeries(this);
                }
                this.fe();
                break;
            case PieChartBase.$$p[18]:
            case PieChartBase.$$p[19]:
                this.fe();
                break;
            case PieChartBase.$$p[27]:
            case PieChartBase.$$p[3]:
            case PieChartBase.$$p[31]:
                this.e7();
                this.e6();
                this.ff();
                this.fd();
                break;
            case PieChartBase.$$p[22]:
            case PieChartBase.$$p[28]:
                this.ff();
                this.fe();
                break;
            case PieChartBase.$$p[2]:
                if (c != null) {
                    var h = c;
                    h.collectionChanged = delegateRemove(h.collectionChanged, this.b5);
                    this.bh = false;
                }
                if (d != null) {
                    var i = d;
                    i.collectionChanged = delegateCombine(i.collectionChanged, this.b5);
                    this.bh = true;
                }
                this.ff();
                this.fe();
                break;
            case PieChartBase.$$p[26]:
                if (c != null) {
                    var j = c;
                    j.collectionChanged = delegateRemove(j.collectionChanged, this.b5);
                    this.bk = false;
                }
                if (d != null) {
                    var k = d;
                    k.collectionChanged = delegateCombine(k.collectionChanged, this.b5);
                    this.bk = true;
                }
                this.ff();
                this.fe();
                break;
            case "ValueColumn":
            case PieChartBase.$$p[24]:
            case PieChartBase.$$p[25]:
                this.fc();
                this.fq();
                this.fr();
                break;
            case PieChartBase.$$p[0]:
            case PieChartBase.$$p[1]:
                this.fc();
                break;
            case PieChartBase.$$p[13]:
                this.e6();
                this.fd();
                this.as.bp();
                break;
            case PieChartBase.$$p[10]:
            case PieChartBase.$$p[12]:
            case PieChartBase.$$p[9]:
                this.e6();
                this.fd();
                break;
            case PieChartBase.$$p[23]:
                this.e6();
                this.fd();
                this.fe();
                break;
            case PieChartBase.$$p[17]:
                this.fd();
                break;
            case PieChartBase.$$p[15]:
                this.fd();
                break;
            case "TextStyle":
                this.as.bf();
                break;
            case "PixelScalingRatio":
                if (isNaN_(DeviceUtils.a(this.cq))) {
                    this.cd = 1;
                }
                else {
                    this.cd = DeviceUtils.a(this.cq);
                }
                break;
            case "ActualPixelScalingRatio":
                this.as.a1();
                break;
            case "LabelTemplate":
                this.e6();
                this.fd();
                break;
            case PieChartBase.$$p[16]:
            case PieChartBase.$$p[14]:
                this.bf.c(runOn(this.as, this.as.bj));
                this.fd();
                break;
            case PieChartBase.$$p[7]:
                this.as.a0();
                break;
            case "InnerExtent":
                this.fc();
                break;
            case "SelectedItem":
                if (!this.bn) {
                    this.e7();
                    this.ff();
                    this.fe();
                }
                break;
            case PieChartBase.$$p[29]:
                if (EnumUtil.getEnumValue(SliceSelectionMode_$type, d) == 1 && this.selectedItems != null && this.selectedItems.count > 1) {
                    this.selectedItems.clear();
                }
                else if (EnumUtil.getEnumValue(SliceSelectionMode_$type, d) == 2 && this.selectedItem != null && this.selectedItems != null) {
                    if (!this.selectedItems.contains1(this.selectedItem)) {
                        if (typeCast(PieSliceOthersContext.$, this.selectedItem) !== null) {
                            var l = typeCast(PieSliceOthersContext.$, this.selectedItem);
                            try {
                                for (var _b = tslib_1.__values(fromEn(l.data)), _c = _b.next(); !_c.done; _c = _b.next()) {
                                    var m = _c.value;
                                    this.selectedItems.add1(m);
                                }
                            }
                            catch (e_11_1) { e_11 = { error: e_11_1 }; }
                            finally {
                                try {
                                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                                }
                                finally { if (e_11) throw e_11.error; }
                            }
                        }
                        else {
                            this.selectedItems.add1(this.selectedItem);
                        }
                        this.fr();
                    }
                }
                this.fq();
                this.e7();
                this.ff();
                break;
        }
    };
    PieChartBase.prototype.fh = function (a) {
        if (this.bo) {
            return;
        }
        this.fr();
        if (this.bq) {
            this.e7();
            this.ff();
            this.fe();
        }
    };
    PieChartBase.prototype.e0 = function (a) {
        if (a.action == 4 && a.newItems == null && a.oldItems == null) {
            return;
        }
        if (this.bn) {
            return;
        }
        this.fq();
        if (this.bq) {
            this.e7();
            this.ff();
            this.fe();
        }
        this.ez(this, new SelectedItemsChangedEventArgs(a.oldItems, a.newItems));
    };
    PieChartBase.prototype.fa = function (a, b, c) {
        if (this.propertyChanged != null) {
            this.propertyChanged(this, new PropertyChangedEventArgs(a));
        }
        if (this.propertyUpdated != null) {
            this.propertyUpdated(this, new PropertyUpdatedEventArgs(a, b, c));
        }
    };
    PieChartBase.prototype.fr = function () {
        var e_12, _a, e_13, _b;
        if (this.itemsSource == null || this.bg.a.count == 0) {
            return;
        }
        this.bn = true;
        var a = this.selectedSlices.count;
        if (a == 0) {
            if (this.selectedItems.count > 0) {
                this.selectedItems.clear();
            }
            if (this.selectedItem != null) {
                this.selectedItem = null;
            }
        }
        if (this.a3 == 1) {
            if (a != 0) {
                var b_1 = this.bg.a._inner[this.selectedSlices._inner[a - 1]];
                if (b_1.isOthersSlice) {
                    this.selectedItem = ((function () {
                        var $ret = new PieSliceOthersContext();
                        $ret.data = typeCast(IList_$type, b_1.dataContext);
                        $ret.slice = b_1;
                        return $ret;
                    })());
                }
                else {
                    this.selectedItem = b_1.dataContext;
                }
            }
        }
        else if (this.a3 == 2) {
            if (a != 0) {
                this.selectedItems.clear();
                try {
                    for (var _c = tslib_1.__values(fromEnum(this.selectedSlices)), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var c = _d.value;
                        var d = this.bg.a._inner[c];
                        if (d.isOthersSlice) {
                            var e = typeCast(IEnumerable_$type, d.dataContext);
                            try {
                                for (var _e = (e_13 = void 0, tslib_1.__values(fromEn(e))), _f = _e.next(); !_f.done; _f = _e.next()) {
                                    var f = _f.value;
                                    this.av.e(f);
                                }
                            }
                            catch (e_13_1) { e_13 = { error: e_13_1 }; }
                            finally {
                                try {
                                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                                }
                                finally { if (e_13) throw e_13.error; }
                            }
                        }
                        else {
                            this.av.e(d.dataContext);
                        }
                    }
                }
                catch (e_12_1) { e_12 = { error: e_12_1 }; }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                    }
                    finally { if (e_12) throw e_12.error; }
                }
                this.selectedItem = this.bg.a._inner[this.selectedSlices._inner[a - 1]].dataContext;
            }
        }
        this.bn = false;
    };
    PieChartBase.prototype.fq = function () {
        var e_14, _a;
        if (this.itemsSource == null || this.bg.a.count == 0) {
            return;
        }
        this.bo = true;
        this.selectedSlices.clear();
        try {
            for (var _b = tslib_1.__values(fromEnum(this.bg.a)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var a = _c.value;
                if (this.av.d(a)) {
                    this.selectedSlices.add(a.a5);
                }
            }
        }
        catch (e_14_1) { e_14 = { error: e_14_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_14) throw e_14.error; }
        }
        this.bo = false;
    };
    PieChartBase.prototype.fm = function (a, b) {
        this.fn(a, b, false);
    };
    PieChartBase.prototype.fn = function (a, b, c) {
        if (this.bq) {
            if (this.a3 == 1) {
                this.av.k(a);
            }
            else if (this.a3 == 2) {
                this.av.i(a);
            }
        }
        var d = new SliceClickEventArgs(a, this.as.ae(b));
        this.e3(this, d);
        if (!c) {
            this.as.bl(a, b);
        }
    };
    PieChartBase.prototype.fl = function (a) {
        this.as.ak(a);
    };
    PieChartBase.prototype.bw = function (a, b) {
        var c = new LabelClickEventArgs(a, this.as.ae(b));
        this.ew(this, c);
        return c.allowSliceClick;
    };
    PieChartBase.prototype.em = function (a, b) {
        this.as.bl(a, b);
    };
    PieChartBase.prototype.ep = function (a, b, c) {
        this.as.bl(a, b);
    };
    PieChartBase.prototype.eo = function (a, b) {
        this.ep(a, b, false);
    };
    PieChartBase.prototype.en = function (a, b) {
        this.as.al();
    };
    PieChartBase.prototype.e2 = function () {
        this.fc();
    };
    PieChartBase.prototype.provideContainer = function (a) {
        this.as.ax(a);
    };
    PieChartBase.prototype.ev = function (a, b) {
        this.as.ay(a, b);
    };
    PieChartBase.prototype.notifyContainerResized = function () {
        this.as.aw();
    };
    PieChartBase.prototype.g1 = function () {
        return this.as.by();
    };
    PieChartBase.prototype.g0 = function () {
        return this.as.bv();
    };
    PieChartBase.prototype.destroy = function () {
        this.fb();
        this.as.ax(null);
    };
    PieChartBase.prototype.el = function () {
        this.as.ao();
    };
    Object.defineProperty(PieChartBase.prototype, "eb", {
        get: function () {
            return this.c1;
        },
        set: function (a) {
            var b = this.c1;
            this.c1 = a;
            this.fa("TextStyle", b, a);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieChartBase.prototype, "container", {
        get: function () {
            return this;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieChartBase.prototype, "isStacked", {
        get: function () {
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieChartBase.prototype, "isVertical", {
        get: function () {
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieChartBase.prototype, "hasMarkers", {
        get: function () {
            return false;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieChartBase.prototype, "isUsableInLegend", {
        get: function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieChartBase.prototype, "hasSubItems", {
        get: function () {
            return false;
        },
        enumerable: true,
        configurable: true
    });
    PieChartBase.prototype.ck = function (a) {
        if (a == null || this.be == null || this.b2 == null) {
            return NaN;
        }
        if (a.isOthersSlice) {
            return this.cp / this.cu * 100;
        }
        else {
            return this.be.item(this.b2._inner[a.a5]) / this.cu * 100;
        }
    };
    PieChartBase.prototype.eu = function (source_, a, b, c) {
        if (source_.dataView && source_.dataSource) {
            source_ = source_.dataView();
        }
        ;
        if (!this.bx(source_)) {
            return;
        }
        var d = this.a5;
        if (d == null) {
            return;
        }
        d.handleCollectionChanged(new NotifyCollectionChangedEventArgs(2, 2, c, b, a));
    };
    PieChartBase.prototype.eq = function (source_) {
        if (source_.dataView && source_.dataSource) {
            source_ = source_.dataView();
        }
        ;
        if (!this.bx(source_)) {
            return;
        }
        var a = this.a5;
        a.handleCollectionChanged(new NotifyCollectionChangedEventArgs(0, 4));
    };
    PieChartBase.prototype.bx = function (a) {
        return PieChartBase.by(a, this.itemsSource);
    };
    PieChartBase.by = function (a, b) {
        return a == b;
    };
    PieChartBase.prototype.es = function (source_, a, b) {
        if (source_.dataView && source_.dataSource) {
            source_ = source_.dataView();
        }
        ;
        if (!this.bx(source_)) {
            return;
        }
        var c = this.a5;
        if (c == null) {
            return;
        }
        c.handleCollectionChanged(new NotifyCollectionChangedEventArgs(1, 0, b, a));
    };
    PieChartBase.prototype.et = function (source_, a, b) {
        if (source_.dataView && source_.dataSource) {
            source_ = source_.dataView();
        }
        ;
        if (!this.bx(source_)) {
            return;
        }
        var c = this.a5;
        if (c == null) {
            return;
        }
        c.handleCollectionChanged(new NotifyCollectionChangedEventArgs(1, 1, b, a));
    };
    PieChartBase.prototype.fk = function (source_) {
        if (source_.dataView && source_.dataSource) {
            source_ = source_.dataView();
        }
        ;
        this.itemsSource = source_;
    };
    PieChartBase.prototype.fb = function () {
        this.itemsSource = null;
    };
    PieChartBase.prototype.fp = function () {
        this.as.bf();
    };
    PieChartBase.prototype.a6 = function () {
        return FontUtil.toFontInfo(this.as.c.o, this.eb);
    };
    PieChartBase.prototype.resolveLegendIndex = function () {
        return -1;
    };
    PieChartBase.prototype.forSubItems = function (a) {
    };
    PieChartBase.$t = markType(PieChartBase, 'PieChartBase', Control.$, [INotifyPropertyChanged_$type, ILegendOwner_$type, ILegendSeries_$type, ILegendTemplateProvider_$type]);
    PieChartBase.f0 = DependencyProperty.i("InnerExtent", Number_$type, PieChartBase.$, new PropertyMetadata(2, 0, function (a, b) { return a.fa("InnerExtent", b.oldValue, b.newValue); }));
    PieChartBase.f8 = DependencyProperty.i("LabelTemplate", DataTemplate.$, PieChartBase.$, new PropertyMetadata(2, null, function (a, b) { return a.fa("LabelTemplate", b.oldValue, b.newValue); }));
    PieChartBase.gn = DependencyProperty.i("SelectedItem", Base.$, PieChartBase.$, new PropertyMetadata(1, function (a, b) {
        var c = typeCast(PieChartBase.$, a);
        if (c.bm) {
            return;
        }
        var d = new SelectedItemChangingEventArgs(b.oldValue, b.newValue);
        c.ey(c, d);
        if (!d.cancel) {
            if (!c.bn) {
                c.fq();
            }
            c.fa("SelectedItem", b.oldValue, b.newValue);
            c.ex(a, new SelectedItemChangedEventArgs(b.oldValue, b.newValue));
        }
        else {
            c.bm = true;
            c.selectedItem = b.oldValue;
            c.bm = false;
        }
    }));
    return PieChartBase;
}(Control));
export { PieChartBase };
Type.dep(DependencyProperty, PropertyMetadata, PieChartBase, 'fa', ['AllowSliceExplosion:bp:ft', [0, true], 'AllowSliceSelection:bq:fu', [0, true], 'Brushes:ag:fv', [BrushCollection.$, null], 'ExplodedRadius:cg:fw', [1, 0.2], 'FastItemsSource:a5:fx', [FastItemsSource.$], 'FormatLabel:at:fy', [Delegate_$type], 'FormatLegendLabel:au:fz', [Delegate_$type], 'IsSurfaceInteractionDisabled:bv:f1', [0, false], 'ItemsSource::f2', [IEnumerable_$type, null], 'LabelExtent:cm:f3', [1, 10], 'LabelInnerColor:gv:f4', [Brush.$, null], 'LabelMemberPath:di:f5', [2], 'LabelOuterColor:gw:f6', [Brush.$, null], 'LabelsPosition:ao:f7', [LabelsPosition_$type, enumGetBox(LabelsPosition_$type, 1)], 'LeaderLineMargin:cn:f9', [1, 6], 'LeaderLineStyle:g4:ga', [Style.$, null], 'LeaderLineType:ap:gb', [LeaderLineType_$type, enumGetBox(LeaderLineType_$type, 0)], 'LeaderLineVisibility:g8:gc', [Visibility_$type, enumGetBox(Visibility_$type, 0)], 'LegendItemBadgeTemplate::gd', [DataTemplate.$, null], 'LegendItemTemplate::ge', [DataTemplate.$, null], 'LegendLabelMemberPath:dv:gf', [2], 'Legend::gg', [IChartLegend_$type, null], 'OthersCategoryStyle:g5:gh', [Style.$, null], 'OthersCategoryText:dz:gi', [2, "Others"], 'OthersCategoryThreshold:co:gj', [1, 3], 'OthersCategoryType:aq:gk', [OthersCategoryType_$type, enumGetBox(OthersCategoryType_$type, 1)], 'Outlines:ah:gl', [BrushCollection.$, null], 'RadiusFactor:cr:gm', [1, 0.9], 'SelectedStyle:g6:go', [Style.$, null], 'SelectionMode:a3:gp', [SliceSelectionMode_$type, enumGetBox(SliceSelectionMode_$type, 1)], 'StartAngle:ct:gq', [1, 0], 'SweepDirection:gx:gr', [SweepDirection_$type, enumGetBox(SweepDirection_$type, 1)], 'ToolTip:c0:gs', [4, null], 'ToolTipStyle:g7:gt', [Style.$, null], 'ValueMemberPath:eg:gu', [2, null]]);
/**
 * @hidden
 */
var PieChartSliceSelector = /** @class */ (function (_super) {
    tslib_1.__extends(PieChartSliceSelector, _super);
    function PieChartSliceSelector(a) {
        var _this = _super.call(this) || this;
        _this.a = null;
        _this.a = a;
        return _this;
    }
    PieChartSliceSelector.prototype.d = function (a) {
        var b = a.dataContext;
        if (this.a.a3 == 1) {
            if (a.isOthersSlice) {
                var c = typeCast(IList_$type, b);
                if (c != null && c.contains(this.a.selectedItem)) {
                    return true;
                }
                if (typeCast(PieSliceOthersContext.$, this.a.selectedItem) !== null) {
                    return true;
                }
            }
            if (b == this.a.selectedItem) {
                return true;
            }
        }
        else if (this.a.a3 == 2) {
            if (this.c(a)) {
                return true;
            }
        }
        else if (this.a.a3 == 0) {
            if (this.a.selectedSlices.contains(a.a5)) {
                return true;
            }
        }
        return false;
    };
    PieChartSliceSelector.prototype.c = function (a) {
        var e_15, _a;
        var b = a.dataContext;
        if (a.isOthersSlice) {
            try {
                for (var _b = tslib_1.__values(fromEn(b)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var c = _c.value;
                    if (this.a.selectedItems.contains1(c)) {
                        return true;
                    }
                }
            }
            catch (e_15_1) { e_15 = { error: e_15_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_15) throw e_15.error; }
            }
        }
        else {
            if (this.a.selectedItems.contains1(b)) {
                return true;
            }
        }
        return false;
    };
    PieChartSliceSelector.prototype.h = function (a) {
        var b = a.dataContext;
        if (!a.isOthersSlice) {
            if (this.a.selectedItem != b) {
                return b;
            }
            else {
                return null;
            }
        }
        else {
            if (typeCast(PieSliceOthersContext.$, this.a.selectedItem) !== null) {
                return null;
            }
            else {
                return ((function () {
                    var $ret = new PieSliceOthersContext();
                    $ret.data = typeCast(IList_$type, a.dataContext);
                    $ret.slice = a;
                    return $ret;
                })());
            }
        }
    };
    PieChartSliceSelector.prototype.f = function (a, b) {
        var c = false;
        if (b) {
            if (this.a.selectedItems.contains1(a)) {
                c = this.g(a);
            }
        }
        else {
            if (!this.a.selectedItems.contains1(a)) {
                c = this.b(a);
            }
            else {
                c = this.g(a);
            }
        }
        return c;
    };
    PieChartSliceSelector.prototype.e = function (a) {
        return this.f(a, false);
    };
    PieChartSliceSelector.prototype.g = function (a) {
        var b = new SelectedItemsChangingEventArgs(this.a.selectedItems, ((function () {
            var $ret = new List$1(Base.$, 0);
            return $ret;
        })()));
        this.a.e1(this, b);
        if (!b.cancel) {
            this.a.selectedItems.remove1(a);
        }
        return b.cancel;
    };
    PieChartSliceSelector.prototype.b = function (a) {
        var b = new SelectedItemsChangingEventArgs(this.a.selectedItems, ((function () {
            var $ret = new List$1(Base.$, 0);
            $ret.add1(a);
            return $ret;
        })()));
        this.a.e1(this, b);
        if (!b.cancel) {
            this.a.selectedItems.add1(a);
        }
        return b.cancel;
    };
    PieChartSliceSelector.prototype.k = function (a) {
        this.a.selectedItem = this.h(a);
    };
    PieChartSliceSelector.prototype.i = function (a) {
        var e_16, _a, e_17, _b;
        var b = new List$1(Base.$, 1, this.a.selectedItems);
        if (a.isOthersSlice) {
            var c = typeCast(IList_$type, a.dataContext);
            var d = 0;
            try {
                for (var _c = tslib_1.__values(fromEn(c)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var e = _d.value;
                    if (this.a.selectedItems.contains1(e)) {
                        d++;
                    }
                }
            }
            catch (e_16_1) { e_16 = { error: e_16_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_16) throw e_16.error; }
            }
            var f = d > 0 && d < c.count;
            try {
                for (var _e = tslib_1.__values(fromEn(c)), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var g = _f.value;
                    this.f(g, f);
                }
            }
            catch (e_17_1) { e_17 = { error: e_17_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_17) throw e_17.error; }
            }
            if (this.c(a)) {
                this.a.selectedItem = ((function () {
                    var $ret = new PieSliceOthersContext();
                    $ret.data = typeCast(IList_$type, a.dataContext);
                    $ret.slice = a;
                    return $ret;
                })());
            }
            else {
                this.a.selectedItem = this.a.selectedItems.count > 0 ? this.a.selectedItems._inner[this.a.selectedItems.count - 1] : null;
            }
        }
        else {
            this.e(a.dataContext);
            this.a.selectedItem = this.a.selectedItems.count > 0 ? this.a.selectedItems._inner[this.a.selectedItems.count - 1] : null;
        }
    };
    PieChartSliceSelector.prototype.j = function (a) {
        if (a != null) {
            a.av = true;
            a.isSelected = this.d(a);
            a.av = false;
        }
    };
    PieChartSliceSelector.$t = markType(PieChartSliceSelector, 'PieChartSliceSelector');
    return PieChartSliceSelector;
}(Base));
export { PieChartSliceSelector };
/**
 * @hidden
 */
var PieSliceOthersContext = /** @class */ (function (_super) {
    tslib_1.__extends(PieSliceOthersContext, _super);
    function PieSliceOthersContext() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._data = null;
        _this._slice = null;
        return _this;
    }
    Object.defineProperty(PieSliceOthersContext.prototype, "data", {
        get: function () {
            return this._data;
        },
        set: function (a) {
            this._data = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieSliceOthersContext.prototype, "slice", {
        get: function () {
            return this._slice;
        },
        set: function (a) {
            this._slice = a;
        },
        enumerable: true,
        configurable: true
    });
    PieSliceOthersContext.$t = markType(PieSliceOthersContext, 'PieSliceOthersContext');
    return PieSliceOthersContext;
}(Base));
export { PieSliceOthersContext };
/**
 * @hidden
 */
var Slice = /** @class */ (function (_super) {
    tslib_1.__extends(Slice, _super);
    function Slice() {
        var _this = _super.call(this) || this;
        _this.al = null;
        _this.b8 = null;
        _this.ai = null;
        _this.aj = null;
        _this.bf = null;
        _this.b9 = null;
        _this.b3 = null;
        _this.aq = false;
        _this.au = false;
        _this.av = false;
        _this.an = false;
        _this.b0 = null;
        _this.b1 = null;
        var a = _this.ak();
        _this.bl(a);
        a.b();
        _this.av = false;
        return _this;
    }
    Slice.prototype.ak = function () {
        return new SliceView(this);
    };
    Slice.prototype.bl = function (a) {
        this.al = a;
    };
    Object.defineProperty(Slice.prototype, "isSelected", {
        get: function () {
            return this.c(Slice.bv);
        },
        set: function (a) {
            this.h(Slice.bv, a);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Slice.prototype, "isExploded", {
        get: function () {
            return this.c(Slice.bt);
        },
        set: function (a) {
            this.h(Slice.bt, a);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Slice.prototype, "isOthersSlice", {
        get: function () {
            return this.c(Slice.bu);
        },
        set: function (a) {
            this.h(Slice.bu, a);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Slice.prototype, "b2", {
        get: function () {
            return this.c(Slice.bp);
        },
        set: function (a) {
            this.h(Slice.bp, a);
        },
        enumerable: true,
        configurable: true
    });
    Slice.prototype.ac = function () {
        _super.prototype.ac.call(this);
        this.al.c();
    };
    Slice.prototype.az = function () {
        var a = Math.abs(PieChartBase.cs(this.ax - this.a3)) == 360;
        if (a) {
            return this.a2;
        }
        return this.a2;
    };
    Slice.prototype.cb = function () {
        var a = (this.ai != null && this.ai.bp) ? true : false;
        var b = this.az();
        if (this.isExploded && a && this.ai.cx > 1) {
            var c = new Rect(0, this.b5.x - b, this.b5.y - b, b * 2, b * 2);
            return c;
        }
        return new Rect(0, this.b7.x - b, this.b7.y - b, b * 2, b * 2);
    };
    Slice.prototype.b6 = function () {
        if (this.isExploded && this.ai != null && this.ai.bp && this.ai.cx > 1) {
            if (this.aq) {
                return this.b3;
            }
            return this.b5;
        }
        return this.b7;
    };
    Object.defineProperty(Slice.prototype, "aw", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            var b = this.an;
            this.an = a;
            if (b && !this.an) {
                this.bk();
            }
        },
        enumerable: true,
        configurable: true
    });
    Slice.prototype.bk = function () {
        var _this = this;
        if (this.aw) {
            return;
        }
        var a = this.al.f();
        var b = this.ai.g3;
        if (isNaN_(this.a3) || isNaN_(this.ax) || isNaN_(this.a2) || isNaN_(this.ay) || this.a5 < 0 || this.ai == null || b.width == 0 || b.height == 0 || (this.b7.x == 0 && this.b7.y == 0) || (this.b5.x == 0 && this.b5.y == 0) || this.a3 == this.ax) {
            return;
        }
        this.b8 = this.cb();
        var c = GeometryUtil.d(this.b8);
        var d = this.b8.height / 2;
        var e = this.az();
        var f = RectUtil.l(this.b8);
        var g = Slice.b4(MathUtil.k(this.a3), c, f, d, 100);
        var h = Slice.b4(MathUtil.k(this.ax), c, f, d, 100);
        var i = Slice.b4(MathUtil.k(this.ax), c, f, this.a2, this.a0);
        var j = Slice.b4(MathUtil.k(this.a3), c, f, this.a2, this.a1);
        var k = Math.abs(PieChartBase.cs(this.ax - this.a3)) == 360;
        if (k) {
            if (this.a0 == 0) {
                var l = ((function () {
                    var $ret = new EllipseGeometry();
                    $ret.d = f;
                    $ret.b = _this.a2;
                    $ret.c = _this.a2;
                    return $ret;
                })());
                a.aj = l;
                return;
            }
            else if (this.a0 > 0) {
                var m_1 = new Size(1, this.a2, this.a2);
                var n_1 = new Size(1, this.a2 * this.a0 / 100, this.a2 * this.a0 / 100);
                var o_1 = ((function () {
                    var $ret = PointUtil.create();
                    $ret.x = f.x - _this.a2;
                    $ret.y = f.y;
                    return $ret;
                })());
                var p_1 = ((function () {
                    var $ret = PointUtil.create();
                    $ret.x = f.x + _this.a2;
                    $ret.y = f.y;
                    return $ret;
                })());
                var q_1 = ((function () {
                    var $ret = PointUtil.create();
                    $ret.x = f.x - _this.a2 * _this.a0 / 100;
                    $ret.y = f.y;
                    return $ret;
                })());
                var r_1 = ((function () {
                    var $ret = PointUtil.create();
                    $ret.x = f.x + _this.a2 * _this.a0 / 100;
                    $ret.y = f.y;
                    return $ret;
                })());
                var s_1 = ((function () {
                    var $ret = new PathFigure();
                    $ret.startPoint = o_1;
                    return $ret;
                })());
                var t = new PathSegmentCollection();
                var u = ((function () {
                    var $ret = new ArcSegment();
                    $ret.f = m_1;
                    $ret.d = 1;
                    $ret.e = p_1;
                    return $ret;
                })());
                t.add(u);
                s_1._segments = t;
                var v_1 = ((function () {
                    var $ret = new PathFigure();
                    $ret.startPoint = r_1;
                    return $ret;
                })());
                var w = new PathSegmentCollection();
                var x = ((function () {
                    var $ret = new ArcSegment();
                    $ret.f = n_1;
                    $ret.d = 0;
                    $ret.e = q_1;
                    return $ret;
                })());
                w.add(x);
                v_1._segments = w;
                var y_1 = ((function () {
                    var $ret = new PathFigure();
                    $ret.startPoint = o_1;
                    return $ret;
                })());
                var z = new PathSegmentCollection();
                var aa = ((function () {
                    var $ret = new ArcSegment();
                    $ret.f = m_1;
                    $ret.d = 0;
                    $ret.e = p_1;
                    return $ret;
                })());
                z.add(aa);
                y_1._segments = z;
                var ab_1 = ((function () {
                    var $ret = new PathFigure();
                    $ret.startPoint = r_1;
                    return $ret;
                })());
                var ac = new PathSegmentCollection();
                var ad = ((function () {
                    var $ret = new ArcSegment();
                    $ret.f = n_1;
                    $ret.d = 1;
                    $ret.e = q_1;
                    return $ret;
                })());
                ac.add(ad);
                ab_1._segments = ac;
                var ae_1 = ((function () {
                    var $ret = new PathFigureCollection();
                    $ret.add(s_1);
                    $ret.add(v_1);
                    $ret.add(y_1);
                    $ret.add(ab_1);
                    return $ret;
                })());
                var af = ((function () {
                    var $ret = new PathGeometry();
                    $ret.b = ae_1;
                    return $ret;
                })());
                var ag = new GeometryGroup();
                ag.c.add(af);
                a.aj = ag;
                return;
            }
            else {
                var ah = ((function () {
                    var $ret = new GeometryGroup();
                    $ret.b = 0;
                    return $ret;
                })());
                ah.c.add(((function () {
                    var $ret = new EllipseGeometry();
                    $ret.d = f;
                    $ret.b = _this.a2;
                    $ret.c = _this.a2;
                    return $ret;
                })()));
                ah.c.add(((function () {
                    var $ret = new EllipseGeometry();
                    $ret.d = f;
                    $ret.b = _this.a2 * _this.a0 / 100;
                    $ret.c = _this.a2 * _this.a0 / 100;
                    return $ret;
                })()));
                a.aj = ah;
                return;
            }
        }
        var ai = new PathGeometry();
        a.aj = ai;
        var aj = ((function () {
            var $ret = new PathFigure();
            $ret.isClosed = true;
            return $ret;
        })());
        ai.b = new PathFigureCollection();
        ai.b.add(aj);
        aj._startPoint = g;
        var ak = Math.abs(this.ax - this.a3) > 180;
        var al = new ArcSegment();
        al.e = h;
        al.f = new Size(1, this.b8.width / 2, this.b8.height / 2);
        al.b = ak;
        if (this.ax > this.a3) {
            al.d = 1;
        }
        else {
            al.d = 0;
        }
        aj._segments = new PathSegmentCollection();
        aj._segments.add(al);
        var am = new LineSegment(1);
        am.c = i;
        aj._segments.add(am);
        var an = Math.sqrt(Math.pow(i.x - h.x, 2) + Math.pow(i.y - h.y, 2));
        var ao = e - an;
        var ap = new ArcSegment();
        ap.e = j;
        if (ao < 0) {
            ao = 0.1;
        }
        ap.f = new Size(1, ao, ao);
        ap.b = al.b;
        ap.d = 0;
        aj._segments.add(ap);
        var aq = this.ca(a, g, h, this.a3, this.ax, f, e);
        var ar = true;
        if (ar && this.b8.height > 0 && this.b8.width > 0 && !b.containsRect(aq)) {
            var as = aq;
            var at = new Rect(0, 0, 0, b.width, b.height);
            at.intersect(as);
            var au = GeometryUtil.g((this.a3 + this.ax) / 2);
            var av = au / 180 * Math.PI;
            var aw = Math.abs((as.height - at.height) / Math.sin(av));
            var ax = Math.abs((as.width - at.width) / Math.cos(av));
            if (isNaN_(aw) || isInfinity(aw)) {
                aw = 0;
            }
            if (isNaN_(ax) || isInfinity(ax)) {
                ax = 0;
            }
            var ay = Math.max(aw, ax);
            var az = GeometryUtil.j(this.ai.g3.width, this.ai.g3.height, true, au, this.a2 * this.ai.cb - ay);
            this.al.d(az.x - this.b5.x, az.y - this.b5.y);
            this.aq = true;
            this.b3 = az;
            this.b9 = new Rect(0, as.x - (az.x - this.b5.x), as.y - (az.y - this.b5.y), as.width, as.height);
        }
        else {
            this.aq = false;
            this.al.e();
        }
    };
    Slice.prototype.ap = function (a) {
        var b = this.ai.g3;
        if (this._visibility == 1) {
            return false;
        }
        if (isNaN_(this.a3) || isNaN_(this.ax) || isNaN_(this.a2) || isNaN_(this.ay) || this.a5 < 0 || this.ai == null || b.width == 0 || b.height == 0 || (this.b7.x == 0 && this.b7.y == 0) || (this.b5.x == 0 && this.b5.y == 0)) {
            return false;
        }
        var c = this.az();
        var d = ((this.a0 / 100) * c);
        var e = c;
        var f = this.b7;
        if (this.isExploded && this.ai.bp && this.ai.cx > 1) {
            f = this.b5;
            if (this.aq) {
                f = this.b3;
            }
        }
        var g = d * d;
        var h = e * e;
        var i = Math.pow(a.x - f.x, 2) + Math.pow(a.y - f.y, 2);
        if (i < g || i > h) {
            return false;
        }
        var j = Math.atan2(a.y - f.y, a.x - f.x);
        j = j * 180 / Math.PI;
        return this.ao(j);
    };
    Slice.prototype.ao = function (a) {
        a = GeometryUtil.g(a);
        var b = Math.min(this.a3, this.ax);
        var c = Math.max(this.a3, this.ax);
        return (a > b && a < c) || (a - 360 > b && a - 360 < c) || (a + 360 > b && a + 360 < c);
    };
    Slice.prototype.ca = function (a, b, c, d, e, f, g) {
        var e_18, _a;
        var h = new List$1(Point_$type, 0);
        h.add(b);
        h.add(c);
        h.add(f);
        d = GeometryUtil.g(d);
        e = GeometryUtil.g(e);
        if ((0 > d && 0 < e) || (360 > d && 360 < e) || (e < d)) {
            h.add(GeometryUtil.k(f, 0, g));
        }
        if (90 > d && 90 < e) {
            h.add(GeometryUtil.k(f, 90, g));
        }
        if (180 > d && 180 < e) {
            h.add(GeometryUtil.k(f, 180, g));
        }
        if (270 > d && 270 < e) {
            h.add(GeometryUtil.k(f, 270, g));
        }
        var i = 1.7976931348623157E+308;
        var j = 1.7976931348623157E+308;
        var k = -1.7976931348623157E+308;
        var l = -1.7976931348623157E+308;
        try {
            for (var _b = tslib_1.__values(fromEnum(h)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var m = _c.value;
                i = Math.min(i, m.x);
                j = Math.min(j, m.y);
                k = Math.max(k, m.x);
                l = Math.max(l, m.y);
            }
        }
        catch (e_18_1) { e_18 = { error: e_18_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_18) throw e_18.error; }
        }
        return new Rect(0, i, j, k - i, l - j);
    };
    Slice.prototype.am = function () {
        var a = new PieSliceVisualData();
        a.appearance = new PrimitiveAppearanceData();
        a.labelAppearance = new LabelAppearanceData();
        a.leaderLineAppearance = new PrimitiveAppearanceData();
        a.startAngle = this.a3;
        a.endAngle = this.ax;
        a.explodedOrigin = PointData.b(this.b5);
        a.explodedRadius = this.ay;
        a.origin = PointData.b(this.b7);
        a.radius = this.az();
        a.index = this.a5;
        a.innerExtentEnd = this.a0;
        a.innerExtentStart = this.a1;
        a.isExploded = this.isExploded;
        a.isOthersSlice = this.isOthersSlice;
        a.isSelected = this.isSelected;
        if (this.aj != null) {
            a.labelAppearance.angle = this.aj.ai;
            a.labelBounds = RectData.b(this.aj.ao);
            a.labelAngle = this.aj.ai;
            if (typeCast(TextBlock.$, this.aj.aj) !== null) {
                var b = typeCast(TextBlock.$, this.aj.aj);
                a.label = b.ak;
                var c = null;
                a.labelAppearance.labelBrush = AppearanceHelper.b(b.am);
                a.labelAppearance.text = b.ak;
                if (this.ai != null) {
                    c = this.ai.a6();
                    if (c == null) {
                        c = this.ai.as.b.c;
                    }
                }
                a.labelAppearance = AppearanceHelper.c(b, c);
                a.labelAppearance.visibility = this.aj._visibility == 0;
            }
            else {
                a.label = this.aj.aj.toString();
            }
            if (this.aj.ap != null) {
                a.leaderLineAppearance.fill = AppearanceHelper.b(this.aj.ap._fill);
                a.leaderLineAppearance.opacity = this.aj.ap._opacity;
                a.leaderLineAppearance.stroke = AppearanceHelper.b(this.aj.ap._stroke);
                a.leaderLineAppearance.strokeThickness = this.aj.ap.ac;
                a.leaderLineAppearance.isVisible = this.aj.ap._visibility == 0;
                a.leaderLinePath = new PathVisualData(2, "leaderLine", this.aj.ap);
            }
            else if (this.aj.aq != null) {
                a.leaderLineAppearance.fill = AppearanceHelper.b(this.aj.aq._fill);
                a.leaderLineAppearance.opacity = this.aj.aq._opacity;
                a.leaderLineAppearance.stroke = AppearanceHelper.b(this.aj.aq._stroke);
                a.leaderLineAppearance.strokeThickness = this.aj.aq.ac;
                a.leaderLineAppearance.isVisible = this.aj.aq._visibility == 0;
                a.leaderLinePath = new PathVisualData(1, "leaderLine", this.aj.aq);
            }
        }
        if (this.al != null) {
            var d = this.al.f();
            a.slicePath = new PathVisualData(1, "slicePath", d);
            a.appearance.fill = AppearanceHelper.b(d._fill);
            a.appearance.opacity = d._opacity;
            a.appearance.stroke = AppearanceHelper.b(d._stroke);
            a.appearance.strokeThickness = d.ac;
            a.appearance.isVisible = d._visibility == 0;
        }
        return a;
    };
    Slice.b4 = function (a, b, c, d, e) {
        if (d == 0) {
            return c;
        }
        var f = Math.cos(a);
        var g = Math.sin(a);
        var h = Math.sqrt(d * d / (1 - (b * Math.pow(f, 2))));
        h *= (e / 100);
        return { $type: Point_$type, x: h * f + c.x, y: h * g + c.y };
    };
    Slice.$t = markType(Slice, 'Slice', ContentControl.$);
    Slice.bv = DependencyProperty.i("IsSelected", Boolean_$type, Slice.$, new PropertyMetadata(2, false, function (a, b) {
        var c = typeCast(Slice.$, a);
        if (!c.av) {
            var d = b.newValue;
            if (c.ai != null) {
                c.ai.fi(c, d);
            }
        }
    }));
    Slice.bt = DependencyProperty.i("IsExploded", Boolean_$type, Slice.$, new PropertyMetadata(2, false, function (a, b) {
        var c = typeCast(Slice.$, a);
        var d = b.newValue;
        if (c.ai != null) {
            c.ai.ek(c, d);
        }
    }));
    Slice.bu = DependencyProperty.i("IsOtherSlice", Boolean_$type, Slice.$, new PropertyMetadata(2, false, function (a, b) { return a.bk(); }));
    Slice.bp = DependencyProperty.i("Foreground", Brush.$, Slice.$, new PropertyMetadata(1, null));
    return Slice;
}(ContentControl));
export { Slice };
Type.dep(DependencyProperty, PropertyMetadata, Slice, 'bk', ['EndAngle:ax:bm', [1, 0], 'ExplodedOrigin:b5:bn', [Point_$type, PointUtil.create()], 'ExplodedRadius:ay:bo', [1, 0], 'Index:a5:bq', [1, -1], 'InnerExtentEnd:a0:br', [1, 0], 'InnerExtentStart:a1:bs', [1, 0], 'Origin:b7:bw', [Point_$type, PointUtil.create()], 'Radius:a2:bx', [1, 0], 'StartAngle:a3:by', [1, 0], 'StrokeThickness:a4:bz', [1, 1]]);
/**
 * @hidden
 */
var PieChartBaseView = /** @class */ (function (_super) {
    tslib_1.__extends(PieChartBaseView, _super);
    function PieChartBaseView(a) {
        var _this = _super.call(this) || this;
        _this.a = null;
        _this.bq = null;
        _this.b = null;
        _this.h = null;
        _this.j = null;
        _this.i = null;
        _this.k = null;
        _this.c = null;
        _this.b0 = null;
        _this.l = false;
        _this.bx = Rect.empty;
        _this.f = null;
        _this.u = null;
        _this.t = null;
        _this.v = 0;
        _this.bw = null;
        _this.ag = null;
        _this.s = false;
        _this.e = null;
        _this.a = a;
        _this.c = new PieChartViewManager(_this);
        return _this;
    }
    PieChartBaseView.prototype.az = function () {
        this.e = new PieSliceDataContext();
        this.e.series = this.a;
        this.b0 = Rect.empty;
        this.u = new List$1(Slice.$, 0);
        this.t = new List$1(PieLabel.$, 0);
        this.a.legendItemTemplate = ((function () {
            var $ret = new DataTemplate();
            $ret.render = PieLegendTemplates.f;
            $ret.measure = PieLegendTemplates.a;
            return $ret;
        })());
        this.a.legendItemBadgeTemplate = ((function () {
            var $ret = new DataTemplate();
            $ret.render = PieLegendTemplates.e;
            $ret.measure = PieLegendTemplates.d;
            return $ret;
        })());
        this.c.aa();
    };
    PieChartBaseView.prototype.a9 = function () {
        var a = this.c.b();
        if (this.a.ag == null) {
            this.a.ag = a.a;
        }
        if (this.a.ah == null) {
            this.a.ah = a.b;
        }
        if (this.a.g6 == null) {
            this.a.g6 = ((function () {
                var $ret = new Style();
                $ret.fill = a.h != null ? a.h.color.colorString : null;
                $ret.stroke = a.i != null ? a.i.color.colorString : null;
                $ret.strokeThickness = a.e;
                $ret.opacity = a.d;
                return $ret;
            })());
        }
        this.b = a;
        if (this.a.eb != null) {
            this.b.c = this.a.a6();
        }
    };
    PieChartBaseView.prototype.ax = function (a) {
        if (a == null) {
            this.l = false;
            this.c.ac(null);
            this.h = null;
            this.j = null;
            this.i = null;
            this.k = null;
            return;
        }
        this.c.ac(a);
        this.h = this.c.e;
        this.j = this.c.g;
        this.i = this.c.f;
        this.k = this.c.h;
    };
    PieChartBaseView.prototype.by = function () {
        return this.b0;
    };
    PieChartBaseView.prototype.bv = function () {
        return this.c.am();
    };
    PieChartBaseView.prototype.a8 = function () {
        this.b0 = this.c.an();
        this.a.e2();
    };
    PieChartBaseView.prototype.av = function () {
        if (!this.l) {
            this.l = true;
            this.c.ag(runOn(this, this.bg));
        }
    };
    PieChartBaseView.prototype.bg = function () {
        if (this.l) {
            this.l = false;
            this.a3();
        }
    };
    PieChartBaseView.prototype.a3 = function () {
        this.am();
        this.c.x(this.b0.width, this.b0.height);
        if (this.k != null && this.k.d) {
            if (this.a.cd != 1) {
                this.k.z();
                this.k.aa(this.a.cd, this.a.cd);
            }
            if (!this.bx.isEmpty) {
                this.k.k(this.bx.left, this.bx.top, this.bx.width, this.bx.height);
            }
        }
        if (this.i != null && this.i.d) {
            if (this.a.cd != 1) {
                this.i.z();
                this.i.aa(this.a.cd, this.a.cd);
            }
            if (!this.bx.isEmpty) {
                this.i.k(this.bx.left, this.bx.top, this.bx.width, this.bx.height);
            }
        }
        if (this.j != null && this.j.d) {
            if (this.a.cd != 1) {
                this.j.z();
                this.j.aa(this.a.cd, this.a.cd);
            }
            if (!this.bx.isEmpty) {
                this.j.k(this.bx.left, this.bx.top, this.bx.width, this.bx.height);
            }
        }
        if (this.h != null && this.h.d) {
            if (this.a.cd != 1) {
                this.h.z();
                this.h.aa(this.a.cd, this.a.cd);
            }
            if (!this.bx.isEmpty) {
                this.h.k(this.bx.left, this.bx.top, this.bx.width, this.bx.height);
            }
        }
        this.a4();
        if (!this.bx.isEmpty && this.a.cd != 1) {
            if (this.k != null && this.k.d) {
                this.k.y();
            }
            if (this.i != null && this.i.d) {
                this.i.y();
            }
            if (this.j != null && this.j.d) {
                this.j.y();
            }
            if (this.h != null && this.h.d) {
                this.h.y();
            }
        }
    };
    PieChartBaseView.prototype.a4 = function () {
        var e_19, _a;
        this.bx = this.b0;
        if (this.j != null && this.j.d) {
            this.a7();
            this.a5();
        }
        if (this.i != null && this.i.d) {
            var a = this.b.c;
            if (this.a.eb != null) {
                a = this.a.a6();
            }
            this.i.ac(a);
            try {
                for (var _b = tslib_1.__values(fromEnum(this.t)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var b = _c.value;
                    if (b._visibility == 0) {
                        var c = b.aj;
                        if (c != null) {
                            {
                                if (b.ah.b2 == null) {
                                    if (b.ah.au) {
                                        c.am = this.b.f;
                                    }
                                    else {
                                        c.am = this.b.g;
                                    }
                                }
                                else {
                                    c.am = b.ah.b2;
                                }
                                this.i.w(c);
                            }
                        }
                        var d = b.ah.b0;
                        if (b.ah.y != null) {
                            var e = new Path();
                            this.j.i(e, b.ah.y);
                            if (e._fill != null) {
                                d = e._fill;
                            }
                        }
                        if (this.a.ap != 0 && b.aq != null) {
                            b.aq._stroke = d;
                            b.aq.ac = 1;
                            if (this.a.g4 != null) {
                                this.i.i(b.aq, this.a.g4);
                            }
                            this.i.s(b.aq);
                        }
                        if (this.a.ap == 0 && b.ap != null) {
                            b.ap._stroke = d;
                            b.ap.ac = 1;
                            if (this.a.g4 != null) {
                                this.i.i(b.ap, this.a.g4);
                            }
                            this.i.r(b.ap);
                        }
                    }
                }
            }
            catch (e_19_1) { e_19 = { error: e_19_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_19) throw e_19.error; }
            }
        }
    };
    PieChartBaseView.prototype.a6 = function (a) {
        if (a._visibility != 0) {
            return;
        }
        var b = a.al.f();
        this.c.ah(b);
        b.ac = 1;
        b._opacity = a._opacity;
        if (a.b0 != null) {
            b._fill = a.b0;
        }
        if (a.b1 != null) {
            b._stroke = a.b1;
        }
        if (a.y != null) {
            this.j.i(b, a.y);
        }
        if (b.j != null) {
            this.j.z();
            this.j.j(b.j);
        }
        var c = b._fill;
        var d = b._stroke;
        var e = this.m(a, b, this.j);
        this.j.s(b);
        if (e) {
            b._fill = c;
            b._stroke = d;
        }
        if (b.j != null) {
            this.j.y();
        }
    };
    PieChartBaseView.prototype.a7 = function () {
        var e_20, _a;
        try {
            for (var _b = tslib_1.__values(fromEnum(this.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var a = _c.value;
                if (!a.isSelected) {
                    this.a6(a);
                }
            }
        }
        catch (e_20_1) { e_20 = { error: e_20_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_20) throw e_20.error; }
        }
    };
    PieChartBaseView.prototype.a5 = function () {
        var e_21, _a;
        try {
            for (var _b = tslib_1.__values(fromEnum(this.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var a = _c.value;
                if (a.isSelected) {
                    this.a6(a);
                }
            }
        }
        catch (e_21_1) { e_21 = { error: e_21_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_21) throw e_21.error; }
        }
    };
    PieChartBaseView.prototype.m = function (a, b, c) {
        return false;
    };
    PieChartBaseView.prototype.aj = function (a, b, c) {
        var d = this.f;
        this.bh(a);
        if (this.f == null && d != null) {
            var e = ((function () {
                var $ret = new MouseEventArgs();
                $ret.position = a;
                return $ret;
            })());
            this.a.en(this.f, e);
        }
        else if (this.f != null) {
            var f = ((function () {
                var $ret = new MouseEventArgs();
                $ret.position = a;
                return $ret;
            })());
            this.a.eo(this.f, f);
        }
    };
    PieChartBaseView.prototype.ai = function (a) {
        var b = this.f;
        this.bh(a);
        var c = ((function () {
            var $ret = new MouseEventArgs();
            $ret.position = a;
            return $ret;
        })());
        this.a.en(b, c);
    };
    PieChartBaseView.prototype.ah = function (a) {
        this.bh(a);
    };
    PieChartBaseView.prototype.ak = function (a) {
        this.ap(a);
    };
    PieChartBaseView.prototype.ap = function (a) {
        var e_22, _a;
        var b = ((function () {
            var $ret = new MouseButtonEventArgs();
            $ret.position = a;
            return $ret;
        })());
        var c = true;
        var d = null;
        try {
            for (var _b = tslib_1.__values(fromEnum(this.t)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var e = _c.value;
                var f = e.ao.containsPoint(a);
                if (f) {
                    d = e;
                    c = this.a.bw(e.ah, b);
                    break;
                }
            }
        }
        catch (e_22_1) { e_22 = { error: e_22_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_22) throw e_22.error; }
        }
        this.bh(a);
        if (this.f == null && c && d != null) {
            this.a.fm(d.ah, b);
        }
        else if (this.f != null && c) {
            this.a.fm(this.f, b);
        }
    };
    PieChartBaseView.prototype.bh = function (a) {
        this.f = null;
        for (var b = 0; b < this.u.count; b++) {
            if (this.u._inner[b]._visibility == 0 && this.u._inner[b].ap(a)) {
                this.f = this.u._inner[b];
                break;
            }
        }
    };
    PieChartBaseView.prototype.n = function (a) {
        var e_23, _a;
        try {
            for (var _b = tslib_1.__values(fromEnum(this.t)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                var c = b.ao.containsPoint(a);
                if (c) {
                    return true;
                }
            }
        }
        catch (e_23_1) { e_23 = { error: e_23_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_23) throw e_23.error; }
        }
        return false;
    };
    PieChartBaseView.prototype.p = function (a) {
        for (var b = 0; b < this.u.count; b++) {
            if (this.u._inner[b]._visibility == 0 && this.u._inner[b].ap(a)) {
                return true;
            }
        }
        return false;
    };
    PieChartBaseView.prototype.o = function (a) {
        return this.n(a) || this.p(a);
    };
    PieChartBaseView.prototype.bb = function () {
        this.a.e2();
    };
    PieChartBaseView.prototype.al = function () {
        this.aq();
    };
    PieChartBaseView.prototype.bl = function (a, b) {
        var c = b;
        this.bm(c.position, a, b);
    };
    PieChartBaseView.prototype.g = function () {
        var a = new Slice();
        a.ai = this.a;
        this.u.add(a);
        return a;
    };
    PieChartBaseView.prototype.bc = function (a) {
        a._visibility = 0;
    };
    PieChartBaseView.prototype.be = function (a) {
        a._visibility = 1;
    };
    PieChartBaseView.prototype.bd = function (a) {
        a.ai = null;
        this.u.remove(a);
    };
    PieChartBaseView.prototype.d = function () {
        var a = new PieLabel();
        if (this.a.ap == 0) {
            a.ap = new Line();
        }
        else {
            a.aq = new Path();
            var b = new PathGeometry();
            b.b.add(new PathFigure());
            b.b._inner[0]._segments.add(new BezierSegment(0));
            a.aq.aj = b;
        }
        this.t.add(a);
        return a;
    };
    PieChartBaseView.prototype.ar = function (a) {
        a._visibility = 0;
    };
    PieChartBaseView.prototype.at = function (a) {
        a._visibility = 1;
    };
    PieChartBaseView.prototype.as = function (a) {
        this.t.remove(a);
    };
    PieChartBaseView.prototype.bj = function (a) {
        if ((this.a.ap != 0 && a.aq != null) || (this.a.ap == 0 && a.ap != null)) {
            return;
        }
        if (this.a.ap == 0) {
            a.aq = null;
            a.ap = new Line();
        }
        else {
            a.ap = null;
            a.aq = new Path();
            var b = new PathGeometry();
            var c = new PathFigure();
            c._startPoint = { $type: Point_$type, x: NaN, y: NaN };
            b.b.add(c);
            b.b._inner[0]._segments.add(new BezierSegment(0));
            a.aq.aj = b;
        }
    };
    PieChartBaseView.prototype.ba = function (a) {
        if (this.a.g5 != null && a.isOthersSlice) {
            a.b0 = this.bt(a.a5);
            a.b1 = this.bu(a.a5);
            a.y = this.a.g5;
        }
        else if (a.isSelected && this.a.bq && this.a.g6 != null) {
            a.y = this.a.g6;
        }
        else {
            a.y = null;
            a.b0 = this.bt(a.a5);
            a.b1 = this.bu(a.a5);
        }
    };
    PieChartBaseView.prototype.bt = function (a) {
        if (this.a.ag != null && a >= 0 && this.a.ag.count > 0) {
            return this.a.ag.item(a % this.a.ag.count);
        }
        return null;
    };
    PieChartBaseView.prototype.bu = function (a) {
        if (this.a.ah != null && a >= 0 && this.a.ah.count > 0) {
            return this.a.ah.item(a % this.a.ah.count);
        }
        return null;
    };
    PieChartBaseView.prototype.ad = function (a) {
        if (a == null || a.aj == null) {
            return this.a.di;
        }
        var b = a.aj;
        var c = b.aj;
        if (typeCast(TextBlock.$, c) !== null) {
            return c.ak;
        }
        return c;
    };
    PieChartBaseView.prototype.y = function (a) {
        var b = typeCast(TextBlock.$, a);
        if (b != null && b.ak != null && this.i != null) {
            return this.i.e(b) + 0;
        }
        return 0;
    };
    PieChartBaseView.prototype.bi = function () {
        this.v = FontUtil.getCurrentFontHeight(this.c.o, this.c.d());
    };
    PieChartBaseView.prototype.x = function (a) {
        return this.v + 0;
    };
    PieChartBaseView.prototype.bz = function (a) {
        var b = a.aj;
        if (typeCast(TextBlock.$, b) !== null) {
            var c = this.y(b);
            var d = this.x(b);
            return new Rect(0, 0, 0, c, d);
        }
        return Rect.empty;
    };
    PieChartBaseView.prototype.b1 = function () {
        return new Size(1, this.b0.width, this.b0.height);
    };
    PieChartBaseView.prototype.bk = function (a, b, c) {
        var d = typeCast(TextBlock.$, a.aj);
        if (d != null) {
            d.n = b;
            d.o = c;
        }
        this.av();
    };
    PieChartBaseView.prototype.bn = function (a) {
        this.bo(a);
    };
    PieChartBaseView.prototype.bp = function () {
        this.av();
    };
    PieChartBaseView.prototype.au = function () {
        this.am();
    };
    PieChartBaseView.prototype.am = function () {
        var a = this.b.c;
        if (this.a.eb != null) {
            a = this.a.a6();
        }
        if (this.i != null) {
            this.i.ac(a);
        }
    };
    PieChartBaseView.prototype.ay = function (a, b) {
        this.c.ad(a, b);
    };
    PieChartBaseView.prototype.aw = function () {
        this.c.ab();
    };
    Object.defineProperty(PieChartBaseView.prototype, "af", {
        get: function () {
            return this.c != null && this.c.o != null ? this.c.o.getResourceString("invalidLabelBinding") : "There is no such value for the labels to bind.";
        },
        enumerable: true,
        configurable: true
    });
    PieChartBaseView.prototype.aq = function () {
        if (this.s == true) {
            this.s = false;
            this.c.z(this.e);
        }
    };
    PieChartBaseView.prototype.bo = function (a) {
        this.c.aj(a);
    };
    PieChartBaseView.prototype.bm = function (a, b, c) {
        this.s = true;
        this.bw = a;
        if (b == null) {
            this.ag = null;
            this.e.item = null;
        }
        else {
            this.ag = b.dataContext;
            this.e.item = b.dataContext;
            this.e.slice = b;
        }
        var d = this.a.g0();
        var pos_ = { $type: Point_$type, x: a.x + 15 + d.x, y: a.y + 15 + d.y };
        var context_ = this.e;
        this.c.ai(pos_, context_);
    };
    PieChartBaseView.prototype.bf = function () {
        this.a9();
        this.bi();
        this.a.fc();
    };
    PieChartBaseView.prototype.a0 = function () {
        this.c.ae(this.a.bv);
    };
    PieChartBaseView.prototype.ac = function () {
        return this.c.u();
    };
    PieChartBaseView.prototype.ao = function () {
        if (this.l) {
            this.bg();
        }
    };
    PieChartBaseView.prototype.r = function () {
        return this.ac() != null;
    };
    PieChartBaseView.prototype.an = function (a) {
        this.c.y(a);
    };
    PieChartBaseView.prototype.q = function () {
        return true;
    };
    PieChartBaseView.prototype.a2 = function () {
    };
    PieChartBaseView.prototype.br = function (a) {
        var b = this.c.ak(a.y);
        if (b != null) {
            return b;
        }
        return a.b0;
    };
    PieChartBaseView.prototype.bs = function (a) {
        var b = this.c.al(a.y);
        if (b != null) {
            return b;
        }
        return a.b1;
    };
    PieChartBaseView.prototype.w = function (a) {
        return this.c.m(a.y);
    };
    PieChartBaseView.prototype.z = function (a) {
        return this.c.m(a);
    };
    PieChartBaseView.prototype.aa = function () {
        var e_24, _a;
        try {
            for (var _b = tslib_1.__values(fromEnum(this.u)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var a = _c.value;
                if (!a.isSelected) {
                    return a.a4;
                }
            }
        }
        catch (e_24_1) { e_24 = { error: e_24_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_24) throw e_24.error; }
        }
        return NaN;
    };
    PieChartBaseView.prototype.a1 = function () {
        this.c.af();
        this.av();
    };
    PieChartBaseView.prototype.ae = function (a) {
        return this.c.c.am;
    };
    PieChartBaseView.$t = markType(PieChartBaseView, 'PieChartBaseView');
    return PieChartBaseView;
}(Base));
export { PieChartBaseView };
/**
 * @hidden
 */
var PieSliceDataContext = /** @class */ (function (_super) {
    tslib_1.__extends(PieSliceDataContext, _super);
    function PieSliceDataContext() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._slice = null;
        _this._percentValue = 0;
        _this._isOthersSlice = false;
        return _this;
    }
    Object.defineProperty(PieSliceDataContext.prototype, "slice", {
        get: function () {
            return this._slice;
        },
        set: function (a) {
            this._slice = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieSliceDataContext.prototype, "percentValue", {
        get: function () {
            return this._percentValue;
        },
        set: function (a) {
            this._percentValue = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieSliceDataContext.prototype, "isOthersSlice", {
        get: function () {
            return this._isOthersSlice;
        },
        set: function (a) {
            this._isOthersSlice = a;
        },
        enumerable: true,
        configurable: true
    });
    PieSliceDataContext.prototype.flatten = function () {
        var e_25, _a;
        var ret_ = _super.prototype.flatten.call(this);
        var percentValue_ = this.percentValue;
        var isOthersSlice_ = this.isOthersSlice;
        ret_.percentValue = percentValue_;
        ret_.isOthersSlice = isOthersSlice_;
        if (isOthersSlice_ && this.item != null) {
            var items_ = [];
            try {
                for (var _b = tslib_1.__values(fromEn(this.item)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var currItem_ = _c.value;
                    items_.push(currItem_);
                }
            }
            catch (e_25_1) { e_25 = { error: e_25_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_25) throw e_25.error; }
            }
            ret_.item = items_;
        }
        return ret_;
    };
    PieSliceDataContext.$t = markType(PieSliceDataContext, 'PieSliceDataContext', DataContext.$);
    return PieSliceDataContext;
}(DataContext));
export { PieSliceDataContext };
/**
 * @hidden
 */
var SliceView = /** @class */ (function (_super) {
    tslib_1.__extends(SliceView, _super);
    function SliceView(a) {
        var _this = _super.call(this) || this;
        _this.a = null;
        _this.g = null;
        _this.a = a;
        return _this;
    }
    SliceView.prototype.b = function () {
        this.g = new Path();
        this.a.content = this.g;
    };
    SliceView.prototype.c = function () {
        this.a.bk();
    };
    SliceView.prototype.f = function () {
        return this.g;
    };
    SliceView.prototype.d = function (a, b) {
        this.g.j = ((function () {
            var $ret = new TranslateTransform();
            $ret.j = a;
            $ret.k = b;
            return $ret;
        })());
    };
    SliceView.prototype.e = function () {
        this.g.j = null;
    };
    SliceView.$t = markType(SliceView, 'SliceView');
    return SliceView;
}(Base));
export { SliceView };
