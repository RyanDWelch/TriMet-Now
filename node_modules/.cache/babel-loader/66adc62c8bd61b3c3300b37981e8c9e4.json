{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwelch/WebDev/PDX-NOW/pdx-now/src/App.js\";\nimport React from 'react';\nimport Vehicle from './Vehicle.js';\nimport './App.css';\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://developer.trimet.org/ws/v2/vehicles/appID/CC57D2038B76DBBD253D6A587').then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json\n      });\n    });\n  }\n\n  render() {\n    var _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, items.resultSet.vehicle.map(item => React.createElement(Vehicle, {\n        data: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\nexport default App; //\n// <div>expires: {item.expires}</div>\n// <div>signMessage: {item.signMessage}</div>\n// <div>serviceDate: {item.serviceDate}</div>\n// <div>loadPercentage: {item.loadPercentage}</div>\n// <div>latitude: {item.latitude}</div>\n// <div>nextStopSeq: nextStopSeq{item.nextStopSeq}</div>\n// <div>source: {item.source}</div>\n// <div>type: {item.type}</div>\n// <div>blockID: {item.blockID}</div>\n// <div>signMessageLong: {item.signMessageLong}</div>\n// <div>lastLocID: {item.lastLocID}</div>\n// <div>nextLocID: {item.nextLocID}</div>\n// <div>locationInScheduleDay: {item.locationInScheduleDay}</div>\n// <div>newTrip: {item.newTrip}</div>\n// <div>longitude: {item.longitude}</div>\n// <div>direction: {item.direction}</div>\n// <div>inCongestion: {item.inCongestion}</div>\n// <div>routeNumber: {item.routeNumber}</div>\n// <div>bearing: {item.bearing}</div>\n// <div>garage: {item.garage}</div>\n// <div>tripID: {item.tripID}</div>\n// <div>delay: {item.delay}</div>\n// <div>extraBlockID: {item.extraBlockID}</div>\n// <div>messageCode: {item.messageCode}</div>\n// <div>lastStopSeq: {item.lastStopSeq}</div>\n// <div>vehicleID: {item.vehicleID}</div>\n// <div>time: {item.time}</div>\n// <div>offRoute: {item.offRoute}</div>","map":{"version":3,"sources":["/Users/ryanwelch/WebDev/PDX-NOW/pdx-now/src/App.js"],"names":["React","Vehicle","App","Component","constructor","props","state","items","isLoaded","componentDidMount","fetch","then","res","json","setState","render","resultSet","vehicle","map","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAO,WAAP;AAGA,OAAO,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4EAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACV,WAAKC,QAAL,CAAc;AACZN,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA,KAAK,EAAEM;AAFK,OAAd;AAID,KAPL;AASD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,sBAEmB,KAAKT,KAFxB;AAAA,QAEDE,QAFC,eAEDA,QAFC;AAAA,QAESD,KAFT,eAESA,KAFT;;AAIP,QAAI,CAACC,QAAL,EAAe;AACb,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFD,MAIK;AAEH,aACE;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,KAAK,CAACS,SAAN,CAAgBC,OAAhB,CAAwBC,GAAxB,CAA4BC,IAAI,IAC/B,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAEA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,CADF;AAOD;AACF;;AAxCoC;AA2CzC,eAAejB,GAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport Vehicle from './Vehicle.js';\nimport './App.css';\n\n\nexport class App extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        items: [],\n        isLoaded: false,\n      }\n    }\n\n    componentDidMount() {\n      fetch('http://developer.trimet.org/ws/v2/vehicles/appID/CC57D2038B76DBBD253D6A587')\n        .then(res => res.json())\n        .then(json => {\n            this.setState({\n              isLoaded: true,\n              items: json,\n            });\n          }\n        )\n    }\n\n    render() {\n\n      var { isLoaded, items } = this.state;\n\n      if (!isLoaded) {\n        return <div>Loading...</div>;\n      }\n\n      else {\n\n        return(\n          <div class=\"container\">\n            {items.resultSet.vehicle.map(item => (\n              <Vehicle data={item} />\n            ))}\n          </div>\n        )\n      }\n    }\n}\n\nexport default App;\n\n\n//\n// <div>expires: {item.expires}</div>\n// <div>signMessage: {item.signMessage}</div>\n// <div>serviceDate: {item.serviceDate}</div>\n// <div>loadPercentage: {item.loadPercentage}</div>\n// <div>latitude: {item.latitude}</div>\n// <div>nextStopSeq: nextStopSeq{item.nextStopSeq}</div>\n// <div>source: {item.source}</div>\n// <div>type: {item.type}</div>\n// <div>blockID: {item.blockID}</div>\n// <div>signMessageLong: {item.signMessageLong}</div>\n// <div>lastLocID: {item.lastLocID}</div>\n// <div>nextLocID: {item.nextLocID}</div>\n// <div>locationInScheduleDay: {item.locationInScheduleDay}</div>\n// <div>newTrip: {item.newTrip}</div>\n// <div>longitude: {item.longitude}</div>\n// <div>direction: {item.direction}</div>\n// <div>inCongestion: {item.inCongestion}</div>\n// <div>routeNumber: {item.routeNumber}</div>\n// <div>bearing: {item.bearing}</div>\n// <div>garage: {item.garage}</div>\n// <div>tripID: {item.tripID}</div>\n// <div>delay: {item.delay}</div>\n// <div>extraBlockID: {item.extraBlockID}</div>\n// <div>messageCode: {item.messageCode}</div>\n// <div>lastStopSeq: {item.lastStopSeq}</div>\n// <div>vehicleID: {item.vehicleID}</div>\n// <div>time: {item.time}</div>\n// <div>offRoute: {item.offRoute}</div>\n"]},"metadata":{},"sourceType":"module"}