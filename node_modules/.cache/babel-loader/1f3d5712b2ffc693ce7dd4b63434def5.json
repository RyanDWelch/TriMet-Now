{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwelch/Desktop/wamata-now/src/App.js\";\nimport React from \"react\";\nimport GoogleMap from './components/GoogleMap';\nimport Marker from './components/Marker';\nimport { apiIsLoaded } from './components/Functions';\nimport \"./App.css\";\nimport { mapStyles } from './mapstyles.js'; // import { mapStyles } from './mapstyles-bw.js';\n\nconst API_URL = \"https://api.wmata.com/Bus.svc/json/jBusPositions\";\nconst defaultCenter = [38.918690, -77.053362];\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      vehicles: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(API_URL, {\n      headers: new Headers({\n        \"api_key\": \"e13626d03d8e4c03ac07f95541b3091b\"\n      })\n    }).then(response => response.json()).then(data => data.BusPositions).then(data => {\n      const filteredVehicles = data.filter(vehicle => vehicle.lat === \"number\" && typeof vehicle.lon === \"number\");\n      this.setState({\n        isLoaded: true,\n        vehicles: filteredVehicles\n      });\n    });\n  }\n\n  render() {\n    let _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        vehicles = _this$state.vehicles;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Loading\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \".\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \".\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \".\"));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(GoogleMap, {\n        defaultZoom: 12,\n        defaultCenter: defaultCenter,\n        yesIWantToUseGoogleMapApiInternals: true,\n        onGoogleApiLoaded: ({\n          map,\n          maps\n        }) => apiIsLoaded(map, maps, vehicles),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, vehicles.map(vehicle => React.createElement(Marker, {\n        key: vehicle.vehicleID,\n        lat: vehicle.Lat,\n        lng: vehicle.Lon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/ryanwelch/Desktop/wamata-now/src/App.js"],"names":["React","GoogleMap","Marker","apiIsLoaded","mapStyles","API_URL","defaultCenter","App","Component","constructor","props","state","isLoaded","vehicles","componentDidMount","fetch","headers","Headers","then","response","json","data","BusPositions","filteredVehicles","filter","vehicle","lat","lon","setState","render","map","maps","vehicleID","Lat","Lon"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAO,WAAP;AACA,SAASC,SAAT,QAA0B,gBAA1B,C,CACA;;AAEA,MAAMC,OAAO,GAAG,kDAAhB;AACA,MAAMC,aAAa,GAAG,CAAC,SAAD,EAAW,CAAC,SAAZ,CAAtB;AAGA,OAAO,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEHC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAACV,OAAD,EAAU;AACXW,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,mBAAW;AADQ,OAAZ;AADE,KAAV,CAAL,CAKGC,IALH,CAKQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALpB,EAMGF,IANH,CAMQG,IAAI,IAAIA,IAAI,CAACC,YANrB,EAOGJ,IAPH,CAOQG,IAAI,IAAI;AAId,YAAME,gBAAgB,GAAGF,IAAI,CAACG,MAAL,CAAYC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgB,QAAhB,IAA4B,OAAOD,OAAO,CAACE,GAAf,KAAuB,QAA1E,CAAzB;AAGA,WAAKC,QAAL,CAAc;AACZhB,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,QAAQ,EAAEU;AAFE,OAAd;AAID,KAlBD;AAmBD;;AAEDM,EAAAA,MAAM,GAAG;AAAA,sBACsB,KAAKlB,KAD3B;AAAA,QACDC,QADC,eACDA,QADC;AAAA,QACSC,QADT,eACSA,QADT;;AAGP,QAAI,CAACD,QAAL,EAAe;AACb,aAAO;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAhC,EAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA9C,EAA4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA5D,CAAP;AACD,KAFD,MAEO;AACL,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAE,EADf;AAEE,QAAA,aAAa,EAAEN,aAFjB;AAGE,QAAA,kCAAkC,MAHpC;AAIE,QAAA,iBAAiB,EAAE,CAAC;AAAEwB,UAAAA,GAAF;AAAOC,UAAAA;AAAP,SAAD,KAAmB5B,WAAW,CAAC2B,GAAD,EAAMC,IAAN,EAAYlB,QAAZ,CAJnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMGA,QAAQ,CAACiB,GAAT,CAAaL,OAAO,IACnB,oBAAC,MAAD;AACA,QAAA,GAAG,EAAEA,OAAO,CAACO,SADb;AAEA,QAAA,GAAG,EAAEP,OAAO,CAACQ,GAFb;AAGA,QAAA,GAAG,EAAER,OAAO,CAACS,GAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CANH,CADF,CADF;AAkBD;AACF;;AAxDsC;AA2DzC,eAAe3B,GAAf","sourcesContent":["import React from \"react\";\nimport GoogleMap from './components/GoogleMap';\n\nimport Marker from './components/Marker';\nimport { apiIsLoaded } from './components/Functions';\nimport \"./App.css\";\nimport { mapStyles } from './mapstyles.js';\n// import { mapStyles } from './mapstyles-bw.js';\n\nconst API_URL = \"https://api.wmata.com/Bus.svc/json/jBusPositions\";\nconst defaultCenter = [38.918690,-77.053362];\n\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      vehicles: []\n    };\n  }\n\ncomponentDidMount() {\n    fetch(API_URL, {\n        headers: new Headers({\n          \"api_key\": \"e13626d03d8e4c03ac07f95541b3091b\"\n        })\n      })\n      .then(response => response.json())\n      .then(data => data.BusPositions)\n      .then(data => {\n\n\n\n      const filteredVehicles = data.filter(vehicle => vehicle.lat === \"number\" && typeof vehicle.lon === \"number\");\n\n\n      this.setState({\n        isLoaded: true,\n        vehicles: filteredVehicles\n      })\n    })\n  }\n\n  render() {\n    let { isLoaded, vehicles } = this.state;\n\n    if (!isLoaded) {\n      return <div className=\"loading\">Loading<span>.</span><span>.</span><span>.</span></div>;\n    } else {\n      return (\n        <div className=\"container\">\n          <GoogleMap\n            defaultZoom={12}\n            defaultCenter={defaultCenter}\n            yesIWantToUseGoogleMapApiInternals\n            onGoogleApiLoaded={({ map, maps }) => apiIsLoaded(map, maps, vehicles)}\n            >\n            {vehicles.map(vehicle => (\n              <Marker \n              key={vehicle.vehicleID}\n              lat={vehicle.Lat}\n              lng={vehicle.Lon}\n              />\n            ))}\n          </GoogleMap>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}