{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwelch/Code/PDX-NOW/trimet-now/src/App.js\";\nimport React from \"react\";\nimport GoogleMap from './components/GoogleMap';\nimport Marker from './components/Marker';\nimport Navigation from './components/Navigation';\nimport Stats from './components/Stats';\nimport { apiIsLoaded } from './Functions';\nimport \"./App.css\";\nconst API_KEY = \"CC57D2038B76DBBD253D6A587\";\nconst API_URL = \"https://developer.trimet.org/ws/v2/vehicles/appID/\" + API_KEY;\nconst defaultCenter = [45.519526, -122.677040];\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      vehicles: []\n    };\n  }\n\n  async componentDidMount() {\n    let totalRequests = 0;\n\n    try {\n      setInterval(async () => {\n        if (totalRequests < 100) {\n          const res = await fetch(API_URL);\n          const json = await res.json(); // const filteredVehicles = json.resultSet.vehicle.filter(vehicle => vehicle.type === 'rail');\n\n          const vehicles = json.resultSet.vehicle;\n          this.setState({\n            isLoaded: true,\n            vehicles: vehicles\n          });\n          totalRequests++;\n        }\n      }, 20000);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  render() {\n    let _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        vehicles = _this$state.vehicles;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(GoogleMap, {\n        defaultZoom: 12,\n        defaultCenter: defaultCenter,\n        yesIWantToUseGoogleMapApiInternals: true,\n        onGoogleApiLoaded: ({\n          map,\n          maps\n        }) => apiIsLoaded(map, maps, vehicles),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, vehicles.map(vehicle => React.createElement(Marker, {\n        key: vehicle.vehicleID,\n        text: vehicle.signMessageLong,\n        type: vehicle.type,\n        lat: vehicle.latitude,\n        lng: vehicle.longitude,\n        data: vehicle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }))), React.createElement(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Stats, {\n        data: vehicles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/ryanwelch/Code/PDX-NOW/trimet-now/src/App.js"],"names":["React","GoogleMap","Marker","Navigation","Stats","apiIsLoaded","API_KEY","API_URL","defaultCenter","App","Component","constructor","props","state","isLoaded","vehicles","componentDidMount","totalRequests","setInterval","res","fetch","json","resultSet","vehicle","setState","e","console","error","render","map","maps","vehicleID","signMessageLong","type","latitude","longitude"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,WAAP;AAEA,MAAMC,OAAO,GAAG,2BAAhB;AACA,MAAMC,OAAO,GAAG,uDAAqDD,OAArE;AACA,MAAME,aAAa,GAAG,CAAC,SAAD,EAAW,CAAC,UAAZ,CAAtB;AAGA,OAAO,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAED,QAAMC,iBAAN,GAA0B;AACxB,QAAIC,aAAa,GAAG,CAApB;;AACA,QAAI;AACFC,MAAAA,WAAW,CAAC,YAAY;AACtB,YAAID,aAAa,GAAG,GAApB,EAAyB;AACvB,gBAAME,GAAG,GAAG,MAAMC,KAAK,CAACb,OAAD,CAAvB;AACA,gBAAMc,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB,CAFuB,CAGvB;;AACA,gBAAMN,QAAQ,GAAGM,IAAI,CAACC,SAAL,CAAeC,OAAhC;AAEA,eAAKC,QAAL,CAAc;AACZV,YAAAA,QAAQ,EAAE,IADE;AAEZC,YAAAA,QAAQ,EAAEA;AAFE,WAAd;AAIAE,UAAAA,aAAa;AACd;AACF,OAbU,EAaR,KAbQ,CAAX;AAcD,KAfD,CAeE,OAAMQ,CAAN,EAAS;AACTC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF;;AAEDG,EAAAA,MAAM,GAAG;AAAA,sBACsB,KAAKf,KAD3B;AAAA,QACDC,QADC,eACDA,QADC;AAAA,QACSC,QADT,eACSA,QADT;;AAGP,QAAI,CAACD,QAAL,EAAe;AACb,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFD,MAEO;AACL,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAE,EADf;AAEE,QAAA,aAAa,EAAEN,aAFjB;AAGE,QAAA,kCAAkC,MAHpC;AAIE,QAAA,iBAAiB,EAAE,CAAC;AAAEqB,UAAAA,GAAF;AAAOC,UAAAA;AAAP,SAAD,KAAmBzB,WAAW,CAACwB,GAAD,EAAMC,IAAN,EAAYf,QAAZ,CAJnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMGA,QAAQ,CAACc,GAAT,CAAaN,OAAO,IACnB,oBAAC,MAAD;AACA,QAAA,GAAG,EAAEA,OAAO,CAACQ,SADb;AAEA,QAAA,IAAI,EAAER,OAAO,CAACS,eAFd;AAGA,QAAA,IAAI,EAAET,OAAO,CAACU,IAHd;AAIA,QAAA,GAAG,EAAEV,OAAO,CAACW,QAJb;AAKA,QAAA,GAAG,EAAEX,OAAO,CAACY,SALb;AAMA,QAAA,IAAI,EAAEZ,OANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CANH,CADF,EAkBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBF,EAmBE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAER,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,CADF;AAuBD;AACF;;AA7DsC;AAgEzC,eAAeN,GAAf","sourcesContent":["import React from \"react\";\nimport GoogleMap from './components/GoogleMap';\n\nimport Marker from './components/Marker';\nimport Navigation from './components/Navigation';\nimport Stats from './components/Stats';\nimport { apiIsLoaded } from './Functions';\n\nimport \"./App.css\";\n\nconst API_KEY = \"CC57D2038B76DBBD253D6A587\"\nconst API_URL = \"https://developer.trimet.org/ws/v2/vehicles/appID/\"+API_KEY;\nconst defaultCenter = [45.519526,-122.677040];\n\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      vehicles: []\n    };\n  }\n\n  async componentDidMount() {\n    let totalRequests = 0;\n    try {\n      setInterval(async () => {\n        if (totalRequests < 100) {\n          const res = await fetch(API_URL);\n          const json = await res.json();\n          // const filteredVehicles = json.resultSet.vehicle.filter(vehicle => vehicle.type === 'rail');\n          const vehicles = json.resultSet.vehicle;\n\n          this.setState({\n            isLoaded: true,\n            vehicles: vehicles\n          })\n          totalRequests++;\n        }\n      }, 20000);\n    } catch(e) {\n      console.error(e);\n    }\n  }\n\n  render() {\n    let { isLoaded, vehicles } = this.state;\n\n    if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className=\"container\">\n          <GoogleMap\n            defaultZoom={12}\n            defaultCenter={defaultCenter}\n            yesIWantToUseGoogleMapApiInternals\n            onGoogleApiLoaded={({ map, maps }) => apiIsLoaded(map, maps, vehicles)}\n            >\n            {vehicles.map(vehicle => (\n              <Marker \n              key={vehicle.vehicleID}\n              text={vehicle.signMessageLong}\n              type={vehicle.type}\n              lat={vehicle.latitude}\n              lng={vehicle.longitude}\n              data={vehicle}\n              />\n            ))}\n          </GoogleMap>\n          <Navigation />\n          <Stats data={vehicles} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}