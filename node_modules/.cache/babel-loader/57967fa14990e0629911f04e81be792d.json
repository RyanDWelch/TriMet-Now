{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwelch/Code/PDX-NOW/trimet-now/src/App.js\";\nimport React from \"react\";\nimport GoogleMap from './components/GoogleMap';\nimport Marker from './components/Marker';\nimport Navigation from './components/Navigation';\nimport Stats from './components/Stats';\nimport { apiIsLoaded } from './Functions';\nimport \"./App.css\";\nimport { mapStyles } from './mapstyles.js';\nconst API_KEY = \"CC57D2038B76DBBD253D6A587\";\nconst API_URL = \"https://developer.trimet.org/ws/v2/vehicles/appID/\" + API_KEY;\nconst defaultCenter = [45.519526, -122.677040];\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      vehicles: []\n    };\n  }\n\n  render() {\n    let _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        vehicles = _this$state.vehicles;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(GoogleMap, {\n        defaultZoom: 12,\n        defaultCenter: defaultCenter,\n        defaultOptions: {\n          styles: mapStyles\n        },\n        yesIWantToUseGoogleMapApiInternals: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, vehicles.map(vehicle => React.createElement(Marker, {\n        key: vehicle.vehicleID,\n        text: vehicle.signMessageLong,\n        type: vehicle.type,\n        lat: vehicle.latitude,\n        lng: vehicle.longitude,\n        data: vehicle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }))), React.createElement(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Stats, {\n        data: vehicles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/ryanwelch/Code/PDX-NOW/trimet-now/src/App.js"],"names":["React","GoogleMap","Marker","Navigation","Stats","apiIsLoaded","mapStyles","API_KEY","API_URL","defaultCenter","App","Component","constructor","props","state","isLoaded","vehicles","render","styles","map","vehicle","vehicleID","signMessageLong","type","latitude","longitude"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,WAAP;AAEA,SAASC,SAAT,QAA0B,gBAA1B;AAEA,MAAMC,OAAO,GAAG,2BAAhB;AACA,MAAMC,OAAO,GAAG,uDAAqDD,OAArE;AACA,MAAME,aAAa,GAAG,CAAC,SAAD,EAAW,CAAC,UAAZ,CAAtB;AAGA,OAAO,MAAMC,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAkC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAIDC,EAAAA,MAAM,GAAG;AAAA,sBACsB,KAAKH,KAD3B;AAAA,QACDC,QADC,eACDA,QADC;AAAA,QACSC,QADT,eACSA,QADT;;AAGP,QAAI,CAACD,QAAL,EAAe;AACb,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFD,MAEO;AACL,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAE,EADf;AAEE,QAAA,aAAa,EAAEN,aAFjB;AAGE,QAAA,cAAc,EAAE;AACdS,UAAAA,MAAM,EAAEZ;AADM,SAHlB;AAME,QAAA,kCAAkC,MANpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASGU,QAAQ,CAACG,GAAT,CAAaC,OAAO,IACnB,oBAAC,MAAD;AACA,QAAA,GAAG,EAAEA,OAAO,CAACC,SADb;AAEA,QAAA,IAAI,EAAED,OAAO,CAACE,eAFd;AAGA,QAAA,IAAI,EAAEF,OAAO,CAACG,IAHd;AAIA,QAAA,GAAG,EAAEH,OAAO,CAACI,QAJb;AAKA,QAAA,GAAG,EAAEJ,OAAO,CAACK,SALb;AAMA,QAAA,IAAI,EAAEL,OANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CATH,CADF,EAqBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBF,EAsBE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAEJ,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBF,CADF;AA0BD;AACF;;AA5CsC;AA+CzC,eAAeN,GAAf","sourcesContent":["import React from \"react\";\nimport GoogleMap from './components/GoogleMap';\n\nimport Marker from './components/Marker';\nimport Navigation from './components/Navigation';\nimport Stats from './components/Stats';\nimport { apiIsLoaded } from './Functions';\n \nimport \"./App.css\";\n\nimport { mapStyles } from './mapstyles.js';\n\nconst API_KEY = \"CC57D2038B76DBBD253D6A587\";\nconst API_URL = \"https://developer.trimet.org/ws/v2/vehicles/appID/\"+API_KEY;\nconst defaultCenter = [45.519526,-122.677040];\n\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      vehicles: []\n    };\n  }\n\n\n\n  render() {\n    let { isLoaded, vehicles } = this.state;\n\n    if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className=\"container\">\n          <GoogleMap\n            defaultZoom={12}\n            defaultCenter={defaultCenter}\n            defaultOptions={{\n              styles: mapStyles\n            }}\n            yesIWantToUseGoogleMapApiInternals\n            \n            >\n            {vehicles.map(vehicle => (\n              <Marker \n              key={vehicle.vehicleID}\n              text={vehicle.signMessageLong}\n              type={vehicle.type}\n              lat={vehicle.latitude}\n              lng={vehicle.longitude}\n              data={vehicle}\n              />\n            ))}\n          </GoogleMap>\n          <Navigation />\n          <Stats data={vehicles} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}