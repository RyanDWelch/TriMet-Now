{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwelch/WebDev/PDX-NOW/trimet-now/src/App.js\";\nimport React from \"react\";\nimport Vehicle from \"./Vehicle\";\nimport \"./App.css\";\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://developer.trimet.org/ws/v2/vehicles/appID/CC57D2038B76DBBD253D6A587\").then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json\n      });\n    });\n  }\n\n  render() {\n    var _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, items.resultSet.vehicle.map(item => React.createElement(Vehicle, {\n        data: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\nexport default App; // import React, {Component} from \"react\";\n// import {Map,InfoWindow,Marker,GoogleApiWrapper} from 'google-maps-react';\n// const mapStyles = {\n//   width: '100%',\n//   height: '100%'\n// };\n// export class MapContainer extends Component {\n//   state = {\n//     showingInfoWindow: false,\n//     activeMarker: {},\n//     selectedPlace: {},\n//     userLocation: {\n//       lat: 32,\n//       lng: 32\n//     },\n//     loadingLocation: true\n//   };\n//   onMarkerClick = (props, marker, e) =>\n//     this.setState({\n//       selectedPlace: props,\n//       activeMarker: marker,\n//       showingInfoWindow: true\n//     });\n//   onMapClicked = (props) => {\n//     if (this.state.showingInfoWindow) {\n//       this.setState({\n//         showingInfoWindow: false,\n//         activeMarker: null\n//       })\n//     }\n//   };\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       items: [],\n//       isLoaded: false,\n//     }\n//   }\n//   componentDidMount() {\n//     navigator.geolocation.getCurrentPosition(\n//       position => {\n//         const {\n//           latitude,\n//           longitude\n//         } = position.coords;\n//         this.setState({\n//           userLocation: {\n//             lat: latitude,\n//             lng: longitude\n//           },\n//           loadingLocation: false\n//         });\n//       },\n//       () => {\n//         this.setState({\n//           loadingLocation: false\n//         });\n//       }\n//     );\n//   }\n//   render() {\n//     var {isLoaded,items,userLocation,loadingLocation} = this.state;\n//     return (\n//       // if (!isLoaded) {\n//       //   return <div > Loading... < /div>;\n//       // }\n//       <Map \n//       google = {this.props.google}\n//       onClick = {this.onMapClicked}\n//       initialCenter = {userLocation}\n//       zoom = {14}\n//       style = {mapStyles}\n//       >\n//       </Map>\n//     )\n//   }\n// }\n// export default GoogleApiWrapper({\n//   apiKey: (\"AIzaSyA-GZmh7jYFI9Qc_4w6sXkUnU9nirea8o0\")\n// })(MapContainer)","map":{"version":3,"sources":["/Users/ryanwelch/WebDev/PDX-NOW/trimet-now/src/App.js"],"names":["React","Vehicle","App","Component","constructor","props","state","items","isLoaded","componentDidMount","fetch","then","res","json","setState","render","resultSet","vehicle","map","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,WAAP;AAEA,OAAO,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CACH,6EADG,CAAL,CAGGC,IAHH,CAGQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHf,EAIGF,IAJH,CAIQE,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AACZN,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA,KAAK,EAAEM;AAFK,OAAd;AAID,KATH;AAUD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,sBACmB,KAAKT,KADxB;AAAA,QACDE,QADC,eACDA,QADC;AAAA,QACSD,KADT,eACSA,KADT;;AAGP,QAAI,CAACC,QAAL,EAAe;AACb,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFD,MAEO;AACL,aACE;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,KAAK,CAACS,SAAN,CAAgBC,OAAhB,CAAwBC,GAAxB,CAA4BC,IAAI,IAC/B,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAEA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADH,CADF;AAOD;AACF;;AApCsC;AAuCzC,eAAejB,GAAf,C,CAoBA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport Vehicle from \"./Vehicle\";\nimport \"./App.css\";\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\n      \"https://developer.trimet.org/ws/v2/vehicles/appID/CC57D2038B76DBBD253D6A587\"\n    )\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json\n        });\n      });\n  }\n\n  render() {\n    var { isLoaded, items } = this.state;\n\n    if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div class=\"container\">\n          {items.resultSet.vehicle.map(item => (\n            <Vehicle data={item} />\n          ))}\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, {Component} from \"react\";\n// import {Map,InfoWindow,Marker,GoogleApiWrapper} from 'google-maps-react';\n\n// const mapStyles = {\n//   width: '100%',\n//   height: '100%'\n// };\n\n// export class MapContainer extends Component {\n//   state = {\n//     showingInfoWindow: false,\n//     activeMarker: {},\n//     selectedPlace: {},\n//     userLocation: {\n//       lat: 32,\n//       lng: 32\n//     },\n//     loadingLocation: true\n//   };\n\n//   onMarkerClick = (props, marker, e) =>\n//     this.setState({\n//       selectedPlace: props,\n//       activeMarker: marker,\n//       showingInfoWindow: true\n//     });\n\n//   onMapClicked = (props) => {\n//     if (this.state.showingInfoWindow) {\n//       this.setState({\n//         showingInfoWindow: false,\n//         activeMarker: null\n//       })\n//     }\n//   };\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       items: [],\n//       isLoaded: false,\n//     }\n//   }\n\n//   componentDidMount() {\n\n//     navigator.geolocation.getCurrentPosition(\n//       position => {\n//         const {\n//           latitude,\n//           longitude\n//         } = position.coords;\n\n//         this.setState({\n//           userLocation: {\n//             lat: latitude,\n//             lng: longitude\n//           },\n//           loadingLocation: false\n//         });\n//       },\n//       () => {\n//         this.setState({\n//           loadingLocation: false\n//         });\n//       }\n//     );\n//   }\n\n\n//   render() {\n\n//     var {isLoaded,items,userLocation,loadingLocation} = this.state;\n\n//     return (\n\n//       // if (!isLoaded) {\n//       //   return <div > Loading... < /div>;\n//       // }\n\n//       <Map \n//       google = {this.props.google}\n//       onClick = {this.onMapClicked}\n//       initialCenter = {userLocation}\n//       zoom = {14}\n//       style = {mapStyles}\n//       >\n//       </Map>\n//     )\n//   }\n// }\n\n// export default GoogleApiWrapper({\n//   apiKey: (\"AIzaSyA-GZmh7jYFI9Qc_4w6sXkUnU9nirea8o0\")\n// })(MapContainer)\n"]},"metadata":{},"sourceType":"module"}