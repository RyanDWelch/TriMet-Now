{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/ryanwelch/Code/PDX-NOW/trimet-now/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/ryanwelch/Code/PDX-NOW/trimet-now/src/components/Marker.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  width: 28px;\\n  height: 28px;\\n  border: 2px solid #fff;\\n  border-radius: 100%;\\n  user-select: none;\\n  transform: translate(-50%, -50%);\\n  background-repeat: no-repeat;\\n  background-size: contain;\\n  background-position: center;\\n  cursor: \", \";\\n  transition: .25s ease-out;\\n  &:hover {\\n    z-index: 1;\\n    cursor: pointer;\\n    height: 48px;\\n    width: 48px;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nconst Wrapper = styled.div(_templateObject(), props => props.onClick ? 'pointer' : 'default');\n\nconst Marker = props => React.createElement(Wrapper, Object.assign({\n  alt: props.text,\n  className: props.type + \" vehicle\"\n}, props.onClick ? {\n  onClick: props.onClick\n} : {}, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"vehicle-infobox\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n},\n/* {Object.keys(props.data).map(function(keyName) {\n return <div className={`vehicle-${keyName}`}><div>{`${keyName}: `}</div>{` ${props.data[keyName]}`}</div>;\n})} */\nprops.data.routeNumber));\n\nMarker.defaultProps = {\n  onClick: null\n};\nMarker.propTypes = {\n  onClick: PropTypes.func,\n  text: PropTypes.string.isRequired\n};\nexport default Marker;","map":{"version":3,"sources":["/Users/ryanwelch/Code/PDX-NOW/trimet-now/src/components/Marker.js"],"names":["React","PropTypes","styled","Wrapper","div","props","onClick","Marker","text","type","data","routeNumber","defaultProps","propTypes","func","string","isRequired"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAV,oBAaDC,KAAK,IAAKA,KAAK,CAACC,OAAN,GAAgB,SAAhB,GAA4B,SAbrC,CAAb;;AAuBA,MAAMC,MAAM,GAAGF,KAAK,IAClB,oBAAC,OAAD;AACE,EAAA,GAAG,EAAEA,KAAK,CAACG,IADb;AAEE,EAAA,SAAS,EAAEH,KAAK,CAACI,IAAN,GAAa;AAF1B,GAGMJ,KAAK,CAACC,OAAN,GAAgB;AAAEA,EAAAA,OAAO,EAAED,KAAK,CAACC;AAAjB,CAAhB,GAA6C,EAHnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKE;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACG;;;AAEKD,KAAK,CAACK,IAAN,CAAWC,WAHnB,CALF,CADF;;AAcAJ,MAAM,CAACK,YAAP,GAAsB;AACpBN,EAAAA,OAAO,EAAE;AADW,CAAtB;AAIAC,MAAM,CAACM,SAAP,GAAmB;AACjBP,EAAAA,OAAO,EAAEL,SAAS,CAACa,IADF;AAEjBN,EAAAA,IAAI,EAAEP,SAAS,CAACc,MAAV,CAAiBC;AAFN,CAAnB;AAKA,eAAeT,MAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 28px;\n  height: 28px;\n  border: 2px solid #fff;\n  border-radius: 100%;\n  user-select: none;\n  transform: translate(-50%, -50%);\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n  cursor: ${props => (props.onClick ? 'pointer' : 'default')};\n  transition: .25s ease-out;\n  &:hover {\n    z-index: 1;\n    cursor: pointer;\n    height: 48px;\n    width: 48px;\n  }\n`;\n\nconst Marker = props => (\n  <Wrapper\n    alt={props.text}\n    className={props.type + \" vehicle\"}\n    {...props.onClick ? { onClick: props.onClick } : {}}\n  >\n    <div className=\"vehicle-infobox\">\n      {/* {Object.keys(props.data).map(function(keyName) {\n        return <div className={`vehicle-${keyName}`}><div>{`${keyName}: `}</div>{` ${props.data[keyName]}`}</div>;\n      })} */props.data.routeNumber}\n    </div>\n  </Wrapper>\n);\n\nMarker.defaultProps = {\n  onClick: null,\n};\n\nMarker.propTypes = {\n  onClick: PropTypes.func,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Marker;"]},"metadata":{},"sourceType":"module"}