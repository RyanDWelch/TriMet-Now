{"ast":null,"code":"// Return map bounds based on list of places\nexport const getMapBounds = (map, maps, places) => {\n  const bounds = new maps.LatLngBounds();\n  places.forEach(place => {\n    bounds.extend(new maps.LatLng(place.latitude, place.longitude));\n  });\n  return bounds;\n}; // Re-center map when resizing the window\n\nconst bindResizeListener = (map, maps, bounds) => {\n  maps.event.addDomListenerOnce(map, 'idle', () => {\n    maps.event.addDomListener(window, 'resize', () => {\n      map.fitBounds(bounds);\n    });\n  });\n}; // Fit map to its bounds after the api is loaded\n\n\nexport const apiIsLoaded = (map, maps, places) => {\n  // Get bounds by our places\n  const bounds = getMapBounds(map, maps, places); // Fit map to bounds\n\n  map.fitBounds(bounds); // Bind the resize listener\n\n  bindResizeListener(map, maps, bounds);\n};","map":{"version":3,"sources":["/Users/ryanwelch/Code/PDX-NOW/trimet-now/src/Functions.js"],"names":["getMapBounds","map","maps","places","bounds","LatLngBounds","forEach","place","extend","LatLng","latitude","longitude","bindResizeListener","event","addDomListenerOnce","addDomListener","window","fitBounds","apiIsLoaded"],"mappings":"AAAA;AACA,OAAO,MAAMA,YAAY,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,MAAZ,KAAuB;AAC/C,QAAMC,MAAM,GAAG,IAAIF,IAAI,CAACG,YAAT,EAAf;AAEAF,EAAAA,MAAM,CAACG,OAAP,CAAgBC,KAAD,IAAW;AACxBH,IAAAA,MAAM,CAACI,MAAP,CAAc,IAAIN,IAAI,CAACO,MAAT,CACZF,KAAK,CAACG,QADM,EAEZH,KAAK,CAACI,SAFM,CAAd;AAID,GALD;AAMA,SAAOP,MAAP;AACD,CAVI,C,CAYP;;AACA,MAAMQ,kBAAkB,GAAG,CAACX,GAAD,EAAMC,IAAN,EAAYE,MAAZ,KAAuB;AAC9CF,EAAAA,IAAI,CAACW,KAAL,CAAWC,kBAAX,CAA8Bb,GAA9B,EAAmC,MAAnC,EAA2C,MAAM;AAC7CC,IAAAA,IAAI,CAACW,KAAL,CAAWE,cAAX,CAA0BC,MAA1B,EAAkC,QAAlC,EAA4C,MAAM;AAClDf,MAAAA,GAAG,CAACgB,SAAJ,CAAcb,MAAd;AACC,KAFD;AAGH,GAJD;AAKH,CAND,C,CAQA;;;AACA,OAAO,MAAMc,WAAW,GAAG,CAACjB,GAAD,EAAMC,IAAN,EAAYC,MAAZ,KAAuB;AAC9C;AACA,QAAMC,MAAM,GAAGJ,YAAY,CAACC,GAAD,EAAMC,IAAN,EAAYC,MAAZ,CAA3B,CAF8C,CAG9C;;AACAF,EAAAA,GAAG,CAACgB,SAAJ,CAAcb,MAAd,EAJ8C,CAK9C;;AACAQ,EAAAA,kBAAkB,CAACX,GAAD,EAAMC,IAAN,EAAYE,MAAZ,CAAlB;AACD,CAPI","sourcesContent":["// Return map bounds based on list of places\nexport const getMapBounds = (map, maps, places) => {\n    const bounds = new maps.LatLngBounds();\n  \n    places.forEach((place) => {\n      bounds.extend(new maps.LatLng(\n        place.latitude,\n        place.longitude,\n      ));\n    });\n    return bounds;\n  };\n  \n// Re-center map when resizing the window\nconst bindResizeListener = (map, maps, bounds) => {\n    maps.event.addDomListenerOnce(map, 'idle', () => {\n        maps.event.addDomListener(window, 'resize', () => {\n        map.fitBounds(bounds);\n        });\n    });\n};\n\n// Fit map to its bounds after the api is loaded\nexport const apiIsLoaded = (map, maps, places) => {\n    // Get bounds by our places\n    const bounds = getMapBounds(map, maps, places);\n    // Fit map to bounds\n    map.fitBounds(bounds);\n    // Bind the resize listener\n    bindResizeListener(map, maps, bounds);\n  };"]},"metadata":{},"sourceType":"module"}