{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwelch/WebDev/PDX-NOW/trimet-now/src/App.js\";\nimport React from \"react\"; //import Vehicle from \"./Vehicle\";\n\nimport Map from \"./components/Map\";\nimport Marker from \"./components/Marker\";\nimport \"./App.css\";\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://developer.trimet.org/ws/v2/vehicles/appID/CC57D2038B76DBBD253D6A587\").then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json\n      });\n    });\n  }\n\n  render() {\n    var _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return (// <div class=\"container\">\n        //   {items.resultSet.vehicle.map(item => (\n        //     <Vehicle data={item} />\n        //   ))}\n        // </div>\n        React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(Map, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), console.log(items), items.resultSet.vehicle.map(item => React.createElement(Marker, {\n          key: item.tripID,\n          text: item.signMessageLong,\n          lat: item.latitude,\n          lng: item.latitude,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        })))\n      );\n    }\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/ryanwelch/WebDev/PDX-NOW/trimet-now/src/App.js"],"names":["React","Map","Marker","App","Component","constructor","props","state","items","isLoaded","componentDidMount","fetch","then","res","json","setState","render","console","log","resultSet","vehicle","map","item","tripID","signMessageLong","latitude"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,WAAP;AAEA,OAAO,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CACH,6EADG,CAAL,CAGGC,IAHH,CAGQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHf,EAIGF,IAJH,CAIQE,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AACZN,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA,KAAK,EAAEM;AAFK,OAAd;AAID,KATH;AAUD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,sBACmB,KAAKT,KADxB;AAAA,QACDE,QADC,eACDA,QADC;AAAA,QACSD,KADT,eACSA,KADT;;AAGP,QAAI,CAACC,QAAL,EAAe;AACb,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFD,MAEO;AACL,aACE;AACA;AACA;AACA;AACA;AAEA;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEGQ,OAAO,CAACC,GAAR,CAAYV,KAAZ,CAFH,EAGGA,KAAK,CAACW,SAAN,CAAgBC,OAAhB,CAAwBC,GAAxB,CAA4BC,IAAI,IAC/B,oBAAC,MAAD;AACA,UAAA,GAAG,EAAEA,IAAI,CAACC,MADV;AAEA,UAAA,IAAI,EAAED,IAAI,CAACE,eAFX;AAGA,UAAA,GAAG,EAAEF,IAAI,CAACG,QAHV;AAIA,UAAA,GAAG,EAAEH,IAAI,CAACG,QAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,CAHH;AAPF;AAoBD;AACF;;AAjDsC;AAoDzC,eAAetB,GAAf","sourcesContent":["import React from \"react\";\n//import Vehicle from \"./Vehicle\";\nimport Map from \"./components/Map\";\nimport Marker from \"./components/Marker\";\nimport \"./App.css\";\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\n      \"https://developer.trimet.org/ws/v2/vehicles/appID/CC57D2038B76DBBD253D6A587\"\n    )\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json\n        });\n      });\n  }\n\n  render() {\n    var { isLoaded, items } = this.state;\n\n    if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        // <div class=\"container\">\n        //   {items.resultSet.vehicle.map(item => (\n        //     <Vehicle data={item} />\n        //   ))}\n        // </div>\n\n        <div className=\"container\">\n          <Map/>\n          {console.log(items)}\n          {items.resultSet.vehicle.map(item => (\n            <Marker \n            key={item.tripID}\n            text={item.signMessageLong}\n            lat={item.latitude}\n            lng={item.latitude}\n            />\n          ))}\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}