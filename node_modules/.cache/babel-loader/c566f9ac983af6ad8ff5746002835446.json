{"ast":null,"code":"var _jsxFileName = \"/Users/ryanwelch/WebDev/PDX-NOW/trimet-now/src/Vehicle.js\";\nimport React from 'react';\nimport busImage from \"./mode-bus.png\";\nimport maxImage from \"./mode-max.png\";\n\nfunction getDelayTime(time) {\n  let delay;\n\n  if (time > 0) {\n    delay = \"Ahead of schedule\";\n  } else if (time == 0) {\n    delay = \"On schedule\";\n  } else if (time < 0) {\n    delay = \"Behind schedule\";\n  }\n\n  let minutes = Math.floor(time / 60);\n  let seconds = time - minutes * 60;\n  minutes = Math.abs(minutes);\n  return {\n    delay: delay,\n    min: minutes,\n    sec: seconds\n  };\n}\n\nfunction getTrainName(num) {\n  switch (num) {\n    case 90:\n      return \"red\";\n      break;\n\n    case 100:\n      return \"blue\";\n      break;\n\n    case 200:\n      return \"green\";\n      break;\n\n    case 190:\n      return \"yellow\";\n      break;\n\n    case 290:\n      return \"orange\";\n      break;\n  }\n}\n\nexport class Vehicle extends React.Component {\n  render() {\n    var item = this.props.data;\n    let delayTime = getDelayTime(item.delay);\n\n    if (item.type == \"rail\") {\n      return React.createElement(\"div\", {\n        key: item.tripID,\n        class: \"vehicle train\",\n        \"data-max-line\": getTrainName(item.routeNumber),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: maxImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"route-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, item.signMessageLong), React.createElement(\"div\", {\n        class: \"additional-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"delay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, delayTime['delay'], \" \", delayTime['min'], \" minutes and \", delayTime['sec'], \" seconds\")));\n    } else {\n      return React.createElement(\"div\", {\n        key: item.tripID,\n        class: \"vehicle bus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: busImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Bus \", item.routeNumber), React.createElement(\"div\", {\n        class: \"route-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, item.signMessageLong), React.createElement(\"div\", {\n        class: \"additional-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, item.latitude, \"/\", item.longitude), React.createElement(\"div\", {\n        class: \"delay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, delayTime['delay'], \" \", delayTime['min'], \" minutes and \", delayTime['sec'], \" seconds\")));\n    }\n  }\n\n}\nexport default Vehicle; // all variables:\n// <div>expires: {item.expires}</div>\n// <div>signMessage: {item.signMessage}</div>\n// <div>serviceDate: {item.serviceDate}</div>\n// <div>loadPercentage: {item.loadPercentage}</div>\n// <div>latitude: {item.latitude}</div>\n// <div>nextStopSeq: nextStopSeq{item.nextStopSeq}</div>\n// <div>source: {item.source}</div>\n// <div>type: {item.type}</div>\n// <div>blockID: {item.blockID}</div>\n// <div>signMessageLong: {item.signMessageLong}</div>\n// <div>lastLocID: {item.lastLocID}</div>\n// <div>nextLocID: {item.nextLocID}</div>\n// <div>locationInScheduleDay: {item.locationInScheduleDay}</div>\n// <div>newTrip: {item.newTrip}</div>\n// <div>longitude: {item.longitude}</div>\n// <div>direction: {item.direction}</div>\n// <div>inCongestion: {item.inCongestion}</div>\n// <div>routeNumber: {item.routeNumber}</div>\n// <div>bearing: {item.bearing}</div>\n// <div>garage: {item.garage}</div>\n// <div>tripID: {item.tripID}</div>\n// <div>delay: {item.delay}</div>\n// <div>extraBlockID: {item.extraBlockID}</div>\n// <div>messageCode: {item.messageCode}</div>\n// <div>lastStopSeq: {item.lastStopSeq}</div>\n// <div>vehicleID: {item.vehicleID}</div>\n// <div>time: {item.time}</div>\n// <div>offRoute: {item.offRoute}</div>","map":{"version":3,"sources":["/Users/ryanwelch/WebDev/PDX-NOW/trimet-now/src/Vehicle.js"],"names":["React","busImage","maxImage","getDelayTime","time","delay","minutes","Math","floor","seconds","abs","min","sec","getTrainName","num","Vehicle","Component","render","item","props","data","delayTime","type","tripID","routeNumber","signMessageLong","latitude","longitude"],"mappings":"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","sourcesContent":["import React from 'react';\nimport busImage from \"./mode-bus.png\";\nimport maxImage from \"./mode-max.png\";\n\nfunction getDelayTime(time){\n  let delay;\n  if (time > 0) {\n    delay = \"Ahead of schedule\";\n  } else if (time == 0) {\n    delay = \"On schedule\";\n  } else if (time < 0) {\n    delay = \"Behind schedule\"\n  }\n\n  let minutes = Math.floor(time / 60);\n  let seconds = time - minutes * 60;\n  minutes = Math.abs(minutes)\n  return {delay:delay,min:minutes,sec:seconds}\n}\n\nfunction getTrainName(num) {\n  switch (num) {\n    case 90:\n      return \"red\";\n      break;\n    case 100:\n      return \"blue\";\n      break;\n    case 200:\n      return \"green\";\n      break;\n    case 190:\n      return \"yellow\";\n      break;\n    case 290:\n      return \"orange\";\n      break;\n  }\n}\n\nexport class Vehicle extends React.Component {\n  render() {\n    var item = this.props.data;\n\n    let delayTime = getDelayTime(item.delay);\n\n    if (item.type == \"rail\") {\n      return (\n        <div\n          key={item.tripID}\n          class=\"vehicle train\"\n          data-max-line={getTrainName(item.routeNumber)}\n        >\n          <img src={maxImage} />\n          <div class=\"route-title\">{item.signMessageLong}</div>\n          <div class=\"additional-content\">\n          <div class=\"delay\">{delayTime['delay']} {delayTime['min']} minutes and {delayTime['sec']} seconds</div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div key={item.tripID} class=\"vehicle bus\">\n          <img src={busImage} />\n          <div>Bus {item.routeNumber}</div>\n          <div class=\"route-title\">{item.signMessageLong}</div>\n          <div class=\"additional-content\">\n            <div>\n              {item.latitude}/{item.longitude}\n            </div>\n            <div class=\"delay\">{delayTime['delay']} {delayTime['min']} minutes and {delayTime['sec']} seconds</div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Vehicle;\n\n\n// all variables:\n\n// <div>expires: {item.expires}</div>\n// <div>signMessage: {item.signMessage}</div>\n// <div>serviceDate: {item.serviceDate}</div>\n// <div>loadPercentage: {item.loadPercentage}</div>\n// <div>latitude: {item.latitude}</div>\n// <div>nextStopSeq: nextStopSeq{item.nextStopSeq}</div>\n// <div>source: {item.source}</div>\n// <div>type: {item.type}</div>\n// <div>blockID: {item.blockID}</div>\n// <div>signMessageLong: {item.signMessageLong}</div>\n// <div>lastLocID: {item.lastLocID}</div>\n// <div>nextLocID: {item.nextLocID}</div>\n// <div>locationInScheduleDay: {item.locationInScheduleDay}</div>\n// <div>newTrip: {item.newTrip}</div>\n// <div>longitude: {item.longitude}</div>\n// <div>direction: {item.direction}</div>\n// <div>inCongestion: {item.inCongestion}</div>\n// <div>routeNumber: {item.routeNumber}</div>\n// <div>bearing: {item.bearing}</div>\n// <div>garage: {item.garage}</div>\n// <div>tripID: {item.tripID}</div>\n// <div>delay: {item.delay}</div>\n// <div>extraBlockID: {item.extraBlockID}</div>\n// <div>messageCode: {item.messageCode}</div>\n// <div>lastStopSeq: {item.lastStopSeq}</div>\n// <div>vehicleID: {item.vehicleID}</div>\n// <div>time: {item.time}</div>\n// <div>offRoute: {item.offRoute}</div>\n"]},"metadata":{},"sourceType":"module"}